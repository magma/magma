startup --output_base=/tmp/bazel
startup --host_jvm_args="-Xmx8g"

# STYLE CONFIGS
build --announce_rc
build --color=yes

build:production --config=lsan --strip=never --copt=-O3

# C/C++ CONFIGS
build --cxxopt=-std=c++14
build --experimental_strict_action_env
build --compilation_mode=dbg

# DEFAULT TEST CONFIGURATION
# Please read the GH issue #13073 before adding "test" options.
test --test_output=errors

# Use dynamically linked folly library
build --define=folly_so=1

# MAGMA VM CONFIGS
build:specify_vm_cc --action_env=CC=/usr/bin/gcc
build:vm --config=specify_vm_cc

# DISK CACHE CONFIGS
# The locations of the disk_cache/repository_cache are symlinks in the
# docker containers/magma-vm. They point to the correct cache locations
# $MAGMA/.bazel-cache and $MAGMA/.bazel-cache-repo inside the magma repository.
build:disk_cache --disk_cache=/var/cache/bazel-cache
common:disk_cache --repository_cache=/var/cache/bazel-cache-repo

# REMOTE CACHING READ AND WRITE CONFIGS
# The file bazel/bazelrcs/remote_caching_rw.bazelrc is templated in CI
# The full config is then written to bazel/bazelrcs/cache.bazelrc
build:remote_caching_rw --remote_download_toplevel

# REMOTE CACHING READ-ONLY CONFIGS
# The file bazel/bazelrcs/remote_caching_ro.bazelrc is templated in CI
# The full config is then written to bazel/bazelrcs/cache.bazelrc
build:remote_caching_ro --remote_download_toplevel
build:remote_caching_ro --remote_upload_local_results=false 

# Import the bazel caching config, with default disk cache,
# which in CI gets overwritten by the remote caching config. 
import bazel/bazelrcs/cache.bazelrc

# TEST CONFIGS
# Bazel test runtime default: PATH=/bin:/usr/bin:/usr/local/bin
# Some python tests require access to /usr/sbin binaries (e.g. route, ifconfig)
build --test_env=PATH=/bin:/usr/bin:/usr/local/bin:/usr/sbin
# Use MAGMA_ROOT from the host system in tests.
# Needed by python tests (e.g. freedomfi_one_tests in enodebd)
build --test_env=MAGMA_ROOT

# MME specific compile time defines
# Compile mme libraries with unit test flag
test --per_file_copt=^lte/gateway/c/core/.*$@-DMME_UNIT_TEST  # See GH issue #13073
build:mme_unit_test --per_file_copt=^lte/gateway/c/core/.*$@-DMME_UNIT_TEST  # See GH issue #13073
# TODO: deprecate these flags used for logging if possible
build --per_file_copt=^lte/gateway/c/core/.*$@-DPACKAGE_BUGREPORT=\"TBD\"
build --per_file_copt=^lte/gateway/c/core/.*$@-DPACKAGE_VERSION=\"0.1\"
build --per_file_copt=^lte/gateway/c/core/oai/tasks/amf/.*$@-DPACKAGE_NAME=\"AMF\"
build --per_file_copt=^lte/gateway/c/core/oai/tasks/mme_app/.*$@-DPACKAGE_NAME=\"MME\"
build --per_file_copt=^lte/gateway/c/core/oai/tasks/sgw/.*$@-DPACKAGE_NAME=\"S/P-GW\"

# CODE COVERAGE CONFIGS
build --javacopt="-source 8"
build --javacopt="-target 8"
build --java_runtime_version=remotejdk_11

coverage --config=coverage
build:coverage --combined_report=lcov
build:coverage --instrumentation_filter="//(orc8r|lte)/gateway/(c|python)[/:],-//(orc8r|lte)/protos[/:],-/*/test[/:]"

# ASAN
build:asan --linkopt=-fsanitize=address
build:asan --linkopt=-fsanitize=undefined
build:asan --action_env=ASAN_OPTIONS=detect_leaks=1:color=always
build:asan --per_file_copt=^.*/gateway/c/.*$@-fsanitize=address,-fsanitize=undefined,-O0,-fno-omit-frame-pointer

# LSAN
build:lsan --linkopt=-fsanitize=leak
build:lsan --per_file_copt=^.*/gateway/c/.*$@-fsanitize=leak,-fno-omit-frame-pointer

# Config for running Bazel with limited memory
# see https://bazel.build/docs/memory-saving-mode
# This is helpful for builds on the VM on github runners where only 14g are available.
build:limit_mem --discard_analysis_cache --nokeep_state_after_build --notrack_incremental_state

# Config for turning up more GCC warnings
build:max_gcc_warnings --per_file_copt=^.*/gateway/c/.*$@-Wextra,-Wshadow,-Wimplicit-fallthrough,-Wduplicated-cond,-Wduplicated-branches,-Wlogical-op,-Wnull-dereference,-Wformat=2,-Wstrict-overflow=4,-Wuninitialized,-Wshift-overflow=2

# system bazelrc should include config specific to different build envs (--config=vm, --config=devcontainer, etc.)
try-import /etc/bazelrc
