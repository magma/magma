apiVersion: apps/v1 
kind: Deployment 
metadata: 
  name: elasticsearch
  namespace: default 
spec: 
  selector: 
    matchLabels: 
      component: elasticsearch 
  template: 
    metadata: 
      labels: 
        component: elasticsearch 
    spec: 
      containers: 
      - name: elasticsearch 
        image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1 
        env: 
        - name: discovery.type 
          value: single-node 
        ports: 
        - containerPort: 9200 
          name: http 
          protocol: TCP 
        resources: 
          limits: 
            cpu: 500m 
            memory: 4Gi 
          requests: 
            cpu: 500m 
            memory: 4Gi 
--- 
apiVersion: v1 
kind: Service 
metadata: 
  name: elasticsearch 
  namespace: default
  labels: 
    service: elasticsearch 
spec: 
  type: NodePort 
  selector: 
    component: elasticsearch 
  ports: 
  - port: 9200 
    targetPort: 9200
---
apiVersion: apps/v1 
kind: Deployment 
metadata: 
  name: kibana 
  namespace: default
spec: 
  selector: 
    matchLabels: 
      run: kibana 
  template: 
    metadata: 
      labels: 
        run: kibana 
    spec: 
      containers: 
      - name: kibana 
        image: docker.elastic.co/kibana/kibana:7.9.1
        env: 
        - name: ELASTICSEARCH_URL 
          value: http://elasticsearch:9200 
        - name: XPACK_SECURITY_ENABLED 
          value: "true" 
        ports: 
        - containerPort: 5601 
          name: http 
          protocol: TCP 
--- 
apiVersion: v1 
kind: Service 
metadata: 
  name: kibana 
  namespace: default
  labels: 
    service: kibana 
spec: 
  type: NodePort 
  selector: 
    run: kibana 
  ports: 
  - port: 5601 
    targetPort: 5601
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: default

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - virtualmachineinstance.kubevirt.io
  - pods
  - namespaces
  verbs:
  - get
  - list
  - watch

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: fluentd
  namespace: default
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: default
  labels:
    k8s-app: fluentd-logging
    version: v1
spec:
  selector:
    matchLabels:
      k8s-app: fluentd-logging
      version: v1
  template:
    metadata:
      labels:
        k8s-app: fluentd-logging
        version: v1
    spec:
      serviceAccount: fluentd
      serviceAccountName: fluentd
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      containers:
      - name: fluentd
        image: fluent/fluentd-kubernetes-daemonset:v1-debian-elasticsearch
        env:
          - name:  FLUENT_ELASTICSEARCH_HOST
            value: "elasticsearch"
          - name:  FLUENT_ELASTICSEARCH_PORT
            value: "9200"
          - name: FLUENT_ELASTICSEARCH_SCHEME
            value: "http"
          # Option to configure elasticsearch plugin with self signed certs
          # ================================================================
          - name: FLUENT_ELASTICSEARCH_SSL_VERIFY
            value: "false"
          # Option to configure elasticsearch plugin with tls
          # ================================================================
          #- name: FLUENT_ELASTICSEARCH_SSL_VERSION
          #  value: "TLSv1_2"
          # X-Pack Authentication
          # =====================
          - name: FLUENT_ELASTICSEARCH_USER
            value: "elastic"
          - name: FLUENT_ELASTICSEARCH_PASSWORD
            value: "changeme"
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
