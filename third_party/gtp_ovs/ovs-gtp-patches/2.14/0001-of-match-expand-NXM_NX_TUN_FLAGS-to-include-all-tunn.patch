From 87b8032282d178144bf6cfc78e2f2b96ef13c8c3 Mon Sep 17 00:00:00 2001
From: Pravin B Shelar <pbshelar@fb.com>
Date: Sun, 28 Jun 2020 21:49:40 +0000
Subject: [PATCH 01/19] of-match: expand NXM_NX_TUN_FLAGS to include all tunnel
 flags

This allows OVS flows to match tunnel key and df flags. maching on
key flag is important for GRE tunnel since key is optional field.
so to match on tunnel without any key we need to match on tunnel
flags.

Signed-off-by: Pravin B Shelar <pbshelar@fb.com>
---
 include/openvswitch/meta-flow.h |  2 +-
 include/openvswitch/packets.h   |  4 +--
 lib/netdev-vport.c              |  1 +
 lib/netdev.h                    |  1 +
 ofproto/tunnel.c                | 12 +++++++++
 tests/tunnel-push-pop-ipv6.at   |  2 +-
 tests/tunnel-push-pop.at        |  2 +-
 tests/tunnel.at                 | 48 +++++++++++++++++++++++++++++++++
 8 files changed, 66 insertions(+), 6 deletions(-)

diff --git a/include/openvswitch/meta-flow.h b/include/openvswitch/meta-flow.h
index d529a9f0d..1c5a4930a 100644
--- a/include/openvswitch/meta-flow.h
+++ b/include/openvswitch/meta-flow.h
@@ -380,7 +380,7 @@ enum OVS_PACKED_ENUM mf_field_id {
      *
      * For non-tunneled packets, the value is 0.
      *
-     * Type: be16 (low 1 bits).
+     * Type: be16 (low 4 bits).
      * Maskable: bitwise.
      * Formatting: tunnel flags.
      * Prerequisites: none.
diff --git a/include/openvswitch/packets.h b/include/openvswitch/packets.h
index a65cb0d04..236ae26cc 100644
--- a/include/openvswitch/packets.h
+++ b/include/openvswitch/packets.h
@@ -55,9 +55,7 @@ struct flow_tnl {
 /* Public flags */
 #define FLOW_TNL_F_OAM (1 << 0)
 
-#define FLOW_TNL_PUB_F_MASK ((1 << 1) - 1)
-
-/* Private flags */
+#define FLOW_TNL_PUB_F_MASK ((1 << 4) - 1)
 #define FLOW_TNL_F_DONT_FRAGMENT (1 << 1)
 #define FLOW_TNL_F_CSUM (1 << 2)
 #define FLOW_TNL_F_KEY (1 << 3)
diff --git a/lib/netdev-vport.c b/lib/netdev-vport.c
index 7c99f790d..2a7d14e99 100644
--- a/lib/netdev-vport.c
+++ b/lib/netdev-vport.c
@@ -649,6 +649,7 @@ set_tunnel_config(struct netdev *dev_, const struct smap *args, char **errp)
             if (!strcmp(node->value, "true")) {
                 tnl_cfg.csum = true;
             }
+            tnl_cfg.user_setcsum = true;
         } else if (!strcmp(node->key, "seq") && has_seq) {
             if (!strcmp(node->value, "true")) {
                 tnl_cfg.set_seq = true;
diff --git a/lib/netdev.h b/lib/netdev.h
index fb5073056..c01fa026e 100644
--- a/lib/netdev.h
+++ b/lib/netdev.h
@@ -125,6 +125,7 @@ struct netdev_tunnel_config {
     bool tos_inherit;
 
     bool csum;
+    bool user_setcsum;
     bool dont_fragment;
     enum netdev_pt_mode pt_mode;
 
diff --git a/ofproto/tunnel.c b/ofproto/tunnel.c
index 3455ed233..42a458bbd 100644
--- a/ofproto/tunnel.c
+++ b/ofproto/tunnel.c
@@ -437,6 +437,11 @@ tnl_port_send(const struct ofport_dpif *ofport, struct flow *flow,
         flow->tunnel.tun_id = cfg->out_key;
     }
 
+    if (!cfg->out_key_flow && !cfg->out_key_present) {
+        /* since OAM is never set via OVSDB, do not touch that bit. */
+        flow->tunnel.flags &= FLOW_TNL_F_OAM;
+    }
+
     if (cfg->ttl_inherit && is_ip_any(flow)) {
         wc->masks.nw_ttl = 0xff;
         flow->tunnel.ip_ttl = flow->nw_ttl;
@@ -467,6 +472,13 @@ tnl_port_send(const struct ofport_dpif *ofport, struct flow *flow,
         | (cfg->csum ? FLOW_TNL_F_CSUM : 0)
         | (cfg->out_key_present ? FLOW_TNL_F_KEY : 0);
 
+    if (cfg->user_setcsum) {
+       if (cfg->csum) {
+           flow->tunnel.flags |= FLOW_TNL_F_CSUM;
+       } else {
+           flow->tunnel.flags &= ~FLOW_TNL_F_CSUM;
+       }
+    }
     if (cfg->set_egress_pkt_mark) {
         flow->pkt_mark = cfg->egress_pkt_mark;
         wc->masks.pkt_mark = UINT32_MAX;
diff --git a/tests/tunnel-push-pop-ipv6.at b/tests/tunnel-push-pop-ipv6.at
index 59723e63b..4a0eeaeb3 100644
--- a/tests/tunnel-push-pop-ipv6.at
+++ b/tests/tunnel-push-pop-ipv6.at
@@ -421,7 +421,7 @@ OVS_WAIT_UNTIL([test `wc -l < ofctl_monitor.log` -ge 2])
 OVS_APP_EXIT_AND_WAIT(ovs-ofctl)
 
 AT_CHECK([cat ofctl_monitor.log], [0], [dnl
-NXT_PACKET_IN2 (xid=0x0): cookie=0x0 total_len=98 tun_id=0x7b,tun_ipv6_src=2001:cafe::92,tun_ipv6_dst=2001:cafe::88,tun_metadata0=0xa,in_port=5 (via action) data_len=98 (unbuffered)
+NXT_PACKET_IN2 (xid=0x0): cookie=0x0 total_len=98 tun_id=0x7b,tun_ipv6_src=2001:cafe::92,tun_ipv6_dst=2001:cafe::88,tun_flags=key,tun_metadata0=0xa,in_port=5 (via action) data_len=98 (unbuffered)
 icmp,vlan_tci=0x0000,dl_src=be:b6:f4:e1:49:4a,dl_dst=fe:71:d8:83:72:4f,nw_src=30.0.0.1,nw_dst=30.0.0.2,nw_tos=0,nw_ecn=0,nw_ttl=64,icmp_type=0,icmp_code=0 icmp_csum:4227
 ])
 
diff --git a/tests/tunnel-push-pop.at b/tests/tunnel-push-pop.at
index 48c5de9d1..a87b6777c 100644
--- a/tests/tunnel-push-pop.at
+++ b/tests/tunnel-push-pop.at
@@ -511,7 +511,7 @@ OVS_WAIT_UNTIL([test `wc -l < ofctl_monitor.log` -ge 2])
 OVS_APP_EXIT_AND_WAIT(ovs-ofctl)
 
 AT_CHECK([cat ofctl_monitor.log], [0], [dnl
-NXT_PACKET_IN2 (xid=0x0): cookie=0x0 total_len=98 tun_id=0x7b,tun_src=1.1.2.92,tun_dst=1.1.2.88,tun_metadata0=0xa,in_port=5 (via action) data_len=98 (unbuffered)
+NXT_PACKET_IN2 (xid=0x0): cookie=0x0 total_len=98 tun_id=0x7b,tun_src=1.1.2.92,tun_dst=1.1.2.88,tun_flags=key,tun_metadata0=0xa,in_port=5 (via action) data_len=98 (unbuffered)
 icmp,vlan_tci=0x0000,dl_src=be:b6:f4:e1:49:4a,dl_dst=fe:71:d8:83:72:4f,nw_src=30.0.0.1,nw_dst=30.0.0.2,nw_tos=0,nw_ecn=0,nw_ttl=64,icmp_type=0,icmp_code=0 icmp_csum:4227
 ])
 
diff --git a/tests/tunnel.at b/tests/tunnel.at
index b8ae7caa9..e104b5c8c 100644
--- a/tests/tunnel.at
+++ b/tests/tunnel.at
@@ -1205,3 +1205,51 @@ Datapath actions: push_eth(src=00:00:00:00:00:00,dst=00:00:00:00:00:00),1
 
 OVS_VSWITCHD_STOP
 AT_CLEANUP
+
+AT_SETUP([tunnel - validate tun-flags OAM])
+OVS_VSWITCHD_START([add-port br0 p1 -- set Interface p1 type=geneve \
+                    options:remote_ip=1.1.1.1 options:csum=true ofport_request=1 \
+                    -- add-port br0 p2 -- set Interface p2 type=dummy \
+                    ofport_request=2 ofport_request=2 \
+                    -- add-port br0 p3 -- set Interface p3 type=gre \
+                    options:remote_ip=2.2.2.2 options:csum=false options:key=123 ofport_request=3])
+OVS_VSWITCHD_DISABLE_TUNNEL_PUSH_POP
+
+AT_DATA([flows.txt], [dnl
+actions=load:0x1->NXM_NX_TUN_FLAGS[[]],output:1
+])
+AT_CHECK([ovs-ofctl add-flows br0 flows.txt])
+AT_CHECK([ovs-appctl ofproto/trace ovs-dummy 'in_port(2),eth(src=50:54:00:00:00:05,dst=50:54:00:00:00:07),eth_type(0x0800),ipv4(src=192.168.0.1,dst=192.168.0.2,proto=6,tos=4,ttl=128,frag=no),tcp(src=8,dst=9)'], [0], [stdout])
+AT_CHECK([tail -1 stdout], [0],
+  [Datapath actions: set(tunnel(dst=1.1.1.1,ttl=64,tp_dst=6081,flags(oam|df|csum))),6081
+])
+OVS_VSWITCHD_STOP
+AT_CLEANUP
+
+AT_SETUP([tunnel - validate tun-flags key])
+OVS_VSWITCHD_START([add-port br0 p1 -- set Interface p1 type=geneve \
+                    options:remote_ip=1.1.1.1 options:key=flow options:csum=true ofport_request=1 \
+                    -- add-port br0 p2 -- set Interface p2 type=dummy \
+                    ofport_request=2 ofport_request=2 \
+                    -- add-port br0 p3 -- set Interface p3 type=gre \
+                    options:remote_ip=2.2.2.2 options:csum=false options:key=123 ofport_request=3])
+OVS_VSWITCHD_DISABLE_TUNNEL_PUSH_POP
+
+AT_DATA([flows.txt], [dnl
+actions=load:0x8->NXM_NX_TUN_FLAGS[[]],output:1
+table=2,actions=move:NXM_NX_TUN_FLAGS[[]]->NXM_NX_REG4[[0..3]],output:1
+])
+AT_CHECK([ovs-ofctl add-flows br0 flows.txt])
+
+AT_CHECK([ovs-ofctl dump-flows br0], [0], [stdout])
+AT_CHECK([strip_xids < stdout | sed -n 's/duration=[[0-9]]*\.[[0-9]]*s/duration=0.0s/p' | sort], [0], [dnl
+ cookie=0x0, duration=0.0s, table=0, n_packets=0, n_bytes=0, idle_age=0, actions=load:0x8->NXM_NX_TUN_FLAGS[[]],output:1
+ cookie=0x0, duration=0.0s, table=2, n_packets=0, n_bytes=0, idle_age=0, actions=move:NXM_NX_TUN_FLAGS[[]]->NXM_NX_REG4[[0..3]],output:1
+])
+
+AT_CHECK([ovs-appctl ofproto/trace ovs-dummy 'in_port(2),eth(src=50:54:00:00:00:05,dst=50:54:00:00:00:07),eth_type(0x0800),ipv4(src=192.168.0.1,dst=192.168.0.2,proto=6,tos=4,ttl=128,frag=no),tcp(src=8,dst=9)'], [0], [stdout])
+AT_CHECK([tail -1 stdout], [0],
+  [Datapath actions: set(tunnel(tun_id=0x0,dst=1.1.1.1,ttl=64,tp_dst=6081,flags(df|csum|key))),6081
+])
+OVS_VSWITCHD_STOP
+AT_CLEANUP
-- 
2.17.1

