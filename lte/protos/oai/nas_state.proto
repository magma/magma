syntax = "proto3";

import "lte/protos/oai/common_types.proto";
import "lte/protos/oai/spgw_state.proto";

package magma.lte.oai;
option go_package = "magma/lte/cloud/go/protos/oai";

// Timers for MME and Nas
// mme_app_timer_t and nas_timer_t
message Timer {
  uint64 id = 1;  // long
  uint64 sec = 2; // long
}

/*****************************************************************/
/*           Messages for mobile identity                        */
/*****************************************************************/
// imsi_t or imei_t or imeisv_t
message IdentityTuple {
  bytes value = 1;
  uint32 num_digits = 2;
}

/*****************************************************************/
/*           Messages for tracking area identity                 */
/*****************************************************************/
// partial_tai_list_t
message PartialTaiList {
  uint32 type_of_list = 1;
  uint32 number_of_elements = 2;
  repeated  Tai tai_many_plmn = 3;
  Tai tai_one_plmn_consecutive_tacs = 4;
  bytes plmn = 5;
  repeated uint32 tac = 6;
}

// tai_list_t
message TaiList {
  uint32 numberoflists = 1;
  repeated PartialTaiList partial_tai_lists = 2;
}

// tai_t
message Tai {
  bytes mcc_mnc = 1; // 6 digits representing mcc and mnc
  uint32 tac = 2;
}

/*****************************************************************/
/*                     messages for NAS                          */
/*****************************************************************/

// nas_base_proc_t
message NasBaseProc {
 uint64 nas_puid = 1;
 uint32 type = 2;
}

// nas_emm_proc_t
message NasEmmProc {
  NasBaseProc base_proc = 1;
  uint32 type = 2;
  uint32 previous_emm_fsm_state = 3;
}

// nas_auth_info_proc_t
message AuthInfoProc {
  bool request_sent = 1;
  repeated AuthVector vector = 2;
  uint32 nas_cause = 3;
  uint32 ue_id = 4;
  bool resync = 5;

  Timer timer_s6a = 200;
}

// nas_cn_proc_t
message NasCnProc {
  NasBaseProc base_proc = 1;
  oneof MessageTypes {
    AuthInfoProc auth_info_proc = 2;
  }
}

// MobileStationClassmark2
message MobileStaClassmark2 {
  //TODO
}

// voice_domain_preference_and_ue_usage_setting_t
message VoicePreference {
  // TODO
}

// nas_message_decode_status_t
message NasMsgDecodeStatus {
  uint32 integrity_protected_message = 1;
  uint32 ciphered_message = 2;
  uint32 mac_matched = 3;
  uint32 security_context_available = 4;
  uint32 emm_cause = 5;
}

// drx_parameter_t
message DrxParameter {
  uint32 splitpgcyclecode = 1;
  uint32 cndrx = 2;
  uint32 splitonccch = 3;
  uint32 nondrxtimer = 4;
}

// emm_attach_request_ies_t
message AttachRequestIes {
  bool is_initial = 1;
  uint32 type = 2;
  uint32 additional_update_type = 3;
  bool is_native_sc = 4;
  uint32 ksi = 5;
  bool is_native_guti = 6;
  Guti guti = 7;
  IdentityTuple imsi = 8; // imsi_t
  IdentityTuple imei = 9; // imei_t
  Tai last_visited_tai = 10;
  Tai origin_tai = 11;
  Ecgi origin_ecgi = 12;
  UeNetworkCapability ue_nw_capability = 13;
  DrxParameter drx_parameter = 14;
  bytes esm_msg = 15;
  NasMsgDecodeStatus decode_status = 16;
  MobileStaClassmark2 classmark2 = 17;
  VoicePreference voice_preference = 18;
  UeAdditionalSecurityCapability ue_additional_security_capability = 19;
}

// nas_emm_attach_proc_t
message AttachProc {
  uint32 attach_accept_sent = 1;
  bool attach_reject_sent = 2;
  bool attach_complete_received = 3;
  Guti guti = 4;
  bytes esm_msg_out = 5;
  AttachRequestIes ies = 6;
  uint32 ue_id = 7;
  uint32 ksi = 8;
  uint32 emm_cause = 9;

  Timer t3450 = 200;
}

// emm_detach_request_ies_t
message DetachRequestIes {
  uint32 type = 1;
  bool switch_off = 2;
  bool is_native_sc = 3;
  uint32 ksi = 4;
  Guti guti = 5;
  IdentityTuple imsi = 6;
  IdentityTuple imei = 7;
  NasMsgDecodeStatus decode_status = 8;
}

// emm_tau_request_ies_t
message TauRequestIes {
  // TODO
}

// nas_emm_tau_proc_t
message NasTauProc {
  // TODO
}

// nas_emm_auth_proc_t
message AuthProc {
  uint32 retransmission_count = 1;
  uint32 sync_fail_count = 2;
  uint32 mac_fail_count = 3;
  uint32 ue_id = 4;
  bool is_cause_is_attach = 5;
  uint32 ksi = 6;
  bytes rand = 7;
  bytes autn = 8;
  IdentityTuple unchecked_imsi = 9;
  uint32 emm_cause = 10;

  Timer T3460 = 200;
}

// nas_emm_smc_proc_t
message SmcProc {
  uint32 ue_id = 1;
  uint32 retransmission_count = 2;
  uint32 ksi = 3;
  uint32 eea = 4;
  uint32 eia = 5;
  uint32 ucs2 = 6;
  uint32 uea = 7;
  uint32 uia = 8;
  uint32 gea = 9;
  bool umts_present = 10;
  bool gprs_present = 11;
  uint32 selected_eea = 12;
  uint32 selected_eia = 13;
  uint32 saved_selected_eea = 14;
  uint32 saved_selected_eia = 15;
  uint32 saved_eksi = 16;
  uint32 saved_overflow = 17;
  uint32 saved_seq_num = 18;
  uint32 saved_sc_type = 19;
  bool notify_failure = 20;
  bool is_new = 21;
  bool imeisv_request = 22;
}

// nas_emm_specific_proc_t, nas_emm_common_proc_t, nas_emm_con_mngt_proc_t
message NasEmmProcWithType {
  NasEmmProc emm_proc = 1;
  oneof MessageTypes {
    AttachProc attach_proc = 2;
    DetachRequestIes detach_proc = 3;
    SmcProc smc_proc = 4;
    AuthProc auth_proc = 5;
  }
}

// nas_proc_mess_sign_t
message NasProcMessSign {
  uint64 puid = 1;
  bytes digest = 2;
  uint64 digest_length = 3;
  uint64 nas_msg_length = 4;
}

// emm_procedures_t
message EmmProcedures {
  NasEmmProcWithType emm_specific_proc = 1;
  repeated NasEmmProcWithType emm_common_proc = 2;
  repeated NasCnProc cn_proc = 3;
  NasEmmProcWithType emm_con_mngt_proc = 4;
  uint32 nas_proc_mess_sign_next_location = 5;
  repeated NasProcMessSign nas_proc_mess_sign = 6;
}

// emm_common_data_t
message EmmCommonData {
  uint64 pointer = 200;
}

// emm_security_context_t
message EmmSecurityContext {
  uint32 sc_type = 1;
  uint32 eksi = 2;
  uint32 vector_index = 3;
  bytes knas_enc = 4;
  bytes knas_int = 5;

  // count_s
  message Count {
    uint32 spare = 1;
    uint32 overflow = 2;
    uint32 seq_num = 3;
  }
  Count dl_count = 6;
  Count ul_count = 7;
  Count kenb_ul_count = 8;

  // capability_s
  message Capability {
    uint32 eps_encryption = 1;
    uint32 eps_integirty = 2;
    uint32 umts_encryption = 3;
    uint32 umts_integirty = 4;
    uint32 gprs_encryption = 5;
    bool umts_present = 6;
    bool gprs_present = 7;
  }
  Capability capability = 9;

  // selected_algorithms_s
  message SelectedAlgorithms {
    uint32 encryption = 1;
    uint32 integrity = 2;
  }
  SelectedAlgorithms selected_algos = 10;

  uint32 activated = 11;
  uint32 direction_encode = 12; // SECU_DIRECTION_DOWNLINK, SECU_DIRECTION_UPLINK
  uint32 direction_decode = 13;
  bytes next_hop = 14;
  uint32 next_hop_chaining_count = 15;
}

// auth_vector_t
message AuthVector {
  bytes kasme = 1;
  bytes rand = 2;
  bytes autn = 3;
  bytes xres = 4;
}

// ue_network_capability_t
message UeNetworkCapability {
  uint32 eea = 1;
  uint32 eia = 2;
  uint32 uea = 3;
  uint32 ucs2 = 4;
  uint32 uia = 5;
  uint32 spare = 6 [deprecated = true];
  uint32 csfb = 7;
  uint32 lpp = 8;
  uint32 lcs = 9;
  uint32 srvcc = 10;
  uint32 nf = 11;
  uint32 prosedd = 12;
  uint32 prose = 13;
  uint32 h245ash = 14;
  uint32 epco = 15;
  uint32 hccpciot = 16;
  uint32 erwfopdn = 17;
  uint32 s1udata = 18;
  uint32 upciot = 19;
  bool umts_present = 20;
  bool misc_present = 21 [deprecated = true];
  uint32 cpciot = 22;
  uint32 proserelay = 23;
  uint32 prosedc = 24;
  uint32 bearer = 25;
  uint32 sgc = 26;
  uint32 n1mod = 27;
  uint32 dcnr = 28;
  uint32 cpbackoff = 29;
  uint32 restrictec = 30;
  uint32 v2xpc5 = 31;
  uint32 multipledrb = 32;
  uint32 length = 33;
}

// ue_additional_security_capability_t
message UeAdditionalSecurityCapability {
  uint32 ea = 1;
  uint32 ia = 2;
}

// bearer_qos_t
message BearerQos {
  uint32 pci = 1;
  uint32 pl = 2;
  uint32 pvi = 3;
  uint32 qci = 4;
  Ambr gbr = 5;
  Ambr mbr = 6;
}

// pco_protocol_or_container_id_t
message PcoProtocolOrContainerId {
  uint32 id = 1;
  uint32 length = 2;
  bytes contents = 3;
}

// protocol_configuration_options_t
message ProtocolConfigurationOptions {
  uint32 ext = 1;
  uint32 spare = 2;
  uint32 config_protocol = 3;
  uint32 num_protocol_or_container_id = 4;
  repeated PcoProtocolOrContainerId proto_or_container_id = 5;
}

// 3485 and 3495 Timer argument
message EsmEbrTimerData {
  uint32 ue_id = 1;
  uint32 ebi = 2;
  uint32 count = 3;
  bytes esm_msg = 4;
}

// esm_proc_data_t
message EsmProcData {
  uint32 pti= 1;
  uint32 request_type= 2;
  string apn= 3;
  uint32 pdn_cid= 4;
  uint32 pdn_type = 5; // esm_proc_pdn_type_t
  string pdn_addr= 6;
  BearerQos bearer_qos= 7;
  ProtocolConfigurationOptions pco= 8;
}

// esm_context_t
message EsmContext {
  uint32 n_active_ebrs = 1;
// field 2 and 3 are deprecated
  bool is_emergency = 4;
  EsmProcData esm_proc_data = 5;

  Timer t3489 = 199;
  bool is_standalone = 200 [deprecated=true];
  bool is_pdn_disconnect = 201;
  int32 pending_standalone = 202;
}

// esm_ebr_context_t
message EsmEbrContext {
  uint32 status = 1; // esm_ebr_state
  uint64 gbr_dl = 2;
  uint64 gbr_ul = 3;
  uint64 mbr_dl = 4;
  uint64 mbr_ul = 5;
  TrafficFlowTemplate tft = 6;
  ProtocolConfigurationOptions pco = 7;
  Timer timer = 100; // nas_timer_t
  EsmEbrTimerData esm_ebr_timer_data = 101;
}

// t3422_arg is nw_detach_data_t
 message NwDetachData {
  uint32 ue_id = 1;
  uint32 retransmission_count = 2;
  uint32 detach_type = 3;
}

// Re-transmitted Attach Req info
message NewAttachInfo {
  uint32 mme_ue_s1ap_id = 1;
  bool is_mm_ctx_new = 2;
  AttachRequestIes ies = 3;
}

// emm_context_t
message EmmContext {
  uint64 imsi64 = 1; //imsi64_t
  IdentityTuple imsi = 2; // imsi_t
  uint64 saved_imsi64 = 3;
  IdentityTuple imei = 4; //imei_t
  IdentityTuple imeisv = 5; // imeisv_t
  uint32 emm_cause = 6;
  uint32 emm_fsm_state = 7; // emm_fsm_state_t
  uint32 attach_type = 8;

  EmmProcedures emm_procedures = 11;
  uint32 common_proc_mask = 12;
  EsmContext esm_ctx = 13;

  uint32 member_present_mask = 21;
  uint32 member_valid_mask = 22;

  repeated AuthVector vector = 23;
  EmmSecurityContext security = 24;
  EmmSecurityContext _non_current_security = 25;

  bool is_dynamic = 31;
  bool is_attached = 32;
  bool is_initial_identity_imsi = 33;
  bool is_guti_based_attach = 34;
  bool is_guti_set = 35;
  bool is_imsi_only_detach = 36;
  bool is_emergency = 37;

  uint32 additional_update_type = 41;
  uint32 tau_updt_type = 42;
  uint32 num_attach_request = 43;

  Guti guti = 51;
  Guti old_guti = 52;

  TaiList tai_list = 61;
  Tai lvr_tai = 62;
  Tai originating_tai = 63;
  uint32 ksi = 64;

  UeNetworkCapability ue_network_capability = 65;
  NwDetachData nw_detach_data = 66;
  NewAttachInfo new_attach_info = 67;
  UeAdditionalSecurityCapability ue_additional_security_capability = 68;
  // TODO: add remaining emm_context elements
  }
