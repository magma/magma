# Copyright 2021 The Magma Authors.

# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_proto//proto:defs.bzl", "proto_library")
load("@rules_proto_grpc//cpp:defs.bzl", "cpp_proto_library")
load("@rules_proto_grpc//python:defs.bzl", "python_proto_library")

package(default_visibility = ["//visibility:public"])

proto_library(
    name = "common_types_proto",
    srcs = ["common_types.proto"],
)

cpp_proto_library(
    name = "common_types_cpp_proto",
    protos = [":common_types_proto"],
)

proto_library(
    name = "nas_state_proto",
    srcs = ["nas_state.proto"],
    deps = [
        ":common_types_proto",
        ":spgw_state_proto",
    ],
)

cpp_proto_library(
    name = "nas_state_cpp_proto",
    protos = [":nas_state_proto"],
    deps = [
        ":common_types_cpp_proto",
        ":spgw_state_cpp_proto",
    ],
)

proto_library(
    name = "spgw_state_proto",
    srcs = ["spgw_state.proto"],
    deps = [
        ":common_types_proto",
        ":std_3gpp_types_proto",
    ],
)

cpp_proto_library(
    name = "spgw_state_cpp_proto",
    protos = [":spgw_state_proto"],
    deps = [
        ":common_types_cpp_proto",
        ":std_3gpp_types_cpp_proto",
    ],
)

proto_library(
    name = "std_3gpp_types_proto",
    srcs = ["std_3gpp_types.proto"],
    deps = [":common_types_proto"],
)

cpp_proto_library(
    name = "std_3gpp_types_cpp_proto",
    protos = [":std_3gpp_types_proto"],
)

proto_library(
    name = "mme_nas_state_proto",
    srcs = ["mme_nas_state.proto"],
    deps = [
        ":common_types_proto",
        ":nas_state_proto",
        ":spgw_state_proto",
        ":std_3gpp_types_proto",
        "@com_google_protobuf//:timestamp_proto",
    ],
)

cpp_proto_library(
    name = "mme_nas_state_cpp_proto",
    protos = [":mme_nas_state_proto"],
    deps = [
        ":common_types_cpp_proto",
        ":nas_state_cpp_proto",
        ":std_3gpp_types_cpp_proto",
    ],
)

python_proto_library(
    name = "spgw_state_python_proto",
    protos = [":spgw_state_proto"],
    deps = [
        ":common_types_python_proto",
        ":std_3gpp_types_python_proto",
    ],
)

python_proto_library(
    name = "nas_state_python_proto",
    protos = [":nas_state_proto"],
    deps = [
        ":common_types_python_proto",
        ":spgw_state_python_proto",
    ],
)

python_proto_library(
    name = "common_types_python_proto",
    protos = [":common_types_proto"],
)

python_proto_library(
    name = "std_3gpp_types_python_proto",
    protos = [":std_3gpp_types_proto"],
)

python_proto_library(
    name = "mme_nas_state_python_proto",
    protos = [":mme_nas_state_proto"],
    deps = [
        ":common_types_python_proto",
        ":nas_state_python_proto",
        ":std_3gpp_types_python_proto",
    ],
)

python_proto_library(
    name = "s1ap_state_python_proto",
    protos = [":s1ap_state_proto"],
)

proto_library(
    name = "s1ap_state_proto",
    srcs = ["s1ap_state.proto"],
)

cpp_proto_library(
    name = "s1ap_state_cpp_proto",
    protos = [":s1ap_state_proto"],
)

proto_library(
    name = "sgw_state_proto",
    srcs = ["sgw_state.proto"],
    deps = [
        ":common_types_proto",
        ":spgw_state_proto",
        ":std_3gpp_types_proto",
    ],
)

cpp_proto_library(
    name = "sgw_state_cpp_proto",
    protos = [":sgw_state_proto"],
    deps = [
        ":common_types_cpp_proto",
        ":spgw_state_cpp_proto",
        ":std_3gpp_types_cpp_proto",
    ],
)

proto_library(
    name = "ngap_state_proto",
    srcs = ["ngap_state.proto"],
)

cpp_proto_library(
    name = "ngap_state_cpp_proto",
    protos = [":ngap_state_proto"],
)

# This proto library is exclusively meant for the state service.
# Users can manually add proto libraries to state.yml.
# This means that all proto libraries need to be available
# in builds of the state service.
proto_library(
    name = "all_proto",
    srcs = glob(["*.proto"]),
    visibility = ["//visibility:private"],
    deps = ["@com_google_protobuf//:timestamp_proto"],
)

# See comment at :all_proto
python_proto_library(
    name = "all_python_proto",
    protos = [":all_proto"],
    visibility = ["//orc8r/gateway/python/magma/state:__pkg__"],
)
