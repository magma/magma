syntax = "proto3";

package magma.lte.oai;
option go_package = "magma/lte/cloud/go/protos/oai";

message S1apTimer {
  int32 id = 1;  // long
  int32 sec = 2 [deprecated = true]; // long
  int32 msec = 3; // long
}

message SupportedTaiItems {
  uint32 tac = 1;
  uint32 bplmnlist_count = 2;
  repeated bytes bplmns = 3;
}

// supported_ta_list_t
message SupportedTaList {
  uint32 list_count = 1;
  repeated SupportedTaiItems supported_tai_items = 2;
}

message EnbDescription {
  uint32 enb_id = 1;

  int32 s1_state = 2;            // enum mme_s1_enb_state_s
  bytes enb_name = 3;            // char[]
  uint32 default_paging_drx = 4; // uint8_t
  uint32 nb_ue_associated = 5;

  uint32 sctp_assoc_id = 6;    // sctp_assoc_id_t
  uint32 next_sctp_stream = 7; // sctp_stream_id_t
  uint32 instreams = 8;        // sctp_stream_id_t
  uint32 outstreams = 9;      // sctp_stream_id_t

  map<uint64, uint64> ue_ids = 10 [deprecated = true]; // mme_ue_s1ap_id -> comp_s1ap_id
  SupportedTaList supported_ta_list = 11; // TAs supported by eNB
  bytes ran_cp_ipaddr = 12; // eNB sctp end point IP addr
  uint32 ran_cp_ipaddr_sz = 13; // eNB sctp end point IP addr size
  map<uint32, uint64> ue_id_map = 14; // mme_ue_s1ap_id -> comp_s1ap_id
}

message UeDescription {
  int32 s1_ue_state = 2;     // enum s1_ue_state_s
  uint32 enb_ue_s1ap_id = 3; // enb_ue_s1ap_id_t
  uint32 mme_ue_s1ap_id = 4; // mme_ue_s1ap_id_t

  uint32 sctp_stream_recv = 5; // sctp_stream_id_t
  uint32 sctp_stream_send = 6; // sctp_stream_id_t

  S1apTimer s1ap_ue_context_rel_timer = 7; // struct s1ap_timer_t

  uint32 sctp_assoc_id = 8; // sctp_assoc_id_t

  S1apHandoverState s1ap_handover_state = 9; // s1ap_handover_state_t
}

message S1apState {
  map<uint32, EnbDescription> enbs = 1;  // enbid -> EnbDescription
  map<uint32, uint32> mmeid2associd = 2; // mmeueid -> ue associd
  uint32 num_enbs = 3;
}

message S1apImsiMap {
  map<uint64, uint64> mme_ue_id_imsi_map = 1; // mme_s1ap_ue_id => IMSI64
}

message S1apHandoverState {
  uint32 mme_ue_s1ap_id = 1;
  uint32 source_enb_id = 2;
  uint32 target_enb_id = 3;
  uint32 target_enb_ue_s1ap_id = 4; // enb_ue_s1ap_id_t
  uint32 target_sctp_stream_recv = 5; // sctp_stream_id_t
  uint32 target_sctp_stream_send = 6; // sctp_stream_id_t
}
