/*
 * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The OpenAirInterface Software Alliance licenses this file to You under
 * the terms found in the LICENSE file in the root of this source tree.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *------------------------------------------------------------------------------
 * For more information about the OpenAirInterface (OAI) Software Alliance:
 *      contact@openairinterface.org
 */

syntax = "proto3";

import "lte/protos/oai/common_types.proto";
import "lte/protos/oai/std_3gpp_types.proto";

package magma.lte.oai;
option go_package = "magma/lte/cloud/go/protos/oai";

// sgw_bearer_context_information
message SgwEpsBearerContextInfo {
    bytes imsi = 1;
    uint32 imsi_unauth_indicator = 2;
    string msisdn = 3;
    Ecgi last_known_cell_id = 4;
    bytes trxn = 5;
    uint64 imsi64 = 6;

    uint32 mme_teid_s11 = 10; // teid_t
    bytes mme_ip_address_s11 = 11;

    uint32 sgw_teid_s11_s4 = 15;
    bytes sgw_ip_address_s11_s4 = 16;

    SgwPdnConnection pdn_connection = 20;
    CreateSessionMessage saved_message = 21;
    repeated PgwCbrProcedure pending_procedures = 22;
}

// pgw_ni_cbr_proc_t
message PgwCbrProcedure {
    uint32 teid = 1;
    uint32 sdf_id = 2;
    uint32 type = 3;
    repeated SgwEpsBearerContext pending_eps_bearers = 4;
}

// ServingNetwork_t
message ServingNetwork {
    bytes mcc = 1;
    bytes mnc = 2;
}

// UETimeZone_t
message TimeZone {
    uint32 time_zone = 1;
    uint32 daylight_saving_time = 2;
}

// itti_s11_create_session_request_t
message CreateSessionMessage {
    bytes trxn = 1;
    uint32 teid = 2;
    bytes imsi = 3;
    bytes msisdn = 4;
    bytes mei = 5;
    bytes uli = 6;

    ServingNetwork serving_network = 7;

    uint32 rat_type = 10;
    uint32 pdn_type = 11;
    bytes apn = 12;
    bytes paa = 13;
    Ambr ambr = 14;

    Pco pco = 15;
    Fteid sender_fteid_for_cp = 16;

    repeated BearerContextToBeCreated bearer_contexts_to_be_created = 20;
    uint32 peer_ip = 21;

    TimeZone ue_time_zone = 22;

    string charging_characteristics = 23; // Taken from S6A UpdateLocationAnswer
}

// bearer_context_to_be_created_t
message BearerContextToBeCreated {
    uint32 eps_bearer_id = 1;
    TrafficFlowTemplate tft = 2;
    SgwBearerQos bearer_level_qos = 3;
}

// pgw_eps_bearer_context_information
message PgwEpsBearerContextInfo {
    bytes imsi = 1;
    uint32 imsi_unauth_indicator = 2;
    string msisdn = 3;
}

// sgw_pdn_connection
message SgwPdnConnection {
    string apn_in_use = 1;
    bytes pgw_address_in_use_cp = 2;
    bytes pgw_address_in_use_up = 3;

    uint32 default_bearer = 10;
    bool ue_suspended_for_ps_handover = 11;

    repeated SgwEpsBearerContext eps_bearer_list = 15;
}

// sgw_eps_bearer_ctxt_t
message SgwEpsBearerContext {
    uint32 eps_bearer_id = 1;
    bytes paa = 2;

    bytes pgw_address_in_use_up = 10;
    uint32 pgw_teid_s5_s8_up = 11;
    bytes sgw_ip_address_s5_s8_up = 12;
    uint32 sgw_teid_s5_s8_up = 13;
    bytes sgw_ip_address_s1u_s12_s4_up = 14;
    uint32 sgw_teid_s1u_s12_s4_up = 15;
    bytes enb_ip_address_s1u = 16;
    uint32 enb_teid_s1u = 17;

    SgwBearerQos eps_bearer_qos = 20;
    TrafficFlowTemplate tft = 21;

    uint32 num_sdf = 25;
    repeated uint32 sdf_ids = 26;

    string policy_rule_name = 27;
}

// traffic_flow_template
message TrafficFlowTemplate {
    PacketFilterList packet_filter_list = 1;
    ParametersList parameters_list = 2;
    uint32 tft_operation_code = 3;
    uint32 number_of_packet_filters = 4;
    uint32 ebit = 5;
}

// packet_filter_list
message PacketFilterList {
    repeated PacketFilter create_new_tft = 1;
    repeated PacketFilter add_packet_filter = 2;
    repeated PacketFilter replace_packet_filter = 3;
    repeated uint32 delete_packet_filter_identifier = 4;
}

// packet_filter
message PacketFilter {
    uint32 spare = 1;
    uint32 direction = 2;
    uint32 identifier = 3;
    uint32 eval_precedence = 4;
    uint32 length = 5;
    PacketFilterContents packet_filter_contents = 6;
}

// eps_bearer_qos_t
message SgwBearerQos {
    uint32 pci = 1;
    uint32 pl = 2;
    uint32 pvi = 3;
    uint32 qci = 5;

    Ambr gbr = 10;
    Ambr mbr = 11;
}

message SpgwUeContext {
  repeated S11BearerContext s11_bearer_context = 1;
}

// s_plus_p_gw_eps_bearer_context_information
message S11BearerContext {
    SgwEpsBearerContextInfo sgw_eps_bearer_context = 1;
    PgwEpsBearerContextInfo pgw_eps_bearer_context = 2;
}

// gtvpv1u_data
message GTPV1uData {
    string ip_address = 1      [deprecated = true];
    uint32 seq_num = 2         [deprecated = true];
    uint32 restart_counter = 3 [deprecated = true];

    uint32 fd0 = 4;
    uint32 fd1u = 5;
}

message SpgwState {
    uint32 gtpv1u_teid = 2;

    repeated uint64 ipv4_list_free = 5;
    repeated uint64 ipv4_list_allocated = 6;
    GTPV1uData gtpv1u_data = 7;
}
