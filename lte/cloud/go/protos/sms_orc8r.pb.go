//
//Copyright 2020 The Magma Authors.
//
//This source code is licensed under the BSD-style license found in the
//LICENSE file in the root directory of this source tree.
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: lte/protos/sms_orc8r.proto

package protos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	protos "magma/orc8r/lib/go/protos"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// section 8.4
type SMODownlinkUnitdata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi                string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	NasMessageContainer []byte `protobuf:"bytes,2,opt,name=nas_message_container,json=nasMessageContainer,proto3" json:"nas_message_container,omitempty"`
}

func (x *SMODownlinkUnitdata) Reset() {
	*x = SMODownlinkUnitdata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_sms_orc8r_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMODownlinkUnitdata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMODownlinkUnitdata) ProtoMessage() {}

func (x *SMODownlinkUnitdata) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_sms_orc8r_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMODownlinkUnitdata.ProtoReflect.Descriptor instead.
func (*SMODownlinkUnitdata) Descriptor() ([]byte, []int) {
	return file_lte_protos_sms_orc8r_proto_rawDescGZIP(), []int{0}
}

func (x *SMODownlinkUnitdata) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *SMODownlinkUnitdata) GetNasMessageContainer() []byte {
	if x != nil {
		return x.NasMessageContainer
	}
	return nil
}

// section 8.22
type SMOUplinkUnitdata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi                    string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	NasMessageContainer     []byte `protobuf:"bytes,2,opt,name=nas_message_container,json=nasMessageContainer,proto3" json:"nas_message_container,omitempty"`
	Imeisv                  []byte `protobuf:"bytes,3,opt,name=imeisv,proto3" json:"imeisv,omitempty"`
	UeTimeZone              []byte `protobuf:"bytes,4,opt,name=ue_time_zone,json=ueTimeZone,proto3" json:"ue_time_zone,omitempty"`
	MobileStationClassmark2 []byte `protobuf:"bytes,5,opt,name=mobile_station_classmark2,json=mobileStationClassmark2,proto3" json:"mobile_station_classmark2,omitempty"`
	Tai                     []byte `protobuf:"bytes,6,opt,name=tai,proto3" json:"tai,omitempty"`
	ECgi                    []byte `protobuf:"bytes,7,opt,name=e_cgi,json=eCgi,proto3" json:"e_cgi,omitempty"`
}

func (x *SMOUplinkUnitdata) Reset() {
	*x = SMOUplinkUnitdata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_sms_orc8r_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMOUplinkUnitdata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMOUplinkUnitdata) ProtoMessage() {}

func (x *SMOUplinkUnitdata) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_sms_orc8r_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMOUplinkUnitdata.ProtoReflect.Descriptor instead.
func (*SMOUplinkUnitdata) Descriptor() ([]byte, []int) {
	return file_lte_protos_sms_orc8r_proto_rawDescGZIP(), []int{1}
}

func (x *SMOUplinkUnitdata) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *SMOUplinkUnitdata) GetNasMessageContainer() []byte {
	if x != nil {
		return x.NasMessageContainer
	}
	return nil
}

func (x *SMOUplinkUnitdata) GetImeisv() []byte {
	if x != nil {
		return x.Imeisv
	}
	return nil
}

func (x *SMOUplinkUnitdata) GetUeTimeZone() []byte {
	if x != nil {
		return x.UeTimeZone
	}
	return nil
}

func (x *SMOUplinkUnitdata) GetMobileStationClassmark2() []byte {
	if x != nil {
		return x.MobileStationClassmark2
	}
	return nil
}

func (x *SMOUplinkUnitdata) GetTai() []byte {
	if x != nil {
		return x.Tai
	}
	return nil
}

func (x *SMOUplinkUnitdata) GetECgi() []byte {
	if x != nil {
		return x.ECgi
	}
	return nil
}

type ReportDeliveryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportDeliveryResponse) Reset() {
	*x = ReportDeliveryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_sms_orc8r_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportDeliveryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportDeliveryResponse) ProtoMessage() {}

func (x *ReportDeliveryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_sms_orc8r_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportDeliveryResponse.ProtoReflect.Descriptor instead.
func (*ReportDeliveryResponse) Descriptor() ([]byte, []int) {
	return file_lte_protos_sms_orc8r_proto_rawDescGZIP(), []int{2}
}

type ReportDeliveryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Report *SMOUplinkUnitdata `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"`
}

func (x *ReportDeliveryRequest) Reset() {
	*x = ReportDeliveryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_sms_orc8r_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportDeliveryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportDeliveryRequest) ProtoMessage() {}

func (x *ReportDeliveryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_sms_orc8r_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportDeliveryRequest.ProtoReflect.Descriptor instead.
func (*ReportDeliveryRequest) Descriptor() ([]byte, []int) {
	return file_lte_protos_sms_orc8r_proto_rawDescGZIP(), []int{3}
}

func (x *ReportDeliveryRequest) GetReport() *SMOUplinkUnitdata {
	if x != nil {
		return x.Report
	}
	return nil
}

type GetMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsis []string `protobuf:"bytes,1,rep,name=imsis,proto3" json:"imsis,omitempty"`
}

func (x *GetMessagesRequest) Reset() {
	*x = GetMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_sms_orc8r_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesRequest) ProtoMessage() {}

func (x *GetMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_sms_orc8r_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetMessagesRequest) Descriptor() ([]byte, []int) {
	return file_lte_protos_sms_orc8r_proto_rawDescGZIP(), []int{4}
}

func (x *GetMessagesRequest) GetImsis() []string {
	if x != nil {
		return x.Imsis
	}
	return nil
}

type GetMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*SMODownlinkUnitdata `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *GetMessagesResponse) Reset() {
	*x = GetMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_sms_orc8r_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesResponse) ProtoMessage() {}

func (x *GetMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_sms_orc8r_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetMessagesResponse) Descriptor() ([]byte, []int) {
	return file_lte_protos_sms_orc8r_proto_rawDescGZIP(), []int{5}
}

func (x *GetMessagesResponse) GetMessages() []*SMODownlinkUnitdata {
	if x != nil {
		return x.Messages
	}
	return nil
}

var File_lte_protos_sms_orc8r_proto protoreflect.FileDescriptor

var file_lte_protos_sms_orc8r_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6c, 0x74, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x6d, 0x73,
	0x5f, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6d, 0x61,
	0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x1a, 0x19, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x5d, 0x0a, 0x13, 0x53, 0x4d, 0x4f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e,
	0x6b, 0x55, 0x6e, 0x69, 0x74, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x32, 0x0a,
	0x15, 0x6e, 0x61, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x6e, 0x61,
	0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x22, 0xf8, 0x01, 0x0a, 0x11, 0x53, 0x4d, 0x4f, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x55,
	0x6e, 0x69, 0x74, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x32, 0x0a, 0x15, 0x6e,
	0x61, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x6e, 0x61, 0x73, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x6d, 0x65, 0x69, 0x73, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x69, 0x6d, 0x65, 0x69, 0x73, 0x76, 0x12, 0x20, 0x0a, 0x0c, 0x75, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x75,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x6d, 0x61, 0x72, 0x6b, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x17, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x6d, 0x61, 0x72, 0x6b, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x69, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x74, 0x61, 0x69, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x5f, 0x63, 0x67, 0x69,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x65, 0x43, 0x67, 0x69, 0x22, 0x18, 0x0a, 0x16,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0x0a, 0x15, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x53, 0x4d, 0x4f, 0x55,
	0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x6e, 0x69, 0x74, 0x64, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x2a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6d, 0x73, 0x69, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x73, 0x69,
	0x73, 0x22, 0x51, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x67,
	0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x53, 0x4d, 0x4f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69,
	0x6e, 0x6b, 0x55, 0x6e, 0x69, 0x74, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x32, 0x51, 0x0a, 0x0f, 0x53, 0x4d, 0x53, 0x4f, 0x72, 0x63, 0x38, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x53, 0x4d, 0x4f, 0x55, 0x70,
	0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65,
	0x2e, 0x53, 0x4d, 0x4f, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x6e, 0x69, 0x74, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72,
	0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x32, 0x5c, 0x0a, 0x16, 0x53, 0x4d, 0x53, 0x4f, 0x72,
	0x63, 0x38, 0x72, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x42, 0x0a, 0x0b, 0x53, 0x4d, 0x4f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b,
	0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x53, 0x4d, 0x4f,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x6e, 0x69, 0x74, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x56,
	0x6f, 0x69, 0x64, 0x22, 0x00, 0x32, 0xaf, 0x01, 0x0a, 0x04, 0x53, 0x6d, 0x73, 0x44, 0x12, 0x57,
	0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x12, 0x20, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c,
	0x74, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1b, 0x5a, 0x19, 0x6d, 0x61, 0x67, 0x6d, 0x61,
	0x2f, 0x6c, 0x74, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lte_protos_sms_orc8r_proto_rawDescOnce sync.Once
	file_lte_protos_sms_orc8r_proto_rawDescData = file_lte_protos_sms_orc8r_proto_rawDesc
)

func file_lte_protos_sms_orc8r_proto_rawDescGZIP() []byte {
	file_lte_protos_sms_orc8r_proto_rawDescOnce.Do(func() {
		file_lte_protos_sms_orc8r_proto_rawDescData = protoimpl.X.CompressGZIP(file_lte_protos_sms_orc8r_proto_rawDescData)
	})
	return file_lte_protos_sms_orc8r_proto_rawDescData
}

var file_lte_protos_sms_orc8r_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_lte_protos_sms_orc8r_proto_goTypes = []interface{}{
	(*SMODownlinkUnitdata)(nil),    // 0: magma.lte.SMODownlinkUnitdata
	(*SMOUplinkUnitdata)(nil),      // 1: magma.lte.SMOUplinkUnitdata
	(*ReportDeliveryResponse)(nil), // 2: magma.lte.ReportDeliveryResponse
	(*ReportDeliveryRequest)(nil),  // 3: magma.lte.ReportDeliveryRequest
	(*GetMessagesRequest)(nil),     // 4: magma.lte.GetMessagesRequest
	(*GetMessagesResponse)(nil),    // 5: magma.lte.GetMessagesResponse
	(*protos.Void)(nil),            // 6: magma.orc8r.Void
}
var file_lte_protos_sms_orc8r_proto_depIdxs = []int32{
	1, // 0: magma.lte.ReportDeliveryRequest.report:type_name -> magma.lte.SMOUplinkUnitdata
	0, // 1: magma.lte.GetMessagesResponse.messages:type_name -> magma.lte.SMODownlinkUnitdata
	1, // 2: magma.lte.SMSOrc8rService.SMOUplink:input_type -> magma.lte.SMOUplinkUnitdata
	0, // 3: magma.lte.SMSOrc8rGatewayService.SMODownlink:input_type -> magma.lte.SMODownlinkUnitdata
	3, // 4: magma.lte.SmsD.ReportDelivery:input_type -> magma.lte.ReportDeliveryRequest
	4, // 5: magma.lte.SmsD.GetMessages:input_type -> magma.lte.GetMessagesRequest
	6, // 6: magma.lte.SMSOrc8rService.SMOUplink:output_type -> magma.orc8r.Void
	6, // 7: magma.lte.SMSOrc8rGatewayService.SMODownlink:output_type -> magma.orc8r.Void
	2, // 8: magma.lte.SmsD.ReportDelivery:output_type -> magma.lte.ReportDeliveryResponse
	5, // 9: magma.lte.SmsD.GetMessages:output_type -> magma.lte.GetMessagesResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_lte_protos_sms_orc8r_proto_init() }
func file_lte_protos_sms_orc8r_proto_init() {
	if File_lte_protos_sms_orc8r_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lte_protos_sms_orc8r_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMODownlinkUnitdata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_sms_orc8r_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMOUplinkUnitdata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_sms_orc8r_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportDeliveryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_sms_orc8r_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportDeliveryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_sms_orc8r_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_sms_orc8r_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lte_protos_sms_orc8r_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_lte_protos_sms_orc8r_proto_goTypes,
		DependencyIndexes: file_lte_protos_sms_orc8r_proto_depIdxs,
		MessageInfos:      file_lte_protos_sms_orc8r_proto_msgTypes,
	}.Build()
	File_lte_protos_sms_orc8r_proto = out.File
	file_lte_protos_sms_orc8r_proto_rawDesc = nil
	file_lte_protos_sms_orc8r_proto_goTypes = nil
	file_lte_protos_sms_orc8r_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SMSOrc8RServiceClient is the client API for SMSOrc8RService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SMSOrc8RServiceClient interface {
	SMOUplink(ctx context.Context, in *SMOUplinkUnitdata, opts ...grpc.CallOption) (*protos.Void, error)
}

type sMSOrc8RServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSMSOrc8RServiceClient(cc grpc.ClientConnInterface) SMSOrc8RServiceClient {
	return &sMSOrc8RServiceClient{cc}
}

func (c *sMSOrc8RServiceClient) SMOUplink(ctx context.Context, in *SMOUplinkUnitdata, opts ...grpc.CallOption) (*protos.Void, error) {
	out := new(protos.Void)
	err := c.cc.Invoke(ctx, "/magma.lte.SMSOrc8rService/SMOUplink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SMSOrc8RServiceServer is the server API for SMSOrc8RService service.
type SMSOrc8RServiceServer interface {
	SMOUplink(context.Context, *SMOUplinkUnitdata) (*protos.Void, error)
}

// UnimplementedSMSOrc8RServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSMSOrc8RServiceServer struct {
}

func (*UnimplementedSMSOrc8RServiceServer) SMOUplink(context.Context, *SMOUplinkUnitdata) (*protos.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SMOUplink not implemented")
}

func RegisterSMSOrc8RServiceServer(s *grpc.Server, srv SMSOrc8RServiceServer) {
	s.RegisterService(&_SMSOrc8RService_serviceDesc, srv)
}

func _SMSOrc8RService_SMOUplink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SMOUplinkUnitdata)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SMSOrc8RServiceServer).SMOUplink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.SMSOrc8rService/SMOUplink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SMSOrc8RServiceServer).SMOUplink(ctx, req.(*SMOUplinkUnitdata))
	}
	return interceptor(ctx, in, info, handler)
}

var _SMSOrc8RService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.lte.SMSOrc8rService",
	HandlerType: (*SMSOrc8RServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SMOUplink",
			Handler:    _SMSOrc8RService_SMOUplink_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lte/protos/sms_orc8r.proto",
}

// SMSOrc8RGatewayServiceClient is the client API for SMSOrc8RGatewayService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SMSOrc8RGatewayServiceClient interface {
	SMODownlink(ctx context.Context, in *SMODownlinkUnitdata, opts ...grpc.CallOption) (*protos.Void, error)
}

type sMSOrc8RGatewayServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSMSOrc8RGatewayServiceClient(cc grpc.ClientConnInterface) SMSOrc8RGatewayServiceClient {
	return &sMSOrc8RGatewayServiceClient{cc}
}

func (c *sMSOrc8RGatewayServiceClient) SMODownlink(ctx context.Context, in *SMODownlinkUnitdata, opts ...grpc.CallOption) (*protos.Void, error) {
	out := new(protos.Void)
	err := c.cc.Invoke(ctx, "/magma.lte.SMSOrc8rGatewayService/SMODownlink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SMSOrc8RGatewayServiceServer is the server API for SMSOrc8RGatewayService service.
type SMSOrc8RGatewayServiceServer interface {
	SMODownlink(context.Context, *SMODownlinkUnitdata) (*protos.Void, error)
}

// UnimplementedSMSOrc8RGatewayServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSMSOrc8RGatewayServiceServer struct {
}

func (*UnimplementedSMSOrc8RGatewayServiceServer) SMODownlink(context.Context, *SMODownlinkUnitdata) (*protos.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SMODownlink not implemented")
}

func RegisterSMSOrc8RGatewayServiceServer(s *grpc.Server, srv SMSOrc8RGatewayServiceServer) {
	s.RegisterService(&_SMSOrc8RGatewayService_serviceDesc, srv)
}

func _SMSOrc8RGatewayService_SMODownlink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SMODownlinkUnitdata)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SMSOrc8RGatewayServiceServer).SMODownlink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.SMSOrc8rGatewayService/SMODownlink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SMSOrc8RGatewayServiceServer).SMODownlink(ctx, req.(*SMODownlinkUnitdata))
	}
	return interceptor(ctx, in, info, handler)
}

var _SMSOrc8RGatewayService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.lte.SMSOrc8rGatewayService",
	HandlerType: (*SMSOrc8RGatewayServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SMODownlink",
			Handler:    _SMSOrc8RGatewayService_SMODownlink_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lte/protos/sms_orc8r.proto",
}

// SmsDClient is the client API for SmsD service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SmsDClient interface {
	ReportDelivery(ctx context.Context, in *ReportDeliveryRequest, opts ...grpc.CallOption) (*ReportDeliveryResponse, error)
	GetMessages(ctx context.Context, in *GetMessagesRequest, opts ...grpc.CallOption) (*GetMessagesResponse, error)
}

type smsDClient struct {
	cc grpc.ClientConnInterface
}

func NewSmsDClient(cc grpc.ClientConnInterface) SmsDClient {
	return &smsDClient{cc}
}

func (c *smsDClient) ReportDelivery(ctx context.Context, in *ReportDeliveryRequest, opts ...grpc.CallOption) (*ReportDeliveryResponse, error) {
	out := new(ReportDeliveryResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.SmsD/ReportDelivery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smsDClient) GetMessages(ctx context.Context, in *GetMessagesRequest, opts ...grpc.CallOption) (*GetMessagesResponse, error) {
	out := new(GetMessagesResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.SmsD/GetMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SmsDServer is the server API for SmsD service.
type SmsDServer interface {
	ReportDelivery(context.Context, *ReportDeliveryRequest) (*ReportDeliveryResponse, error)
	GetMessages(context.Context, *GetMessagesRequest) (*GetMessagesResponse, error)
}

// UnimplementedSmsDServer can be embedded to have forward compatible implementations.
type UnimplementedSmsDServer struct {
}

func (*UnimplementedSmsDServer) ReportDelivery(context.Context, *ReportDeliveryRequest) (*ReportDeliveryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportDelivery not implemented")
}
func (*UnimplementedSmsDServer) GetMessages(context.Context, *GetMessagesRequest) (*GetMessagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMessages not implemented")
}

func RegisterSmsDServer(s *grpc.Server, srv SmsDServer) {
	s.RegisterService(&_SmsD_serviceDesc, srv)
}

func _SmsD_ReportDelivery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportDeliveryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmsDServer).ReportDelivery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.SmsD/ReportDelivery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmsDServer).ReportDelivery(ctx, req.(*ReportDeliveryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SmsD_GetMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMessagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmsDServer).GetMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.SmsD/GetMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmsDServer).GetMessages(ctx, req.(*GetMessagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SmsD_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.lte.SmsD",
	HandlerType: (*SmsDServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReportDelivery",
			Handler:    _SmsD_ReportDelivery_Handler,
		},
		{
			MethodName: "GetMessages",
			Handler:    _SmsD_GetMessages_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lte/protos/sms_orc8r.proto",
}
