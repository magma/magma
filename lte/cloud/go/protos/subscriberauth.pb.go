//
//Copyright 2020 The Magma Authors.
//
//This source code is licensed under the BSD-style license found in the
//LICENSE file in the root directory of this source tree.
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

//
// This is a proxy for Diamater application S6a/S6d 3GPP 29.272
// It is watered down for use with OpenAirInterface EPC with extensibility in mind
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.10.0
// source: lte/protos/subscriberauth.proto

package protos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Authentication Information Request (Section 7.2.5)
type M5GAuthenticationInformationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Subscriber identifier
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// Resync related information
	ResyncInfo []byte `protobuf:"bytes,2,opt,name=resync_info,json=resyncInfo,proto3" json:"resync_info,omitempty"`
	// Name of the serving network (snni)
	ServingNetworkName string `protobuf:"bytes,3,opt,name=serving_network_name,json=servingNetworkName,proto3" json:"serving_network_name,omitempty"`
}

func (x *M5GAuthenticationInformationRequest) Reset() {
	*x = M5GAuthenticationInformationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_subscriberauth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *M5GAuthenticationInformationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M5GAuthenticationInformationRequest) ProtoMessage() {}

func (x *M5GAuthenticationInformationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_subscriberauth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M5GAuthenticationInformationRequest.ProtoReflect.Descriptor instead.
func (*M5GAuthenticationInformationRequest) Descriptor() ([]byte, []int) {
	return file_lte_protos_subscriberauth_proto_rawDescGZIP(), []int{0}
}

func (x *M5GAuthenticationInformationRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *M5GAuthenticationInformationRequest) GetResyncInfo() []byte {
	if x != nil {
		return x.ResyncInfo
	}
	return nil
}

func (x *M5GAuthenticationInformationRequest) GetServingNetworkName() string {
	if x != nil {
		return x.ServingNetworkName
	}
	return ""
}

// Authentication Information Answer (Section 7.2.6)
type M5GAuthenticationInformationAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// EPC error code on failure
	ErrorCode ErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=magma.lte.ErrorCode" json:"error_code,omitempty"`
	// Authentication vectors matching the requested number
	M5GauthVectors []*M5GAuthenticationInformationAnswer_M5GAuthenticationVector `protobuf:"bytes,2,rep,name=m5gauth_vectors,json=m5gauthVectors,proto3" json:"m5gauth_vectors,omitempty"`
}

func (x *M5GAuthenticationInformationAnswer) Reset() {
	*x = M5GAuthenticationInformationAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_subscriberauth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *M5GAuthenticationInformationAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M5GAuthenticationInformationAnswer) ProtoMessage() {}

func (x *M5GAuthenticationInformationAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_subscriberauth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M5GAuthenticationInformationAnswer.ProtoReflect.Descriptor instead.
func (*M5GAuthenticationInformationAnswer) Descriptor() ([]byte, []int) {
	return file_lte_protos_subscriberauth_proto_rawDescGZIP(), []int{1}
}

func (x *M5GAuthenticationInformationAnswer) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_UNDEFINED
}

func (x *M5GAuthenticationInformationAnswer) GetM5GauthVectors() []*M5GAuthenticationInformationAnswer_M5GAuthenticationVector {
	if x != nil {
		return x.M5GauthVectors
	}
	return nil
}

// 3GPP TS 29.272, 7.3.18 E-UTRAN-Vector
// For details about fields read 3GPP 33.401
type M5GAuthenticationInformationAnswer_M5GAuthenticationVector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rand     []byte `protobuf:"bytes,1,opt,name=rand,proto3" json:"rand,omitempty"`
	XresStar []byte `protobuf:"bytes,2,opt,name=xres_star,json=xresStar,proto3" json:"xres_star,omitempty"`
	Autn     []byte `protobuf:"bytes,3,opt,name=autn,proto3" json:"autn,omitempty"`
	Kseaf    []byte `protobuf:"bytes,4,opt,name=kseaf,proto3" json:"kseaf,omitempty"`
}

func (x *M5GAuthenticationInformationAnswer_M5GAuthenticationVector) Reset() {
	*x = M5GAuthenticationInformationAnswer_M5GAuthenticationVector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_subscriberauth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *M5GAuthenticationInformationAnswer_M5GAuthenticationVector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M5GAuthenticationInformationAnswer_M5GAuthenticationVector) ProtoMessage() {}

func (x *M5GAuthenticationInformationAnswer_M5GAuthenticationVector) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_subscriberauth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M5GAuthenticationInformationAnswer_M5GAuthenticationVector.ProtoReflect.Descriptor instead.
func (*M5GAuthenticationInformationAnswer_M5GAuthenticationVector) Descriptor() ([]byte, []int) {
	return file_lte_protos_subscriberauth_proto_rawDescGZIP(), []int{1, 0}
}

func (x *M5GAuthenticationInformationAnswer_M5GAuthenticationVector) GetRand() []byte {
	if x != nil {
		return x.Rand
	}
	return nil
}

func (x *M5GAuthenticationInformationAnswer_M5GAuthenticationVector) GetXresStar() []byte {
	if x != nil {
		return x.XresStar
	}
	return nil
}

func (x *M5GAuthenticationInformationAnswer_M5GAuthenticationVector) GetAutn() []byte {
	if x != nil {
		return x.Autn
	}
	return nil
}

func (x *M5GAuthenticationInformationAnswer_M5GAuthenticationVector) GetKseaf() []byte {
	if x != nil {
		return x.Kseaf
	}
	return nil
}

var File_lte_protos_subscriberauth_proto protoreflect.FileDescriptor

var file_lte_protos_subscriberauth_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6c, 0x74, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x1a, 0x1c, 0x6c, 0x74,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x64, 0x69, 0x61, 0x6d, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x95, 0x01, 0x0a, 0x23, 0x4d,
	0x35, 0x47, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x30, 0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0xbf, 0x02, 0x0a, 0x22, 0x4d, 0x35, 0x47, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x6e,
	0x0a, 0x0f, 0x6d, 0x35, 0x67, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e,
	0x6c, 0x74, 0x65, 0x2e, 0x4d, 0x35, 0x47, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x2e, 0x4d, 0x35, 0x47, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0e,
	0x6d, 0x35, 0x67, 0x61, 0x75, 0x74, 0x68, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x74,
	0x0a, 0x17, 0x4d, 0x35, 0x47, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x78, 0x72, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x78, 0x72, 0x65, 0x73, 0x53, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x75,
	0x74, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x61, 0x75, 0x74, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x6b, 0x73, 0x65, 0x61, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6b,
	0x73, 0x65, 0x61, 0x66, 0x32, 0x9e, 0x01, 0x0a, 0x1b, 0x4d, 0x35, 0x47, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7f, 0x0a, 0x1c, 0x4d, 0x35, 0x47, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65,
	0x2e, 0x4d, 0x35, 0x47, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65,
	0x2e, 0x4d, 0x35, 0x47, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x22, 0x00, 0x42, 0x1b, 0x5a, 0x19, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2f, 0x6c,
	0x74, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lte_protos_subscriberauth_proto_rawDescOnce sync.Once
	file_lte_protos_subscriberauth_proto_rawDescData = file_lte_protos_subscriberauth_proto_rawDesc
)

func file_lte_protos_subscriberauth_proto_rawDescGZIP() []byte {
	file_lte_protos_subscriberauth_proto_rawDescOnce.Do(func() {
		file_lte_protos_subscriberauth_proto_rawDescData = protoimpl.X.CompressGZIP(file_lte_protos_subscriberauth_proto_rawDescData)
	})
	return file_lte_protos_subscriberauth_proto_rawDescData
}

var file_lte_protos_subscriberauth_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_lte_protos_subscriberauth_proto_goTypes = []interface{}{
	(*M5GAuthenticationInformationRequest)(nil),                        // 0: magma.lte.M5GAuthenticationInformationRequest
	(*M5GAuthenticationInformationAnswer)(nil),                         // 1: magma.lte.M5GAuthenticationInformationAnswer
	(*M5GAuthenticationInformationAnswer_M5GAuthenticationVector)(nil), // 2: magma.lte.M5GAuthenticationInformationAnswer.M5GAuthenticationVector
	(ErrorCode)(0), // 3: magma.lte.ErrorCode
}
var file_lte_protos_subscriberauth_proto_depIdxs = []int32{
	3, // 0: magma.lte.M5GAuthenticationInformationAnswer.error_code:type_name -> magma.lte.ErrorCode
	2, // 1: magma.lte.M5GAuthenticationInformationAnswer.m5gauth_vectors:type_name -> magma.lte.M5GAuthenticationInformationAnswer.M5GAuthenticationVector
	0, // 2: magma.lte.M5GSubscriberAuthentication.M5GAuthenticationInformation:input_type -> magma.lte.M5GAuthenticationInformationRequest
	1, // 3: magma.lte.M5GSubscriberAuthentication.M5GAuthenticationInformation:output_type -> magma.lte.M5GAuthenticationInformationAnswer
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_lte_protos_subscriberauth_proto_init() }
func file_lte_protos_subscriberauth_proto_init() {
	if File_lte_protos_subscriberauth_proto != nil {
		return
	}
	file_lte_protos_diam_errors_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_lte_protos_subscriberauth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*M5GAuthenticationInformationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_subscriberauth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*M5GAuthenticationInformationAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_subscriberauth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*M5GAuthenticationInformationAnswer_M5GAuthenticationVector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lte_protos_subscriberauth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lte_protos_subscriberauth_proto_goTypes,
		DependencyIndexes: file_lte_protos_subscriberauth_proto_depIdxs,
		MessageInfos:      file_lte_protos_subscriberauth_proto_msgTypes,
	}.Build()
	File_lte_protos_subscriberauth_proto = out.File
	file_lte_protos_subscriberauth_proto_rawDesc = nil
	file_lte_protos_subscriberauth_proto_goTypes = nil
	file_lte_protos_subscriberauth_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// M5GSubscriberAuthenticationClient is the client API for M5GSubscriberAuthentication service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type M5GSubscriberAuthenticationClient interface {
	// Authentication-Information (Code 318)
	M5GAuthenticationInformation(ctx context.Context, in *M5GAuthenticationInformationRequest, opts ...grpc.CallOption) (*M5GAuthenticationInformationAnswer, error)
}

type m5GSubscriberAuthenticationClient struct {
	cc grpc.ClientConnInterface
}

func NewM5GSubscriberAuthenticationClient(cc grpc.ClientConnInterface) M5GSubscriberAuthenticationClient {
	return &m5GSubscriberAuthenticationClient{cc}
}

func (c *m5GSubscriberAuthenticationClient) M5GAuthenticationInformation(ctx context.Context, in *M5GAuthenticationInformationRequest, opts ...grpc.CallOption) (*M5GAuthenticationInformationAnswer, error) {
	out := new(M5GAuthenticationInformationAnswer)
	err := c.cc.Invoke(ctx, "/magma.lte.M5GSubscriberAuthentication/M5GAuthenticationInformation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// M5GSubscriberAuthenticationServer is the server API for M5GSubscriberAuthentication service.
type M5GSubscriberAuthenticationServer interface {
	// Authentication-Information (Code 318)
	M5GAuthenticationInformation(context.Context, *M5GAuthenticationInformationRequest) (*M5GAuthenticationInformationAnswer, error)
}

// UnimplementedM5GSubscriberAuthenticationServer can be embedded to have forward compatible implementations.
type UnimplementedM5GSubscriberAuthenticationServer struct {
}

func (*UnimplementedM5GSubscriberAuthenticationServer) M5GAuthenticationInformation(context.Context, *M5GAuthenticationInformationRequest) (*M5GAuthenticationInformationAnswer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method M5GAuthenticationInformation not implemented")
}

func RegisterM5GSubscriberAuthenticationServer(s *grpc.Server, srv M5GSubscriberAuthenticationServer) {
	s.RegisterService(&_M5GSubscriberAuthentication_serviceDesc, srv)
}

func _M5GSubscriberAuthentication_M5GAuthenticationInformation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(M5GAuthenticationInformationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(M5GSubscriberAuthenticationServer).M5GAuthenticationInformation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.M5GSubscriberAuthentication/M5GAuthenticationInformation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(M5GSubscriberAuthenticationServer).M5GAuthenticationInformation(ctx, req.(*M5GAuthenticationInformationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _M5GSubscriberAuthentication_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.lte.M5GSubscriberAuthentication",
	HandlerType: (*M5GSubscriberAuthenticationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "M5GAuthenticationInformation",
			Handler:    _M5GSubscriberAuthentication_M5GAuthenticationInformation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lte/protos/subscriberauth.proto",
}
