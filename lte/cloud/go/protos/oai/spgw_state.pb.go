//
// Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
// contributor license agreements.  See the NOTICE file distributed with
// this work for additional information regarding copyright ownership.
// The OpenAirInterface Software Alliance licenses this file to You under
// the terms found in the LICENSE file in the root of this source tree.
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//------------------------------------------------------------------------------
// For more information about the OpenAirInterface (OAI) Software Alliance:
//      contact@openairinterface.org

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: lte/protos/oai/spgw_state.proto

package oai

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// sgw_bearer_context_information
type SgwEpsBearerContextInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi                []byte                `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	ImsiUnauthIndicator uint32                `protobuf:"varint,2,opt,name=imsi_unauth_indicator,json=imsiUnauthIndicator,proto3" json:"imsi_unauth_indicator,omitempty"`
	Msisdn              string                `protobuf:"bytes,3,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
	LastKnownCellId     *Ecgi                 `protobuf:"bytes,4,opt,name=last_known_cell_id,json=lastKnownCellId,proto3" json:"last_known_cell_id,omitempty"`
	Trxn                []byte                `protobuf:"bytes,5,opt,name=trxn,proto3" json:"trxn,omitempty"`
	Imsi64              uint64                `protobuf:"varint,6,opt,name=imsi64,proto3" json:"imsi64,omitempty"`
	MmeTeidS11          uint32                `protobuf:"varint,10,opt,name=mme_teid_s11,json=mmeTeidS11,proto3" json:"mme_teid_s11,omitempty"` // teid_t
	MmeIpAddressS11     []byte                `protobuf:"bytes,11,opt,name=mme_ip_address_s11,json=mmeIpAddressS11,proto3" json:"mme_ip_address_s11,omitempty"`
	SgwTeidS11S4        uint32                `protobuf:"varint,15,opt,name=sgw_teid_s11_s4,json=sgwTeidS11S4,proto3" json:"sgw_teid_s11_s4,omitempty"`
	SgwIpAddressS11S4   []byte                `protobuf:"bytes,16,opt,name=sgw_ip_address_s11_s4,json=sgwIpAddressS11S4,proto3" json:"sgw_ip_address_s11_s4,omitempty"`
	PdnConnection       *SgwPdnConnection     `protobuf:"bytes,20,opt,name=pdn_connection,json=pdnConnection,proto3" json:"pdn_connection,omitempty"`
	SavedMessage        *CreateSessionMessage `protobuf:"bytes,21,opt,name=saved_message,json=savedMessage,proto3" json:"saved_message,omitempty"`
	PendingProcedures   []*PgwCbrProcedure    `protobuf:"bytes,22,rep,name=pending_procedures,json=pendingProcedures,proto3" json:"pending_procedures,omitempty"`
}

func (x *SgwEpsBearerContextInfo) Reset() {
	*x = SgwEpsBearerContextInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SgwEpsBearerContextInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SgwEpsBearerContextInfo) ProtoMessage() {}

func (x *SgwEpsBearerContextInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SgwEpsBearerContextInfo.ProtoReflect.Descriptor instead.
func (*SgwEpsBearerContextInfo) Descriptor() ([]byte, []int) {
	return file_lte_protos_oai_spgw_state_proto_rawDescGZIP(), []int{0}
}

func (x *SgwEpsBearerContextInfo) GetImsi() []byte {
	if x != nil {
		return x.Imsi
	}
	return nil
}

func (x *SgwEpsBearerContextInfo) GetImsiUnauthIndicator() uint32 {
	if x != nil {
		return x.ImsiUnauthIndicator
	}
	return 0
}

func (x *SgwEpsBearerContextInfo) GetMsisdn() string {
	if x != nil {
		return x.Msisdn
	}
	return ""
}

func (x *SgwEpsBearerContextInfo) GetLastKnownCellId() *Ecgi {
	if x != nil {
		return x.LastKnownCellId
	}
	return nil
}

func (x *SgwEpsBearerContextInfo) GetTrxn() []byte {
	if x != nil {
		return x.Trxn
	}
	return nil
}

func (x *SgwEpsBearerContextInfo) GetImsi64() uint64 {
	if x != nil {
		return x.Imsi64
	}
	return 0
}

func (x *SgwEpsBearerContextInfo) GetMmeTeidS11() uint32 {
	if x != nil {
		return x.MmeTeidS11
	}
	return 0
}

func (x *SgwEpsBearerContextInfo) GetMmeIpAddressS11() []byte {
	if x != nil {
		return x.MmeIpAddressS11
	}
	return nil
}

func (x *SgwEpsBearerContextInfo) GetSgwTeidS11S4() uint32 {
	if x != nil {
		return x.SgwTeidS11S4
	}
	return 0
}

func (x *SgwEpsBearerContextInfo) GetSgwIpAddressS11S4() []byte {
	if x != nil {
		return x.SgwIpAddressS11S4
	}
	return nil
}

func (x *SgwEpsBearerContextInfo) GetPdnConnection() *SgwPdnConnection {
	if x != nil {
		return x.PdnConnection
	}
	return nil
}

func (x *SgwEpsBearerContextInfo) GetSavedMessage() *CreateSessionMessage {
	if x != nil {
		return x.SavedMessage
	}
	return nil
}

func (x *SgwEpsBearerContextInfo) GetPendingProcedures() []*PgwCbrProcedure {
	if x != nil {
		return x.PendingProcedures
	}
	return nil
}

// pgw_ni_cbr_proc_t
type PgwCbrProcedure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teid              uint32                 `protobuf:"varint,1,opt,name=teid,proto3" json:"teid,omitempty"`
	SdfId             uint32                 `protobuf:"varint,2,opt,name=sdf_id,json=sdfId,proto3" json:"sdf_id,omitempty"`
	Type              uint32                 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	PendingEpsBearers []*SgwEpsBearerContext `protobuf:"bytes,4,rep,name=pending_eps_bearers,json=pendingEpsBearers,proto3" json:"pending_eps_bearers,omitempty"`
}

func (x *PgwCbrProcedure) Reset() {
	*x = PgwCbrProcedure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgwCbrProcedure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgwCbrProcedure) ProtoMessage() {}

func (x *PgwCbrProcedure) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgwCbrProcedure.ProtoReflect.Descriptor instead.
func (*PgwCbrProcedure) Descriptor() ([]byte, []int) {
	return file_lte_protos_oai_spgw_state_proto_rawDescGZIP(), []int{1}
}

func (x *PgwCbrProcedure) GetTeid() uint32 {
	if x != nil {
		return x.Teid
	}
	return 0
}

func (x *PgwCbrProcedure) GetSdfId() uint32 {
	if x != nil {
		return x.SdfId
	}
	return 0
}

func (x *PgwCbrProcedure) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PgwCbrProcedure) GetPendingEpsBearers() []*SgwEpsBearerContext {
	if x != nil {
		return x.PendingEpsBearers
	}
	return nil
}

// ServingNetwork_t
type ServingNetwork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mcc []byte `protobuf:"bytes,1,opt,name=mcc,proto3" json:"mcc,omitempty"`
	Mnc []byte `protobuf:"bytes,2,opt,name=mnc,proto3" json:"mnc,omitempty"`
}

func (x *ServingNetwork) Reset() {
	*x = ServingNetwork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServingNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServingNetwork) ProtoMessage() {}

func (x *ServingNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServingNetwork.ProtoReflect.Descriptor instead.
func (*ServingNetwork) Descriptor() ([]byte, []int) {
	return file_lte_protos_oai_spgw_state_proto_rawDescGZIP(), []int{2}
}

func (x *ServingNetwork) GetMcc() []byte {
	if x != nil {
		return x.Mcc
	}
	return nil
}

func (x *ServingNetwork) GetMnc() []byte {
	if x != nil {
		return x.Mnc
	}
	return nil
}

// UETimeZone_t
type TimeZone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeZone           uint32 `protobuf:"varint,1,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`
	DaylightSavingTime uint32 `protobuf:"varint,2,opt,name=daylight_saving_time,json=daylightSavingTime,proto3" json:"daylight_saving_time,omitempty"`
}

func (x *TimeZone) Reset() {
	*x = TimeZone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeZone) ProtoMessage() {}

func (x *TimeZone) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeZone.ProtoReflect.Descriptor instead.
func (*TimeZone) Descriptor() ([]byte, []int) {
	return file_lte_protos_oai_spgw_state_proto_rawDescGZIP(), []int{3}
}

func (x *TimeZone) GetTimeZone() uint32 {
	if x != nil {
		return x.TimeZone
	}
	return 0
}

func (x *TimeZone) GetDaylightSavingTime() uint32 {
	if x != nil {
		return x.DaylightSavingTime
	}
	return 0
}

// itti_s11_create_session_request_t
type CreateSessionMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trxn                      []byte                      `protobuf:"bytes,1,opt,name=trxn,proto3" json:"trxn,omitempty"`
	Teid                      uint32                      `protobuf:"varint,2,opt,name=teid,proto3" json:"teid,omitempty"`
	Imsi                      []byte                      `protobuf:"bytes,3,opt,name=imsi,proto3" json:"imsi,omitempty"`
	Msisdn                    []byte                      `protobuf:"bytes,4,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
	Mei                       []byte                      `protobuf:"bytes,5,opt,name=mei,proto3" json:"mei,omitempty"`
	Uli                       []byte                      `protobuf:"bytes,6,opt,name=uli,proto3" json:"uli,omitempty"`
	ServingNetwork            *ServingNetwork             `protobuf:"bytes,7,opt,name=serving_network,json=servingNetwork,proto3" json:"serving_network,omitempty"`
	RatType                   uint32                      `protobuf:"varint,10,opt,name=rat_type,json=ratType,proto3" json:"rat_type,omitempty"`
	PdnType                   uint32                      `protobuf:"varint,11,opt,name=pdn_type,json=pdnType,proto3" json:"pdn_type,omitempty"`
	Apn                       []byte                      `protobuf:"bytes,12,opt,name=apn,proto3" json:"apn,omitempty"`
	Paa                       []byte                      `protobuf:"bytes,13,opt,name=paa,proto3" json:"paa,omitempty"`
	Ambr                      *Ambr                       `protobuf:"bytes,14,opt,name=ambr,proto3" json:"ambr,omitempty"`
	Pco                       *Pco                        `protobuf:"bytes,15,opt,name=pco,proto3" json:"pco,omitempty"`
	SenderFteidForCp          *Fteid                      `protobuf:"bytes,16,opt,name=sender_fteid_for_cp,json=senderFteidForCp,proto3" json:"sender_fteid_for_cp,omitempty"`
	BearerContextsToBeCreated []*BearerContextToBeCreated `protobuf:"bytes,20,rep,name=bearer_contexts_to_be_created,json=bearerContextsToBeCreated,proto3" json:"bearer_contexts_to_be_created,omitempty"`
	PeerIp                    uint32                      `protobuf:"varint,21,opt,name=peer_ip,json=peerIp,proto3" json:"peer_ip,omitempty"`
	UeTimeZone                *TimeZone                   `protobuf:"bytes,22,opt,name=ue_time_zone,json=ueTimeZone,proto3" json:"ue_time_zone,omitempty"`
	ChargingCharacteristics   string                      `protobuf:"bytes,23,opt,name=charging_characteristics,json=chargingCharacteristics,proto3" json:"charging_characteristics,omitempty"` // Taken from S6A UpdateLocationAnswer
}

func (x *CreateSessionMessage) Reset() {
	*x = CreateSessionMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSessionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionMessage) ProtoMessage() {}

func (x *CreateSessionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionMessage.ProtoReflect.Descriptor instead.
func (*CreateSessionMessage) Descriptor() ([]byte, []int) {
	return file_lte_protos_oai_spgw_state_proto_rawDescGZIP(), []int{4}
}

func (x *CreateSessionMessage) GetTrxn() []byte {
	if x != nil {
		return x.Trxn
	}
	return nil
}

func (x *CreateSessionMessage) GetTeid() uint32 {
	if x != nil {
		return x.Teid
	}
	return 0
}

func (x *CreateSessionMessage) GetImsi() []byte {
	if x != nil {
		return x.Imsi
	}
	return nil
}

func (x *CreateSessionMessage) GetMsisdn() []byte {
	if x != nil {
		return x.Msisdn
	}
	return nil
}

func (x *CreateSessionMessage) GetMei() []byte {
	if x != nil {
		return x.Mei
	}
	return nil
}

func (x *CreateSessionMessage) GetUli() []byte {
	if x != nil {
		return x.Uli
	}
	return nil
}

func (x *CreateSessionMessage) GetServingNetwork() *ServingNetwork {
	if x != nil {
		return x.ServingNetwork
	}
	return nil
}

func (x *CreateSessionMessage) GetRatType() uint32 {
	if x != nil {
		return x.RatType
	}
	return 0
}

func (x *CreateSessionMessage) GetPdnType() uint32 {
	if x != nil {
		return x.PdnType
	}
	return 0
}

func (x *CreateSessionMessage) GetApn() []byte {
	if x != nil {
		return x.Apn
	}
	return nil
}

func (x *CreateSessionMessage) GetPaa() []byte {
	if x != nil {
		return x.Paa
	}
	return nil
}

func (x *CreateSessionMessage) GetAmbr() *Ambr {
	if x != nil {
		return x.Ambr
	}
	return nil
}

func (x *CreateSessionMessage) GetPco() *Pco {
	if x != nil {
		return x.Pco
	}
	return nil
}

func (x *CreateSessionMessage) GetSenderFteidForCp() *Fteid {
	if x != nil {
		return x.SenderFteidForCp
	}
	return nil
}

func (x *CreateSessionMessage) GetBearerContextsToBeCreated() []*BearerContextToBeCreated {
	if x != nil {
		return x.BearerContextsToBeCreated
	}
	return nil
}

func (x *CreateSessionMessage) GetPeerIp() uint32 {
	if x != nil {
		return x.PeerIp
	}
	return 0
}

func (x *CreateSessionMessage) GetUeTimeZone() *TimeZone {
	if x != nil {
		return x.UeTimeZone
	}
	return nil
}

func (x *CreateSessionMessage) GetChargingCharacteristics() string {
	if x != nil {
		return x.ChargingCharacteristics
	}
	return ""
}

// bearer_context_to_be_created_t
type BearerContextToBeCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpsBearerId    uint32               `protobuf:"varint,1,opt,name=eps_bearer_id,json=epsBearerId,proto3" json:"eps_bearer_id,omitempty"`
	Tft            *TrafficFlowTemplate `protobuf:"bytes,2,opt,name=tft,proto3" json:"tft,omitempty"`
	BearerLevelQos *SgwBearerQos        `protobuf:"bytes,3,opt,name=bearer_level_qos,json=bearerLevelQos,proto3" json:"bearer_level_qos,omitempty"`
}

func (x *BearerContextToBeCreated) Reset() {
	*x = BearerContextToBeCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BearerContextToBeCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BearerContextToBeCreated) ProtoMessage() {}

func (x *BearerContextToBeCreated) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BearerContextToBeCreated.ProtoReflect.Descriptor instead.
func (*BearerContextToBeCreated) Descriptor() ([]byte, []int) {
	return file_lte_protos_oai_spgw_state_proto_rawDescGZIP(), []int{5}
}

func (x *BearerContextToBeCreated) GetEpsBearerId() uint32 {
	if x != nil {
		return x.EpsBearerId
	}
	return 0
}

func (x *BearerContextToBeCreated) GetTft() *TrafficFlowTemplate {
	if x != nil {
		return x.Tft
	}
	return nil
}

func (x *BearerContextToBeCreated) GetBearerLevelQos() *SgwBearerQos {
	if x != nil {
		return x.BearerLevelQos
	}
	return nil
}

// pgw_eps_bearer_context_information
type PgwEpsBearerContextInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi                []byte `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	ImsiUnauthIndicator uint32 `protobuf:"varint,2,opt,name=imsi_unauth_indicator,json=imsiUnauthIndicator,proto3" json:"imsi_unauth_indicator,omitempty"`
	Msisdn              string `protobuf:"bytes,3,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
}

func (x *PgwEpsBearerContextInfo) Reset() {
	*x = PgwEpsBearerContextInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgwEpsBearerContextInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgwEpsBearerContextInfo) ProtoMessage() {}

func (x *PgwEpsBearerContextInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgwEpsBearerContextInfo.ProtoReflect.Descriptor instead.
func (*PgwEpsBearerContextInfo) Descriptor() ([]byte, []int) {
	return file_lte_protos_oai_spgw_state_proto_rawDescGZIP(), []int{6}
}

func (x *PgwEpsBearerContextInfo) GetImsi() []byte {
	if x != nil {
		return x.Imsi
	}
	return nil
}

func (x *PgwEpsBearerContextInfo) GetImsiUnauthIndicator() uint32 {
	if x != nil {
		return x.ImsiUnauthIndicator
	}
	return 0
}

func (x *PgwEpsBearerContextInfo) GetMsisdn() string {
	if x != nil {
		return x.Msisdn
	}
	return ""
}

// sgw_pdn_connection
type SgwPdnConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApnInUse                 string                 `protobuf:"bytes,1,opt,name=apn_in_use,json=apnInUse,proto3" json:"apn_in_use,omitempty"`
	PgwAddressInUseCp        []byte                 `protobuf:"bytes,2,opt,name=pgw_address_in_use_cp,json=pgwAddressInUseCp,proto3" json:"pgw_address_in_use_cp,omitempty"`
	PgwAddressInUseUp        []byte                 `protobuf:"bytes,3,opt,name=pgw_address_in_use_up,json=pgwAddressInUseUp,proto3" json:"pgw_address_in_use_up,omitempty"`
	DefaultBearer            uint32                 `protobuf:"varint,10,opt,name=default_bearer,json=defaultBearer,proto3" json:"default_bearer,omitempty"`
	UeSuspendedForPsHandover bool                   `protobuf:"varint,11,opt,name=ue_suspended_for_ps_handover,json=ueSuspendedForPsHandover,proto3" json:"ue_suspended_for_ps_handover,omitempty"`
	EpsBearerList            []*SgwEpsBearerContext `protobuf:"bytes,15,rep,name=eps_bearer_list,json=epsBearerList,proto3" json:"eps_bearer_list,omitempty"`
}

func (x *SgwPdnConnection) Reset() {
	*x = SgwPdnConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SgwPdnConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SgwPdnConnection) ProtoMessage() {}

func (x *SgwPdnConnection) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SgwPdnConnection.ProtoReflect.Descriptor instead.
func (*SgwPdnConnection) Descriptor() ([]byte, []int) {
	return file_lte_protos_oai_spgw_state_proto_rawDescGZIP(), []int{7}
}

func (x *SgwPdnConnection) GetApnInUse() string {
	if x != nil {
		return x.ApnInUse
	}
	return ""
}

func (x *SgwPdnConnection) GetPgwAddressInUseCp() []byte {
	if x != nil {
		return x.PgwAddressInUseCp
	}
	return nil
}

func (x *SgwPdnConnection) GetPgwAddressInUseUp() []byte {
	if x != nil {
		return x.PgwAddressInUseUp
	}
	return nil
}

func (x *SgwPdnConnection) GetDefaultBearer() uint32 {
	if x != nil {
		return x.DefaultBearer
	}
	return 0
}

func (x *SgwPdnConnection) GetUeSuspendedForPsHandover() bool {
	if x != nil {
		return x.UeSuspendedForPsHandover
	}
	return false
}

func (x *SgwPdnConnection) GetEpsBearerList() []*SgwEpsBearerContext {
	if x != nil {
		return x.EpsBearerList
	}
	return nil
}

// sgw_eps_bearer_ctxt_t
type SgwEpsBearerContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpsBearerId            uint32               `protobuf:"varint,1,opt,name=eps_bearer_id,json=epsBearerId,proto3" json:"eps_bearer_id,omitempty"`
	Paa                    []byte               `protobuf:"bytes,2,opt,name=paa,proto3" json:"paa,omitempty"`
	PgwAddressInUseUp      []byte               `protobuf:"bytes,10,opt,name=pgw_address_in_use_up,json=pgwAddressInUseUp,proto3" json:"pgw_address_in_use_up,omitempty"`
	PgwTeidS5S8Up          uint32               `protobuf:"varint,11,opt,name=pgw_teid_s5_s8_up,json=pgwTeidS5S8Up,proto3" json:"pgw_teid_s5_s8_up,omitempty"`
	SgwIpAddressS5S8Up     []byte               `protobuf:"bytes,12,opt,name=sgw_ip_address_s5_s8_up,json=sgwIpAddressS5S8Up,proto3" json:"sgw_ip_address_s5_s8_up,omitempty"`
	SgwTeidS5S8Up          uint32               `protobuf:"varint,13,opt,name=sgw_teid_s5_s8_up,json=sgwTeidS5S8Up,proto3" json:"sgw_teid_s5_s8_up,omitempty"`
	SgwIpAddressS1US12S4Up []byte               `protobuf:"bytes,14,opt,name=sgw_ip_address_s1u_s12_s4_up,json=sgwIpAddressS1uS12S4Up,proto3" json:"sgw_ip_address_s1u_s12_s4_up,omitempty"`
	SgwTeidS1US12S4Up      uint32               `protobuf:"varint,15,opt,name=sgw_teid_s1u_s12_s4_up,json=sgwTeidS1uS12S4Up,proto3" json:"sgw_teid_s1u_s12_s4_up,omitempty"`
	EnbIpAddressS1U        []byte               `protobuf:"bytes,16,opt,name=enb_ip_address_s1u,json=enbIpAddressS1u,proto3" json:"enb_ip_address_s1u,omitempty"`
	EnbTeidS1U             uint32               `protobuf:"varint,17,opt,name=enb_teid_s1u,json=enbTeidS1u,proto3" json:"enb_teid_s1u,omitempty"`
	EpsBearerQos           *SgwBearerQos        `protobuf:"bytes,20,opt,name=eps_bearer_qos,json=epsBearerQos,proto3" json:"eps_bearer_qos,omitempty"`
	Tft                    *TrafficFlowTemplate `protobuf:"bytes,21,opt,name=tft,proto3" json:"tft,omitempty"`
	NumSdf                 uint32               `protobuf:"varint,25,opt,name=num_sdf,json=numSdf,proto3" json:"num_sdf,omitempty"`
	SdfIds                 []uint32             `protobuf:"varint,26,rep,packed,name=sdf_ids,json=sdfIds,proto3" json:"sdf_ids,omitempty"`
	PolicyRuleName         string               `protobuf:"bytes,27,opt,name=policy_rule_name,json=policyRuleName,proto3" json:"policy_rule_name,omitempty"`
}

func (x *SgwEpsBearerContext) Reset() {
	*x = SgwEpsBearerContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SgwEpsBearerContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SgwEpsBearerContext) ProtoMessage() {}

func (x *SgwEpsBearerContext) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SgwEpsBearerContext.ProtoReflect.Descriptor instead.
func (*SgwEpsBearerContext) Descriptor() ([]byte, []int) {
	return file_lte_protos_oai_spgw_state_proto_rawDescGZIP(), []int{8}
}

func (x *SgwEpsBearerContext) GetEpsBearerId() uint32 {
	if x != nil {
		return x.EpsBearerId
	}
	return 0
}

func (x *SgwEpsBearerContext) GetPaa() []byte {
	if x != nil {
		return x.Paa
	}
	return nil
}

func (x *SgwEpsBearerContext) GetPgwAddressInUseUp() []byte {
	if x != nil {
		return x.PgwAddressInUseUp
	}
	return nil
}

func (x *SgwEpsBearerContext) GetPgwTeidS5S8Up() uint32 {
	if x != nil {
		return x.PgwTeidS5S8Up
	}
	return 0
}

func (x *SgwEpsBearerContext) GetSgwIpAddressS5S8Up() []byte {
	if x != nil {
		return x.SgwIpAddressS5S8Up
	}
	return nil
}

func (x *SgwEpsBearerContext) GetSgwTeidS5S8Up() uint32 {
	if x != nil {
		return x.SgwTeidS5S8Up
	}
	return 0
}

func (x *SgwEpsBearerContext) GetSgwIpAddressS1US12S4Up() []byte {
	if x != nil {
		return x.SgwIpAddressS1US12S4Up
	}
	return nil
}

func (x *SgwEpsBearerContext) GetSgwTeidS1US12S4Up() uint32 {
	if x != nil {
		return x.SgwTeidS1US12S4Up
	}
	return 0
}

func (x *SgwEpsBearerContext) GetEnbIpAddressS1U() []byte {
	if x != nil {
		return x.EnbIpAddressS1U
	}
	return nil
}

func (x *SgwEpsBearerContext) GetEnbTeidS1U() uint32 {
	if x != nil {
		return x.EnbTeidS1U
	}
	return 0
}

func (x *SgwEpsBearerContext) GetEpsBearerQos() *SgwBearerQos {
	if x != nil {
		return x.EpsBearerQos
	}
	return nil
}

func (x *SgwEpsBearerContext) GetTft() *TrafficFlowTemplate {
	if x != nil {
		return x.Tft
	}
	return nil
}

func (x *SgwEpsBearerContext) GetNumSdf() uint32 {
	if x != nil {
		return x.NumSdf
	}
	return 0
}

func (x *SgwEpsBearerContext) GetSdfIds() []uint32 {
	if x != nil {
		return x.SdfIds
	}
	return nil
}

func (x *SgwEpsBearerContext) GetPolicyRuleName() string {
	if x != nil {
		return x.PolicyRuleName
	}
	return ""
}

// traffic_flow_template
type TrafficFlowTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketFilterList      *PacketFilterList `protobuf:"bytes,1,opt,name=packet_filter_list,json=packetFilterList,proto3" json:"packet_filter_list,omitempty"`
	ParametersList        *ParametersList   `protobuf:"bytes,2,opt,name=parameters_list,json=parametersList,proto3" json:"parameters_list,omitempty"`
	TftOperationCode      uint32            `protobuf:"varint,3,opt,name=tft_operation_code,json=tftOperationCode,proto3" json:"tft_operation_code,omitempty"`
	NumberOfPacketFilters uint32            `protobuf:"varint,4,opt,name=number_of_packet_filters,json=numberOfPacketFilters,proto3" json:"number_of_packet_filters,omitempty"`
	Ebit                  uint32            `protobuf:"varint,5,opt,name=ebit,proto3" json:"ebit,omitempty"`
}

func (x *TrafficFlowTemplate) Reset() {
	*x = TrafficFlowTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficFlowTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficFlowTemplate) ProtoMessage() {}

func (x *TrafficFlowTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficFlowTemplate.ProtoReflect.Descriptor instead.
func (*TrafficFlowTemplate) Descriptor() ([]byte, []int) {
	return file_lte_protos_oai_spgw_state_proto_rawDescGZIP(), []int{9}
}

func (x *TrafficFlowTemplate) GetPacketFilterList() *PacketFilterList {
	if x != nil {
		return x.PacketFilterList
	}
	return nil
}

func (x *TrafficFlowTemplate) GetParametersList() *ParametersList {
	if x != nil {
		return x.ParametersList
	}
	return nil
}

func (x *TrafficFlowTemplate) GetTftOperationCode() uint32 {
	if x != nil {
		return x.TftOperationCode
	}
	return 0
}

func (x *TrafficFlowTemplate) GetNumberOfPacketFilters() uint32 {
	if x != nil {
		return x.NumberOfPacketFilters
	}
	return 0
}

func (x *TrafficFlowTemplate) GetEbit() uint32 {
	if x != nil {
		return x.Ebit
	}
	return 0
}

// packet_filter_list
type PacketFilterList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateNewTft                 []*PacketFilter `protobuf:"bytes,1,rep,name=create_new_tft,json=createNewTft,proto3" json:"create_new_tft,omitempty"`
	AddPacketFilter              []*PacketFilter `protobuf:"bytes,2,rep,name=add_packet_filter,json=addPacketFilter,proto3" json:"add_packet_filter,omitempty"`
	ReplacePacketFilter          []*PacketFilter `protobuf:"bytes,3,rep,name=replace_packet_filter,json=replacePacketFilter,proto3" json:"replace_packet_filter,omitempty"`
	DeletePacketFilterIdentifier []uint32        `protobuf:"varint,4,rep,packed,name=delete_packet_filter_identifier,json=deletePacketFilterIdentifier,proto3" json:"delete_packet_filter_identifier,omitempty"`
}

func (x *PacketFilterList) Reset() {
	*x = PacketFilterList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketFilterList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketFilterList) ProtoMessage() {}

func (x *PacketFilterList) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketFilterList.ProtoReflect.Descriptor instead.
func (*PacketFilterList) Descriptor() ([]byte, []int) {
	return file_lte_protos_oai_spgw_state_proto_rawDescGZIP(), []int{10}
}

func (x *PacketFilterList) GetCreateNewTft() []*PacketFilter {
	if x != nil {
		return x.CreateNewTft
	}
	return nil
}

func (x *PacketFilterList) GetAddPacketFilter() []*PacketFilter {
	if x != nil {
		return x.AddPacketFilter
	}
	return nil
}

func (x *PacketFilterList) GetReplacePacketFilter() []*PacketFilter {
	if x != nil {
		return x.ReplacePacketFilter
	}
	return nil
}

func (x *PacketFilterList) GetDeletePacketFilterIdentifier() []uint32 {
	if x != nil {
		return x.DeletePacketFilterIdentifier
	}
	return nil
}

// packet_filter
type PacketFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spare                uint32                `protobuf:"varint,1,opt,name=spare,proto3" json:"spare,omitempty"`
	Direction            uint32                `protobuf:"varint,2,opt,name=direction,proto3" json:"direction,omitempty"`
	Identifier           uint32                `protobuf:"varint,3,opt,name=identifier,proto3" json:"identifier,omitempty"`
	EvalPrecedence       uint32                `protobuf:"varint,4,opt,name=eval_precedence,json=evalPrecedence,proto3" json:"eval_precedence,omitempty"`
	Length               uint32                `protobuf:"varint,5,opt,name=length,proto3" json:"length,omitempty"`
	PacketFilterContents *PacketFilterContents `protobuf:"bytes,6,opt,name=packet_filter_contents,json=packetFilterContents,proto3" json:"packet_filter_contents,omitempty"`
}

func (x *PacketFilter) Reset() {
	*x = PacketFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketFilter) ProtoMessage() {}

func (x *PacketFilter) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketFilter.ProtoReflect.Descriptor instead.
func (*PacketFilter) Descriptor() ([]byte, []int) {
	return file_lte_protos_oai_spgw_state_proto_rawDescGZIP(), []int{11}
}

func (x *PacketFilter) GetSpare() uint32 {
	if x != nil {
		return x.Spare
	}
	return 0
}

func (x *PacketFilter) GetDirection() uint32 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *PacketFilter) GetIdentifier() uint32 {
	if x != nil {
		return x.Identifier
	}
	return 0
}

func (x *PacketFilter) GetEvalPrecedence() uint32 {
	if x != nil {
		return x.EvalPrecedence
	}
	return 0
}

func (x *PacketFilter) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *PacketFilter) GetPacketFilterContents() *PacketFilterContents {
	if x != nil {
		return x.PacketFilterContents
	}
	return nil
}

// eps_bearer_qos_t
type SgwBearerQos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pci uint32 `protobuf:"varint,1,opt,name=pci,proto3" json:"pci,omitempty"`
	Pl  uint32 `protobuf:"varint,2,opt,name=pl,proto3" json:"pl,omitempty"`
	Pvi uint32 `protobuf:"varint,3,opt,name=pvi,proto3" json:"pvi,omitempty"`
	Qci uint32 `protobuf:"varint,5,opt,name=qci,proto3" json:"qci,omitempty"`
	Gbr *Ambr  `protobuf:"bytes,10,opt,name=gbr,proto3" json:"gbr,omitempty"`
	Mbr *Ambr  `protobuf:"bytes,11,opt,name=mbr,proto3" json:"mbr,omitempty"`
}

func (x *SgwBearerQos) Reset() {
	*x = SgwBearerQos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SgwBearerQos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SgwBearerQos) ProtoMessage() {}

func (x *SgwBearerQos) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SgwBearerQos.ProtoReflect.Descriptor instead.
func (*SgwBearerQos) Descriptor() ([]byte, []int) {
	return file_lte_protos_oai_spgw_state_proto_rawDescGZIP(), []int{12}
}

func (x *SgwBearerQos) GetPci() uint32 {
	if x != nil {
		return x.Pci
	}
	return 0
}

func (x *SgwBearerQos) GetPl() uint32 {
	if x != nil {
		return x.Pl
	}
	return 0
}

func (x *SgwBearerQos) GetPvi() uint32 {
	if x != nil {
		return x.Pvi
	}
	return 0
}

func (x *SgwBearerQos) GetQci() uint32 {
	if x != nil {
		return x.Qci
	}
	return 0
}

func (x *SgwBearerQos) GetGbr() *Ambr {
	if x != nil {
		return x.Gbr
	}
	return nil
}

func (x *SgwBearerQos) GetMbr() *Ambr {
	if x != nil {
		return x.Mbr
	}
	return nil
}

type SpgwUeContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S11BearerContext []*S11BearerContext `protobuf:"bytes,1,rep,name=s11_bearer_context,json=s11BearerContext,proto3" json:"s11_bearer_context,omitempty"`
}

func (x *SpgwUeContext) Reset() {
	*x = SpgwUeContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpgwUeContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpgwUeContext) ProtoMessage() {}

func (x *SpgwUeContext) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpgwUeContext.ProtoReflect.Descriptor instead.
func (*SpgwUeContext) Descriptor() ([]byte, []int) {
	return file_lte_protos_oai_spgw_state_proto_rawDescGZIP(), []int{13}
}

func (x *SpgwUeContext) GetS11BearerContext() []*S11BearerContext {
	if x != nil {
		return x.S11BearerContext
	}
	return nil
}

// s_plus_p_gw_eps_bearer_context_information
type S11BearerContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SgwEpsBearerContext *SgwEpsBearerContextInfo `protobuf:"bytes,1,opt,name=sgw_eps_bearer_context,json=sgwEpsBearerContext,proto3" json:"sgw_eps_bearer_context,omitempty"`
	PgwEpsBearerContext *PgwEpsBearerContextInfo `protobuf:"bytes,2,opt,name=pgw_eps_bearer_context,json=pgwEpsBearerContext,proto3" json:"pgw_eps_bearer_context,omitempty"`
}

func (x *S11BearerContext) Reset() {
	*x = S11BearerContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S11BearerContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S11BearerContext) ProtoMessage() {}

func (x *S11BearerContext) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S11BearerContext.ProtoReflect.Descriptor instead.
func (*S11BearerContext) Descriptor() ([]byte, []int) {
	return file_lte_protos_oai_spgw_state_proto_rawDescGZIP(), []int{14}
}

func (x *S11BearerContext) GetSgwEpsBearerContext() *SgwEpsBearerContextInfo {
	if x != nil {
		return x.SgwEpsBearerContext
	}
	return nil
}

func (x *S11BearerContext) GetPgwEpsBearerContext() *PgwEpsBearerContextInfo {
	if x != nil {
		return x.PgwEpsBearerContext
	}
	return nil
}

// gtvpv1u_data
type GTPV1UData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	IpAddress string `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	// Deprecated: Do not use.
	SeqNum uint32 `protobuf:"varint,2,opt,name=seq_num,json=seqNum,proto3" json:"seq_num,omitempty"`
	// Deprecated: Do not use.
	RestartCounter uint32 `protobuf:"varint,3,opt,name=restart_counter,json=restartCounter,proto3" json:"restart_counter,omitempty"`
	Fd0            uint32 `protobuf:"varint,4,opt,name=fd0,proto3" json:"fd0,omitempty"`
	Fd1U           uint32 `protobuf:"varint,5,opt,name=fd1u,proto3" json:"fd1u,omitempty"`
}

func (x *GTPV1UData) Reset() {
	*x = GTPV1UData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GTPV1UData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GTPV1UData) ProtoMessage() {}

func (x *GTPV1UData) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GTPV1UData.ProtoReflect.Descriptor instead.
func (*GTPV1UData) Descriptor() ([]byte, []int) {
	return file_lte_protos_oai_spgw_state_proto_rawDescGZIP(), []int{15}
}

// Deprecated: Do not use.
func (x *GTPV1UData) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

// Deprecated: Do not use.
func (x *GTPV1UData) GetSeqNum() uint32 {
	if x != nil {
		return x.SeqNum
	}
	return 0
}

// Deprecated: Do not use.
func (x *GTPV1UData) GetRestartCounter() uint32 {
	if x != nil {
		return x.RestartCounter
	}
	return 0
}

func (x *GTPV1UData) GetFd0() uint32 {
	if x != nil {
		return x.Fd0
	}
	return 0
}

func (x *GTPV1UData) GetFd1U() uint32 {
	if x != nil {
		return x.Fd1U
	}
	return 0
}

type SpgwState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gtpv1UTeid        uint32      `protobuf:"varint,2,opt,name=gtpv1u_teid,json=gtpv1uTeid,proto3" json:"gtpv1u_teid,omitempty"`
	Ipv4ListFree      []uint64    `protobuf:"varint,5,rep,packed,name=ipv4_list_free,json=ipv4ListFree,proto3" json:"ipv4_list_free,omitempty"`
	Ipv4ListAllocated []uint64    `protobuf:"varint,6,rep,packed,name=ipv4_list_allocated,json=ipv4ListAllocated,proto3" json:"ipv4_list_allocated,omitempty"`
	Gtpv1UData        *GTPV1UData `protobuf:"bytes,7,opt,name=gtpv1u_data,json=gtpv1uData,proto3" json:"gtpv1u_data,omitempty"`
}

func (x *SpgwState) Reset() {
	*x = SpgwState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpgwState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpgwState) ProtoMessage() {}

func (x *SpgwState) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_oai_spgw_state_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpgwState.ProtoReflect.Descriptor instead.
func (*SpgwState) Descriptor() ([]byte, []int) {
	return file_lte_protos_oai_spgw_state_proto_rawDescGZIP(), []int{16}
}

func (x *SpgwState) GetGtpv1UTeid() uint32 {
	if x != nil {
		return x.Gtpv1UTeid
	}
	return 0
}

func (x *SpgwState) GetIpv4ListFree() []uint64 {
	if x != nil {
		return x.Ipv4ListFree
	}
	return nil
}

func (x *SpgwState) GetIpv4ListAllocated() []uint64 {
	if x != nil {
		return x.Ipv4ListAllocated
	}
	return nil
}

func (x *SpgwState) GetGtpv1UData() *GTPV1UData {
	if x != nil {
		return x.Gtpv1UData
	}
	return nil
}

var File_lte_protos_oai_spgw_state_proto protoreflect.FileDescriptor

var file_lte_protos_oai_spgw_state_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6c, 0x74, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6f, 0x61, 0x69,
	0x2f, 0x73, 0x70, 0x67, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0d, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x6f, 0x61, 0x69,
	0x1a, 0x21, 0x6c, 0x74, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6f, 0x61, 0x69,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x6c, 0x74, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x6f, 0x61, 0x69, 0x2f, 0x73, 0x74, 0x64, 0x5f, 0x33, 0x67, 0x70, 0x70, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf0, 0x04, 0x0a, 0x17, 0x53, 0x67, 0x77,
	0x45, 0x70, 0x73, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6d, 0x73, 0x69,
	0x5f, 0x75, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x69, 0x6d, 0x73, 0x69, 0x55, 0x6e, 0x61,
	0x75, 0x74, 0x68, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x73, 0x69, 0x73, 0x64, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x73,
	0x69, 0x73, 0x64, 0x6e, 0x12, 0x40, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x6f, 0x61, 0x69,
	0x2e, 0x45, 0x63, 0x67, 0x69, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6e,
	0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x72, 0x78, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x74, 0x72, 0x78, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d,
	0x73, 0x69, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x6d, 0x73, 0x69,
	0x36, 0x34, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x6d, 0x65, 0x5f, 0x74, 0x65, 0x69, 0x64, 0x5f, 0x73,
	0x31, 0x31, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x6d, 0x65, 0x54, 0x65, 0x69,
	0x64, 0x53, 0x31, 0x31, 0x12, 0x2b, 0x0a, 0x12, 0x6d, 0x6d, 0x65, 0x5f, 0x69, 0x70, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x31, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0f, 0x6d, 0x6d, 0x65, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x31,
	0x31, 0x12, 0x25, 0x0a, 0x0f, 0x73, 0x67, 0x77, 0x5f, 0x74, 0x65, 0x69, 0x64, 0x5f, 0x73, 0x31,
	0x31, 0x5f, 0x73, 0x34, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x67, 0x77, 0x54,
	0x65, 0x69, 0x64, 0x53, 0x31, 0x31, 0x53, 0x34, 0x12, 0x30, 0x0a, 0x15, 0x73, 0x67, 0x77, 0x5f,
	0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x31, 0x31, 0x5f, 0x73,
	0x34, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x73, 0x67, 0x77, 0x49, 0x70, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x31, 0x31, 0x53, 0x34, 0x12, 0x46, 0x0a, 0x0e, 0x70, 0x64,
	0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x6f,
	0x61, 0x69, 0x2e, 0x53, 0x67, 0x77, 0x50, 0x64, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x70, 0x64, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0d, 0x73, 0x61, 0x76, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x67, 0x6d,
	0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x6f, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0c,
	0x73, 0x61, 0x76, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x12,
	0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72,
	0x65, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61,
	0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x6f, 0x61, 0x69, 0x2e, 0x50, 0x67, 0x77, 0x43, 0x62, 0x72, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x52, 0x11, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x0f,
	0x50, 0x67, 0x77, 0x43, 0x62, 0x72, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74,
	0x65, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x64, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x64, 0x66, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x52,
	0x0a, 0x13, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x70, 0x73, 0x5f, 0x62, 0x65,
	0x61, 0x72, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61,
	0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x6f, 0x61, 0x69, 0x2e, 0x53, 0x67, 0x77, 0x45,
	0x70, 0x73, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x11, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x70, 0x73, 0x42, 0x65, 0x61, 0x72, 0x65,
	0x72, 0x73, 0x22, 0x34, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x63, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x6d, 0x63, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x6e, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d, 0x6e, 0x63, 0x22, 0x59, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65,
	0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x7a, 0x6f, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e,
	0x65, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x61, 0x79, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x73, 0x61,
	0x76, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x12, 0x64, 0x61, 0x79, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0xbe, 0x05, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x72, 0x78, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x74, 0x72, 0x78, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x74, 0x65, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x73, 0x69, 0x73,
	0x64, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6d, 0x73, 0x69, 0x73, 0x64, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x65, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d,
	0x65, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x6c, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x75, 0x6c, 0x69, 0x12, 0x46, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x5f,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x6f, 0x61, 0x69, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x6e, 0x67, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x0e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x6e, 0x67, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x72, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x64, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x64, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x61, 0x70, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x61, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x70, 0x61, 0x61, 0x12, 0x27, 0x0a, 0x04, 0x61, 0x6d, 0x62, 0x72, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65,
	0x2e, 0x6f, 0x61, 0x69, 0x2e, 0x41, 0x6d, 0x62, 0x72, 0x52, 0x04, 0x61, 0x6d, 0x62, 0x72, 0x12,
	0x24, 0x0a, 0x03, 0x70, 0x63, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d,
	0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x6f, 0x61, 0x69, 0x2e, 0x50, 0x63, 0x6f,
	0x52, 0x03, 0x70, 0x63, 0x6f, 0x12, 0x43, 0x0a, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f,
	0x66, 0x74, 0x65, 0x69, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x70, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x6f,
	0x61, 0x69, 0x2e, 0x46, 0x74, 0x65, 0x69, 0x64, 0x52, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x46, 0x74, 0x65, 0x69, 0x64, 0x46, 0x6f, 0x72, 0x43, 0x70, 0x12, 0x69, 0x0a, 0x1d, 0x62, 0x65,
	0x61, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x5f, 0x74, 0x6f,
	0x5f, 0x62, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x14, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x6f, 0x61,
	0x69, 0x2e, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54,
	0x6f, 0x42, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x19, 0x62, 0x65, 0x61, 0x72,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x54, 0x6f, 0x42, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x70,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x70, 0x12, 0x39,
	0x0a, 0x0c, 0x75, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65,
	0x2e, 0x6f, 0x61, 0x69, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x0a, 0x75,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x39, 0x0a, 0x18, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x22, 0xbb, 0x01, 0x0a, 0x18, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x42, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x22, 0x0a, 0x0d, 0x65, 0x70, 0x73, 0x5f, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x65, 0x70, 0x73, 0x42, 0x65, 0x61,
	0x72, 0x65, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x03, 0x74, 0x66, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x6f,
	0x61, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x03, 0x74, 0x66, 0x74, 0x12, 0x45, 0x0a, 0x10, 0x62,
	0x65, 0x61, 0x72, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x71, 0x6f, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74,
	0x65, 0x2e, 0x6f, 0x61, 0x69, 0x2e, 0x53, 0x67, 0x77, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x51,
	0x6f, 0x73, 0x52, 0x0e, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x51,
	0x6f, 0x73, 0x22, 0x79, 0x0a, 0x17, 0x50, 0x67, 0x77, 0x45, 0x70, 0x73, 0x42, 0x65, 0x61, 0x72,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x69, 0x6d, 0x73,
	0x69, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6d, 0x73, 0x69, 0x5f, 0x75, 0x6e, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x13, 0x69, 0x6d, 0x73, 0x69, 0x55, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x73, 0x69, 0x73, 0x64, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x73, 0x69, 0x73, 0x64, 0x6e, 0x22, 0xc7, 0x02,
	0x0a, 0x10, 0x53, 0x67, 0x77, 0x50, 0x64, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x0a, 0x61, 0x70, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x6e, 0x49, 0x6e, 0x55, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x15, 0x70, 0x67, 0x77, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x63, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x11, 0x70, 0x67, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x55, 0x73, 0x65,
	0x43, 0x70, 0x12, 0x30, 0x0a, 0x15, 0x70, 0x67, 0x77, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x11, 0x70, 0x67, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x55,
	0x73, 0x65, 0x55, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x1c, 0x75,
	0x65, 0x5f, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x5f,
	0x70, 0x73, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x18, 0x75, 0x65, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x46, 0x6f,
	0x72, 0x50, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x0f, 0x65,
	0x70, 0x73, 0x5f, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65,
	0x2e, 0x6f, 0x61, 0x69, 0x2e, 0x53, 0x67, 0x77, 0x45, 0x70, 0x73, 0x42, 0x65, 0x61, 0x72, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0d, 0x65, 0x70, 0x73, 0x42, 0x65, 0x61,
	0x72, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x9b, 0x05, 0x0a, 0x13, 0x53, 0x67, 0x77, 0x45,
	0x70, 0x73, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x22, 0x0a, 0x0d, 0x65, 0x70, 0x73, 0x5f, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x65, 0x70, 0x73, 0x42, 0x65, 0x61, 0x72, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x61, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x70, 0x61, 0x61, 0x12, 0x30, 0x0a, 0x15, 0x70, 0x67, 0x77, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x75, 0x70, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x70, 0x67, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x55, 0x73, 0x65, 0x55, 0x70, 0x12, 0x28, 0x0a, 0x11, 0x70, 0x67, 0x77, 0x5f, 0x74,
	0x65, 0x69, 0x64, 0x5f, 0x73, 0x35, 0x5f, 0x73, 0x38, 0x5f, 0x75, 0x70, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x70, 0x67, 0x77, 0x54, 0x65, 0x69, 0x64, 0x53, 0x35, 0x53, 0x38, 0x55,
	0x70, 0x12, 0x33, 0x0a, 0x17, 0x73, 0x67, 0x77, 0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x73, 0x35, 0x5f, 0x73, 0x38, 0x5f, 0x75, 0x70, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x12, 0x73, 0x67, 0x77, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x53, 0x35, 0x53, 0x38, 0x55, 0x70, 0x12, 0x28, 0x0a, 0x11, 0x73, 0x67, 0x77, 0x5f, 0x74, 0x65,
	0x69, 0x64, 0x5f, 0x73, 0x35, 0x5f, 0x73, 0x38, 0x5f, 0x75, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x73, 0x67, 0x77, 0x54, 0x65, 0x69, 0x64, 0x53, 0x35, 0x53, 0x38, 0x55, 0x70,
	0x12, 0x3c, 0x0a, 0x1c, 0x73, 0x67, 0x77, 0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x73, 0x31, 0x75, 0x5f, 0x73, 0x31, 0x32, 0x5f, 0x73, 0x34, 0x5f, 0x75, 0x70,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x16, 0x73, 0x67, 0x77, 0x49, 0x70, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x53, 0x31, 0x75, 0x53, 0x31, 0x32, 0x53, 0x34, 0x55, 0x70, 0x12, 0x31,
	0x0a, 0x16, 0x73, 0x67, 0x77, 0x5f, 0x74, 0x65, 0x69, 0x64, 0x5f, 0x73, 0x31, 0x75, 0x5f, 0x73,
	0x31, 0x32, 0x5f, 0x73, 0x34, 0x5f, 0x75, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11,
	0x73, 0x67, 0x77, 0x54, 0x65, 0x69, 0x64, 0x53, 0x31, 0x75, 0x53, 0x31, 0x32, 0x53, 0x34, 0x55,
	0x70, 0x12, 0x2b, 0x0a, 0x12, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x73, 0x31, 0x75, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x65,
	0x6e, 0x62, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x31, 0x75, 0x12, 0x20,
	0x0a, 0x0c, 0x65, 0x6e, 0x62, 0x5f, 0x74, 0x65, 0x69, 0x64, 0x5f, 0x73, 0x31, 0x75, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x6e, 0x62, 0x54, 0x65, 0x69, 0x64, 0x53, 0x31, 0x75,
	0x12, 0x41, 0x0a, 0x0e, 0x65, 0x70, 0x73, 0x5f, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x5f, 0x71,
	0x6f, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61,
	0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x6f, 0x61, 0x69, 0x2e, 0x53, 0x67, 0x77, 0x42, 0x65, 0x61, 0x72,
	0x65, 0x72, 0x51, 0x6f, 0x73, 0x52, 0x0c, 0x65, 0x70, 0x73, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72,
	0x51, 0x6f, 0x73, 0x12, 0x34, 0x0a, 0x03, 0x74, 0x66, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x6f, 0x61, 0x69,
	0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x03, 0x74, 0x66, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x75, 0x6d,
	0x5f, 0x73, 0x64, 0x66, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x53,
	0x64, 0x66, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x64, 0x66, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x1a, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x64, 0x66, 0x49, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x75, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa7, 0x02, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x4d, 0x0a,
	0x12, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x67, 0x6d,
	0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x6f, 0x61, 0x69, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x10, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74,
	0x65, 0x2e, 0x6f, 0x61, 0x69, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x66, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x74, 0x66, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x65,
	0x62, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x65, 0x62, 0x69, 0x74, 0x22,
	0xb6, 0x02, 0x0a, 0x10, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6e,
	0x65, 0x77, 0x5f, 0x74, 0x66, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d,
	0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x6f, 0x61, 0x69, 0x2e, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x65, 0x77, 0x54, 0x66, 0x74, 0x12, 0x47, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x6f,
	0x61, 0x69, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x0f, 0x61, 0x64, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x4f, 0x0a, 0x15, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x6f, 0x61, 0x69, 0x2e,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x13, 0x72, 0x65,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x45, 0x0a, 0x1f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x1c, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0xfe, 0x01, 0x0a, 0x0c, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x61,
	0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x70, 0x61, 0x72, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x27, 0x0a,
	0x0f, 0x65, 0x76, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x65, 0x63, 0x65, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x65, 0x76, 0x61, 0x6c, 0x50, 0x72, 0x65, 0x63,
	0x65, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x59,
	0x0a, 0x16, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x6f, 0x61, 0x69, 0x2e, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x14, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x0c, 0x53, 0x67,
	0x77, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x51, 0x6f, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x63,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x63, 0x69, 0x12, 0x0e, 0x0a, 0x02,
	0x70, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x70, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x70, 0x76, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x76, 0x69, 0x12, 0x10,
	0x0a, 0x03, 0x71, 0x63, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x71, 0x63, 0x69,
	0x12, 0x25, 0x0a, 0x03, 0x67, 0x62, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x6f, 0x61, 0x69, 0x2e, 0x41, 0x6d,
	0x62, 0x72, 0x52, 0x03, 0x67, 0x62, 0x72, 0x12, 0x25, 0x0a, 0x03, 0x6d, 0x62, 0x72, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65,
	0x2e, 0x6f, 0x61, 0x69, 0x2e, 0x41, 0x6d, 0x62, 0x72, 0x52, 0x03, 0x6d, 0x62, 0x72, 0x22, 0x5e,
	0x0a, 0x0d, 0x53, 0x70, 0x67, 0x77, 0x55, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x4d, 0x0a, 0x12, 0x73, 0x31, 0x31, 0x5f, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61,
	0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x6f, 0x61, 0x69, 0x2e, 0x53, 0x31, 0x31, 0x42,
	0x65, 0x61, 0x72, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x10, 0x73, 0x31,
	0x31, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0xcc,
	0x01, 0x0a, 0x10, 0x53, 0x31, 0x31, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x5b, 0x0a, 0x16, 0x73, 0x67, 0x77, 0x5f, 0x65, 0x70, 0x73, 0x5f, 0x62,
	0x65, 0x61, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e,
	0x6f, 0x61, 0x69, 0x2e, 0x53, 0x67, 0x77, 0x45, 0x70, 0x73, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x13, 0x73, 0x67, 0x77,
	0x45, 0x70, 0x73, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x5b, 0x0a, 0x16, 0x70, 0x67, 0x77, 0x5f, 0x65, 0x70, 0x73, 0x5f, 0x62, 0x65, 0x61, 0x72,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x6f, 0x61, 0x69,
	0x2e, 0x50, 0x67, 0x77, 0x45, 0x70, 0x73, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x13, 0x70, 0x67, 0x77, 0x45, 0x70, 0x73,
	0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x9f, 0x01,
	0x0a, 0x0a, 0x47, 0x54, 0x50, 0x56, 0x31, 0x75, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0a,
	0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x02, 0x18, 0x01, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1b, 0x0a, 0x07, 0x73, 0x65, 0x71, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x73, 0x65, 0x71, 0x4e, 0x75, 0x6d, 0x12, 0x2b, 0x0a, 0x0f,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x64, 0x30,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x66, 0x64, 0x30, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x64, 0x31, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x64, 0x31, 0x75, 0x22,
	0xbe, 0x01, 0x0a, 0x09, 0x53, 0x70, 0x67, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x67, 0x74, 0x70, 0x76, 0x31, 0x75, 0x5f, 0x74, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x67, 0x74, 0x70, 0x76, 0x31, 0x75, 0x54, 0x65, 0x69, 0x64, 0x12, 0x24,
	0x0a, 0x0e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x66, 0x72, 0x65, 0x65,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0c, 0x69, 0x70, 0x76, 0x34, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x72, 0x65, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x11, 0x69, 0x70, 0x76, 0x34, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x0b, 0x67, 0x74, 0x70, 0x76, 0x31, 0x75, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x67, 0x6d,
	0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e, 0x6f, 0x61, 0x69, 0x2e, 0x47, 0x54, 0x50, 0x56, 0x31, 0x75,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x67, 0x74, 0x70, 0x76, 0x31, 0x75, 0x44, 0x61, 0x74, 0x61,
	0x42, 0x1f, 0x5a, 0x1d, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2f, 0x6c, 0x74, 0x65, 0x2f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6f, 0x61,
	0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lte_protos_oai_spgw_state_proto_rawDescOnce sync.Once
	file_lte_protos_oai_spgw_state_proto_rawDescData = file_lte_protos_oai_spgw_state_proto_rawDesc
)

func file_lte_protos_oai_spgw_state_proto_rawDescGZIP() []byte {
	file_lte_protos_oai_spgw_state_proto_rawDescOnce.Do(func() {
		file_lte_protos_oai_spgw_state_proto_rawDescData = protoimpl.X.CompressGZIP(file_lte_protos_oai_spgw_state_proto_rawDescData)
	})
	return file_lte_protos_oai_spgw_state_proto_rawDescData
}

var file_lte_protos_oai_spgw_state_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_lte_protos_oai_spgw_state_proto_goTypes = []interface{}{
	(*SgwEpsBearerContextInfo)(nil),  // 0: magma.lte.oai.SgwEpsBearerContextInfo
	(*PgwCbrProcedure)(nil),          // 1: magma.lte.oai.PgwCbrProcedure
	(*ServingNetwork)(nil),           // 2: magma.lte.oai.ServingNetwork
	(*TimeZone)(nil),                 // 3: magma.lte.oai.TimeZone
	(*CreateSessionMessage)(nil),     // 4: magma.lte.oai.CreateSessionMessage
	(*BearerContextToBeCreated)(nil), // 5: magma.lte.oai.BearerContextToBeCreated
	(*PgwEpsBearerContextInfo)(nil),  // 6: magma.lte.oai.PgwEpsBearerContextInfo
	(*SgwPdnConnection)(nil),         // 7: magma.lte.oai.SgwPdnConnection
	(*SgwEpsBearerContext)(nil),      // 8: magma.lte.oai.SgwEpsBearerContext
	(*TrafficFlowTemplate)(nil),      // 9: magma.lte.oai.TrafficFlowTemplate
	(*PacketFilterList)(nil),         // 10: magma.lte.oai.PacketFilterList
	(*PacketFilter)(nil),             // 11: magma.lte.oai.PacketFilter
	(*SgwBearerQos)(nil),             // 12: magma.lte.oai.SgwBearerQos
	(*SpgwUeContext)(nil),            // 13: magma.lte.oai.SpgwUeContext
	(*S11BearerContext)(nil),         // 14: magma.lte.oai.S11BearerContext
	(*GTPV1UData)(nil),               // 15: magma.lte.oai.GTPV1uData
	(*SpgwState)(nil),                // 16: magma.lte.oai.SpgwState
	(*Ecgi)(nil),                     // 17: magma.lte.oai.Ecgi
	(*Ambr)(nil),                     // 18: magma.lte.oai.Ambr
	(*Pco)(nil),                      // 19: magma.lte.oai.Pco
	(*Fteid)(nil),                    // 20: magma.lte.oai.Fteid
	(*ParametersList)(nil),           // 21: magma.lte.oai.ParametersList
	(*PacketFilterContents)(nil),     // 22: magma.lte.oai.PacketFilterContents
}
var file_lte_protos_oai_spgw_state_proto_depIdxs = []int32{
	17, // 0: magma.lte.oai.SgwEpsBearerContextInfo.last_known_cell_id:type_name -> magma.lte.oai.Ecgi
	7,  // 1: magma.lte.oai.SgwEpsBearerContextInfo.pdn_connection:type_name -> magma.lte.oai.SgwPdnConnection
	4,  // 2: magma.lte.oai.SgwEpsBearerContextInfo.saved_message:type_name -> magma.lte.oai.CreateSessionMessage
	1,  // 3: magma.lte.oai.SgwEpsBearerContextInfo.pending_procedures:type_name -> magma.lte.oai.PgwCbrProcedure
	8,  // 4: magma.lte.oai.PgwCbrProcedure.pending_eps_bearers:type_name -> magma.lte.oai.SgwEpsBearerContext
	2,  // 5: magma.lte.oai.CreateSessionMessage.serving_network:type_name -> magma.lte.oai.ServingNetwork
	18, // 6: magma.lte.oai.CreateSessionMessage.ambr:type_name -> magma.lte.oai.Ambr
	19, // 7: magma.lte.oai.CreateSessionMessage.pco:type_name -> magma.lte.oai.Pco
	20, // 8: magma.lte.oai.CreateSessionMessage.sender_fteid_for_cp:type_name -> magma.lte.oai.Fteid
	5,  // 9: magma.lte.oai.CreateSessionMessage.bearer_contexts_to_be_created:type_name -> magma.lte.oai.BearerContextToBeCreated
	3,  // 10: magma.lte.oai.CreateSessionMessage.ue_time_zone:type_name -> magma.lte.oai.TimeZone
	9,  // 11: magma.lte.oai.BearerContextToBeCreated.tft:type_name -> magma.lte.oai.TrafficFlowTemplate
	12, // 12: magma.lte.oai.BearerContextToBeCreated.bearer_level_qos:type_name -> magma.lte.oai.SgwBearerQos
	8,  // 13: magma.lte.oai.SgwPdnConnection.eps_bearer_list:type_name -> magma.lte.oai.SgwEpsBearerContext
	12, // 14: magma.lte.oai.SgwEpsBearerContext.eps_bearer_qos:type_name -> magma.lte.oai.SgwBearerQos
	9,  // 15: magma.lte.oai.SgwEpsBearerContext.tft:type_name -> magma.lte.oai.TrafficFlowTemplate
	10, // 16: magma.lte.oai.TrafficFlowTemplate.packet_filter_list:type_name -> magma.lte.oai.PacketFilterList
	21, // 17: magma.lte.oai.TrafficFlowTemplate.parameters_list:type_name -> magma.lte.oai.ParametersList
	11, // 18: magma.lte.oai.PacketFilterList.create_new_tft:type_name -> magma.lte.oai.PacketFilter
	11, // 19: magma.lte.oai.PacketFilterList.add_packet_filter:type_name -> magma.lte.oai.PacketFilter
	11, // 20: magma.lte.oai.PacketFilterList.replace_packet_filter:type_name -> magma.lte.oai.PacketFilter
	22, // 21: magma.lte.oai.PacketFilter.packet_filter_contents:type_name -> magma.lte.oai.PacketFilterContents
	18, // 22: magma.lte.oai.SgwBearerQos.gbr:type_name -> magma.lte.oai.Ambr
	18, // 23: magma.lte.oai.SgwBearerQos.mbr:type_name -> magma.lte.oai.Ambr
	14, // 24: magma.lte.oai.SpgwUeContext.s11_bearer_context:type_name -> magma.lte.oai.S11BearerContext
	0,  // 25: magma.lte.oai.S11BearerContext.sgw_eps_bearer_context:type_name -> magma.lte.oai.SgwEpsBearerContextInfo
	6,  // 26: magma.lte.oai.S11BearerContext.pgw_eps_bearer_context:type_name -> magma.lte.oai.PgwEpsBearerContextInfo
	15, // 27: magma.lte.oai.SpgwState.gtpv1u_data:type_name -> magma.lte.oai.GTPV1uData
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_lte_protos_oai_spgw_state_proto_init() }
func file_lte_protos_oai_spgw_state_proto_init() {
	if File_lte_protos_oai_spgw_state_proto != nil {
		return
	}
	file_lte_protos_oai_common_types_proto_init()
	file_lte_protos_oai_std_3gpp_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_lte_protos_oai_spgw_state_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SgwEpsBearerContextInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_oai_spgw_state_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgwCbrProcedure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_oai_spgw_state_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServingNetwork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_oai_spgw_state_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeZone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_oai_spgw_state_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSessionMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_oai_spgw_state_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BearerContextToBeCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_oai_spgw_state_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgwEpsBearerContextInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_oai_spgw_state_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SgwPdnConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_oai_spgw_state_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SgwEpsBearerContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_oai_spgw_state_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficFlowTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_oai_spgw_state_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketFilterList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_oai_spgw_state_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_oai_spgw_state_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SgwBearerQos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_oai_spgw_state_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpgwUeContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_oai_spgw_state_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S11BearerContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_oai_spgw_state_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GTPV1UData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_oai_spgw_state_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpgwState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lte_protos_oai_spgw_state_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lte_protos_oai_spgw_state_proto_goTypes,
		DependencyIndexes: file_lte_protos_oai_spgw_state_proto_depIdxs,
		MessageInfos:      file_lte_protos_oai_spgw_state_proto_msgTypes,
	}.Build()
	File_lte_protos_oai_spgw_state_proto = out.File
	file_lte_protos_oai_spgw_state_proto_rawDesc = nil
	file_lte_protos_oai_spgw_state_proto_goTypes = nil
	file_lte_protos_oai_spgw_state_proto_depIdxs = nil
}
