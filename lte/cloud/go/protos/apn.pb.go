// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lte/protos/apn.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AggregatedMaximumBitrate_BitrateUnitsAMBR int32

const (
	AggregatedMaximumBitrate_BPS  AggregatedMaximumBitrate_BitrateUnitsAMBR = 0
	AggregatedMaximumBitrate_KBPS AggregatedMaximumBitrate_BitrateUnitsAMBR = 1
)

var AggregatedMaximumBitrate_BitrateUnitsAMBR_name = map[int32]string{
	0: "BPS",
	1: "KBPS",
}

var AggregatedMaximumBitrate_BitrateUnitsAMBR_value = map[string]int32{
	"BPS":  0,
	"KBPS": 1,
}

func (x AggregatedMaximumBitrate_BitrateUnitsAMBR) String() string {
	return proto.EnumName(AggregatedMaximumBitrate_BitrateUnitsAMBR_name, int32(x))
}

func (AggregatedMaximumBitrate_BitrateUnitsAMBR) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_07409b71340b860d, []int{1, 0}
}

type APNConfiguration_PDNType int32

const (
	APNConfiguration_IPV4         APNConfiguration_PDNType = 0
	APNConfiguration_IPV6         APNConfiguration_PDNType = 1
	APNConfiguration_IPV4V6       APNConfiguration_PDNType = 2
	APNConfiguration_IPV4_OR_IPV6 APNConfiguration_PDNType = 3
)

var APNConfiguration_PDNType_name = map[int32]string{
	0: "IPV4",
	1: "IPV6",
	2: "IPV4V6",
	3: "IPV4_OR_IPV6",
}

var APNConfiguration_PDNType_value = map[string]int32{
	"IPV4":         0,
	"IPV6":         1,
	"IPV4V6":       2,
	"IPV4_OR_IPV6": 3,
}

func (x APNConfiguration_PDNType) String() string {
	return proto.EnumName(APNConfiguration_PDNType_name, int32(x))
}

func (APNConfiguration_PDNType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_07409b71340b860d, []int{2, 0}
}

type APNConfig_PDNType int32

const (
	APNConfig_IPV4         APNConfig_PDNType = 0
	APNConfig_IPV6         APNConfig_PDNType = 1
	APNConfig_IPV4V6       APNConfig_PDNType = 2
	APNConfig_IPV4_OR_IPV6 APNConfig_PDNType = 3
)

var APNConfig_PDNType_name = map[int32]string{
	0: "IPV4",
	1: "IPV6",
	2: "IPV4V6",
	3: "IPV4_OR_IPV6",
}

var APNConfig_PDNType_value = map[string]int32{
	"IPV4":         0,
	"IPV6":         1,
	"IPV4V6":       2,
	"IPV4_OR_IPV6": 3,
}

func (x APNConfig_PDNType) String() string {
	return proto.EnumName(APNConfig_PDNType_name, int32(x))
}

func (APNConfig_PDNType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_07409b71340b860d, []int{3, 0}
}

type GatewayAPNConfig_APNFilter int32

const (
	GatewayAPNConfig_DEFAULT GatewayAPNConfig_APNFilter = 0
	GatewayAPNConfig_BLOCK   GatewayAPNConfig_APNFilter = 1
	GatewayAPNConfig_PERMIT  GatewayAPNConfig_APNFilter = 2
)

var GatewayAPNConfig_APNFilter_name = map[int32]string{
	0: "DEFAULT",
	1: "BLOCK",
	2: "PERMIT",
}

var GatewayAPNConfig_APNFilter_value = map[string]int32{
	"DEFAULT": 0,
	"BLOCK":   1,
	"PERMIT":  2,
}

func (x GatewayAPNConfig_APNFilter) String() string {
	return proto.EnumName(GatewayAPNConfig_APNFilter_name, int32(x))
}

func (GatewayAPNConfig_APNFilter) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_07409b71340b860d, []int{4, 0}
}

type GatewayAPNConfig_EgressType int32

const (
	GatewayAPNConfig_VLAN GatewayAPNConfig_EgressType = 0
)

var GatewayAPNConfig_EgressType_name = map[int32]string{
	0: "VLAN",
}

var GatewayAPNConfig_EgressType_value = map[string]int32{
	"VLAN": 0,
}

func (x GatewayAPNConfig_EgressType) String() string {
	return proto.EnumName(GatewayAPNConfig_EgressType_name, int32(x))
}

func (GatewayAPNConfig_EgressType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_07409b71340b860d, []int{4, 1}
}

type GatewayAPNConfig_IpAllocatorType int32

const (
	GatewayAPNConfig_IP_POOL GatewayAPNConfig_IpAllocatorType = 0
	GatewayAPNConfig_DHCP    GatewayAPNConfig_IpAllocatorType = 1
)

var GatewayAPNConfig_IpAllocatorType_name = map[int32]string{
	0: "IP_POOL",
	1: "DHCP",
}

var GatewayAPNConfig_IpAllocatorType_value = map[string]int32{
	"IP_POOL": 0,
	"DHCP":    1,
}

func (x GatewayAPNConfig_IpAllocatorType) String() string {
	return proto.EnumName(GatewayAPNConfig_IpAllocatorType_name, int32(x))
}

func (GatewayAPNConfig_IpAllocatorType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_07409b71340b860d, []int{4, 2}
}

// For details about values see 29.212
type QoSProfile struct {
	ClassId                 int32    `protobuf:"varint,1,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	PriorityLevel           uint32   `protobuf:"varint,2,opt,name=priority_level,json=priorityLevel,proto3" json:"priority_level,omitempty"`
	PreemptionCapability    bool     `protobuf:"varint,3,opt,name=preemption_capability,json=preemptionCapability,proto3" json:"preemption_capability,omitempty"`
	PreemptionVulnerability bool     `protobuf:"varint,4,opt,name=preemption_vulnerability,json=preemptionVulnerability,proto3" json:"preemption_vulnerability,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *QoSProfile) Reset()         { *m = QoSProfile{} }
func (m *QoSProfile) String() string { return proto.CompactTextString(m) }
func (*QoSProfile) ProtoMessage()    {}
func (*QoSProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_07409b71340b860d, []int{0}
}

func (m *QoSProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QoSProfile.Unmarshal(m, b)
}
func (m *QoSProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QoSProfile.Marshal(b, m, deterministic)
}
func (m *QoSProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QoSProfile.Merge(m, src)
}
func (m *QoSProfile) XXX_Size() int {
	return xxx_messageInfo_QoSProfile.Size(m)
}
func (m *QoSProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_QoSProfile.DiscardUnknown(m)
}

var xxx_messageInfo_QoSProfile proto.InternalMessageInfo

func (m *QoSProfile) GetClassId() int32 {
	if m != nil {
		return m.ClassId
	}
	return 0
}

func (m *QoSProfile) GetPriorityLevel() uint32 {
	if m != nil {
		return m.PriorityLevel
	}
	return 0
}

func (m *QoSProfile) GetPreemptionCapability() bool {
	if m != nil {
		return m.PreemptionCapability
	}
	return false
}

func (m *QoSProfile) GetPreemptionVulnerability() bool {
	if m != nil {
		return m.PreemptionVulnerability
	}
	return false
}

// APN authorized bitrate
type AggregatedMaximumBitrate struct {
	// Maximum uplink bitrate
	MaxBandwidthUl uint64 `protobuf:"varint,1,opt,name=max_bandwidth_ul,json=maxBandwidthUl,proto3" json:"max_bandwidth_ul,omitempty"`
	// Maximum downlink bitrate
	MaxBandwidthDl uint64 `protobuf:"varint,2,opt,name=max_bandwidth_dl,json=maxBandwidthDl,proto3" json:"max_bandwidth_dl,omitempty"`
	// Unit (either bps or Kbps)
	BrUnit               AggregatedMaximumBitrate_BitrateUnitsAMBR `protobuf:"varint,3,opt,name=br_unit,json=brUnit,proto3,enum=magma.lte.AggregatedMaximumBitrate_BitrateUnitsAMBR" json:"br_unit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *AggregatedMaximumBitrate) Reset()         { *m = AggregatedMaximumBitrate{} }
func (m *AggregatedMaximumBitrate) String() string { return proto.CompactTextString(m) }
func (*AggregatedMaximumBitrate) ProtoMessage()    {}
func (*AggregatedMaximumBitrate) Descriptor() ([]byte, []int) {
	return fileDescriptor_07409b71340b860d, []int{1}
}

func (m *AggregatedMaximumBitrate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregatedMaximumBitrate.Unmarshal(m, b)
}
func (m *AggregatedMaximumBitrate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregatedMaximumBitrate.Marshal(b, m, deterministic)
}
func (m *AggregatedMaximumBitrate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregatedMaximumBitrate.Merge(m, src)
}
func (m *AggregatedMaximumBitrate) XXX_Size() int {
	return xxx_messageInfo_AggregatedMaximumBitrate.Size(m)
}
func (m *AggregatedMaximumBitrate) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregatedMaximumBitrate.DiscardUnknown(m)
}

var xxx_messageInfo_AggregatedMaximumBitrate proto.InternalMessageInfo

func (m *AggregatedMaximumBitrate) GetMaxBandwidthUl() uint64 {
	if m != nil {
		return m.MaxBandwidthUl
	}
	return 0
}

func (m *AggregatedMaximumBitrate) GetMaxBandwidthDl() uint64 {
	if m != nil {
		return m.MaxBandwidthDl
	}
	return 0
}

func (m *AggregatedMaximumBitrate) GetBrUnit() AggregatedMaximumBitrate_BitrateUnitsAMBR {
	if m != nil {
		return m.BrUnit
	}
	return AggregatedMaximumBitrate_BPS
}

type APNConfiguration struct {
	// APN identifier
	ContextId uint32 `protobuf:"varint,1,opt,name=context_id,json=contextId,proto3" json:"context_id,omitempty"`
	// Contains either the APN Name or wildcard "*"
	ServiceSelection string                       `protobuf:"bytes,2,opt,name=service_selection,json=serviceSelection,proto3" json:"service_selection,omitempty"`
	QosProfile       *APNConfiguration_QoSProfile `protobuf:"bytes,3,opt,name=qos_profile,json=qosProfile,proto3" json:"qos_profile,omitempty"`
	Ambr             *AggregatedMaximumBitrate    `protobuf:"bytes,4,opt,name=ambr,proto3" json:"ambr,omitempty"`
	Pdn              APNConfiguration_PDNType     `protobuf:"varint,5,opt,name=pdn,proto3,enum=magma.lte.APNConfiguration_PDNType" json:"pdn,omitempty"`
	// Optional static IP to allocate for this subscriber on this APN
	AssignedStaticIp string `protobuf:"bytes,6,opt,name=assigned_static_ip,json=assignedStaticIp,proto3" json:"assigned_static_ip,omitempty"`
	// resource is gateway-specific guidance for serving the APN
	Resource             *APNConfiguration_APNResource `protobuf:"bytes,7,opt,name=resource,proto3" json:"resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *APNConfiguration) Reset()         { *m = APNConfiguration{} }
func (m *APNConfiguration) String() string { return proto.CompactTextString(m) }
func (*APNConfiguration) ProtoMessage()    {}
func (*APNConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_07409b71340b860d, []int{2}
}

func (m *APNConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APNConfiguration.Unmarshal(m, b)
}
func (m *APNConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APNConfiguration.Marshal(b, m, deterministic)
}
func (m *APNConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APNConfiguration.Merge(m, src)
}
func (m *APNConfiguration) XXX_Size() int {
	return xxx_messageInfo_APNConfiguration.Size(m)
}
func (m *APNConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_APNConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_APNConfiguration proto.InternalMessageInfo

func (m *APNConfiguration) GetContextId() uint32 {
	if m != nil {
		return m.ContextId
	}
	return 0
}

func (m *APNConfiguration) GetServiceSelection() string {
	if m != nil {
		return m.ServiceSelection
	}
	return ""
}

func (m *APNConfiguration) GetQosProfile() *APNConfiguration_QoSProfile {
	if m != nil {
		return m.QosProfile
	}
	return nil
}

func (m *APNConfiguration) GetAmbr() *AggregatedMaximumBitrate {
	if m != nil {
		return m.Ambr
	}
	return nil
}

func (m *APNConfiguration) GetPdn() APNConfiguration_PDNType {
	if m != nil {
		return m.Pdn
	}
	return APNConfiguration_IPV4
}

func (m *APNConfiguration) GetAssignedStaticIp() string {
	if m != nil {
		return m.AssignedStaticIp
	}
	return ""
}

func (m *APNConfiguration) GetResource() *APNConfiguration_APNResource {
	if m != nil {
		return m.Resource
	}
	return nil
}

// APN QoS profile
type APNConfiguration_QoSProfile struct {
	ClassId                 int32    `protobuf:"varint,1,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	PriorityLevel           uint32   `protobuf:"varint,2,opt,name=priority_level,json=priorityLevel,proto3" json:"priority_level,omitempty"`
	PreemptionCapability    bool     `protobuf:"varint,3,opt,name=preemption_capability,json=preemptionCapability,proto3" json:"preemption_capability,omitempty"`
	PreemptionVulnerability bool     `protobuf:"varint,4,opt,name=preemption_vulnerability,json=preemptionVulnerability,proto3" json:"preemption_vulnerability,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *APNConfiguration_QoSProfile) Reset()         { *m = APNConfiguration_QoSProfile{} }
func (m *APNConfiguration_QoSProfile) String() string { return proto.CompactTextString(m) }
func (*APNConfiguration_QoSProfile) ProtoMessage()    {}
func (*APNConfiguration_QoSProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_07409b71340b860d, []int{2, 0}
}

func (m *APNConfiguration_QoSProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APNConfiguration_QoSProfile.Unmarshal(m, b)
}
func (m *APNConfiguration_QoSProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APNConfiguration_QoSProfile.Marshal(b, m, deterministic)
}
func (m *APNConfiguration_QoSProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APNConfiguration_QoSProfile.Merge(m, src)
}
func (m *APNConfiguration_QoSProfile) XXX_Size() int {
	return xxx_messageInfo_APNConfiguration_QoSProfile.Size(m)
}
func (m *APNConfiguration_QoSProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_APNConfiguration_QoSProfile.DiscardUnknown(m)
}

var xxx_messageInfo_APNConfiguration_QoSProfile proto.InternalMessageInfo

func (m *APNConfiguration_QoSProfile) GetClassId() int32 {
	if m != nil {
		return m.ClassId
	}
	return 0
}

func (m *APNConfiguration_QoSProfile) GetPriorityLevel() uint32 {
	if m != nil {
		return m.PriorityLevel
	}
	return 0
}

func (m *APNConfiguration_QoSProfile) GetPreemptionCapability() bool {
	if m != nil {
		return m.PreemptionCapability
	}
	return false
}

func (m *APNConfiguration_QoSProfile) GetPreemptionVulnerability() bool {
	if m != nil {
		return m.PreemptionVulnerability
	}
	return false
}

type APNConfiguration_APNResource struct {
	ApnName              string   `protobuf:"bytes,1,opt,name=apn_name,json=apnName,proto3" json:"apn_name,omitempty"`
	GatewayIp            string   `protobuf:"bytes,2,opt,name=gateway_ip,json=gatewayIp,proto3" json:"gateway_ip,omitempty"`
	GatewayMac           string   `protobuf:"bytes,3,opt,name=gateway_mac,json=gatewayMac,proto3" json:"gateway_mac,omitempty"`
	VlanId               uint32   `protobuf:"varint,4,opt,name=vlan_id,json=vlanId,proto3" json:"vlan_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *APNConfiguration_APNResource) Reset()         { *m = APNConfiguration_APNResource{} }
func (m *APNConfiguration_APNResource) String() string { return proto.CompactTextString(m) }
func (*APNConfiguration_APNResource) ProtoMessage()    {}
func (*APNConfiguration_APNResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_07409b71340b860d, []int{2, 1}
}

func (m *APNConfiguration_APNResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APNConfiguration_APNResource.Unmarshal(m, b)
}
func (m *APNConfiguration_APNResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APNConfiguration_APNResource.Marshal(b, m, deterministic)
}
func (m *APNConfiguration_APNResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APNConfiguration_APNResource.Merge(m, src)
}
func (m *APNConfiguration_APNResource) XXX_Size() int {
	return xxx_messageInfo_APNConfiguration_APNResource.Size(m)
}
func (m *APNConfiguration_APNResource) XXX_DiscardUnknown() {
	xxx_messageInfo_APNConfiguration_APNResource.DiscardUnknown(m)
}

var xxx_messageInfo_APNConfiguration_APNResource proto.InternalMessageInfo

func (m *APNConfiguration_APNResource) GetApnName() string {
	if m != nil {
		return m.ApnName
	}
	return ""
}

func (m *APNConfiguration_APNResource) GetGatewayIp() string {
	if m != nil {
		return m.GatewayIp
	}
	return ""
}

func (m *APNConfiguration_APNResource) GetGatewayMac() string {
	if m != nil {
		return m.GatewayMac
	}
	return ""
}

func (m *APNConfiguration_APNResource) GetVlanId() uint32 {
	if m != nil {
		return m.VlanId
	}
	return 0
}

// Network wide APN configuration
type APNConfig struct {
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Contains either the APN Name or wildcard "*"
	ServiceSelection     string                    `protobuf:"bytes,2,opt,name=service_selection,json=serviceSelection,proto3" json:"service_selection,omitempty"`
	QosProfile           *QoSProfile               `protobuf:"bytes,3,opt,name=qos_profile,json=qosProfile,proto3" json:"qos_profile,omitempty"`
	Ambr                 *AggregatedMaximumBitrate `protobuf:"bytes,4,opt,name=ambr,proto3" json:"ambr,omitempty"`
	Pdn                  APNConfig_PDNType         `protobuf:"varint,5,opt,name=pdn,proto3,enum=magma.lte.APNConfig_PDNType" json:"pdn,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *APNConfig) Reset()         { *m = APNConfig{} }
func (m *APNConfig) String() string { return proto.CompactTextString(m) }
func (*APNConfig) ProtoMessage()    {}
func (*APNConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_07409b71340b860d, []int{3}
}

func (m *APNConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APNConfig.Unmarshal(m, b)
}
func (m *APNConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APNConfig.Marshal(b, m, deterministic)
}
func (m *APNConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APNConfig.Merge(m, src)
}
func (m *APNConfig) XXX_Size() int {
	return xxx_messageInfo_APNConfig.Size(m)
}
func (m *APNConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_APNConfig.DiscardUnknown(m)
}

var xxx_messageInfo_APNConfig proto.InternalMessageInfo

func (m *APNConfig) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *APNConfig) GetServiceSelection() string {
	if m != nil {
		return m.ServiceSelection
	}
	return ""
}

func (m *APNConfig) GetQosProfile() *QoSProfile {
	if m != nil {
		return m.QosProfile
	}
	return nil
}

func (m *APNConfig) GetAmbr() *AggregatedMaximumBitrate {
	if m != nil {
		return m.Ambr
	}
	return nil
}

func (m *APNConfig) GetPdn() APNConfig_PDNType {
	if m != nil {
		return m.Pdn
	}
	return APNConfig_IPV4
}

// Gateway specific APN configuration
type GatewayAPNConfig struct {
	ApnId                uint32                            `protobuf:"varint,1,opt,name=apn_id,json=apnId,proto3" json:"apn_id,omitempty"`
	ApnFilter            GatewayAPNConfig_APNFilter        `protobuf:"varint,2,opt,name=apn_filter,json=apnFilter,proto3,enum=magma.lte.GatewayAPNConfig_APNFilter" json:"apn_filter,omitempty"`
	DnsPrimary           string                            `protobuf:"bytes,3,opt,name=dns_primary,json=dnsPrimary,proto3" json:"dns_primary,omitempty"`
	DnsSecondary         string                            `protobuf:"bytes,4,opt,name=dns_secondary,json=dnsSecondary,proto3" json:"dns_secondary,omitempty"`
	IpAllocatorType      GatewayAPNConfig_IpAllocatorType  `protobuf:"varint,5,opt,name=ip_allocator_type,json=ipAllocatorType,proto3,enum=magma.lte.GatewayAPNConfig_IpAllocatorType" json:"ip_allocator_type,omitempty"`
	IpBlock              string                            `protobuf:"bytes,6,opt,name=ip_block,json=ipBlock,proto3" json:"ip_block,omitempty"`
	TransportConfig      *GatewayAPNConfig_TransportConfig `protobuf:"bytes,7,opt,name=transport_config,json=transportConfig,proto3" json:"transport_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *GatewayAPNConfig) Reset()         { *m = GatewayAPNConfig{} }
func (m *GatewayAPNConfig) String() string { return proto.CompactTextString(m) }
func (*GatewayAPNConfig) ProtoMessage()    {}
func (*GatewayAPNConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_07409b71340b860d, []int{4}
}

func (m *GatewayAPNConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayAPNConfig.Unmarshal(m, b)
}
func (m *GatewayAPNConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayAPNConfig.Marshal(b, m, deterministic)
}
func (m *GatewayAPNConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayAPNConfig.Merge(m, src)
}
func (m *GatewayAPNConfig) XXX_Size() int {
	return xxx_messageInfo_GatewayAPNConfig.Size(m)
}
func (m *GatewayAPNConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayAPNConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayAPNConfig proto.InternalMessageInfo

func (m *GatewayAPNConfig) GetApnId() uint32 {
	if m != nil {
		return m.ApnId
	}
	return 0
}

func (m *GatewayAPNConfig) GetApnFilter() GatewayAPNConfig_APNFilter {
	if m != nil {
		return m.ApnFilter
	}
	return GatewayAPNConfig_DEFAULT
}

func (m *GatewayAPNConfig) GetDnsPrimary() string {
	if m != nil {
		return m.DnsPrimary
	}
	return ""
}

func (m *GatewayAPNConfig) GetDnsSecondary() string {
	if m != nil {
		return m.DnsSecondary
	}
	return ""
}

func (m *GatewayAPNConfig) GetIpAllocatorType() GatewayAPNConfig_IpAllocatorType {
	if m != nil {
		return m.IpAllocatorType
	}
	return GatewayAPNConfig_IP_POOL
}

func (m *GatewayAPNConfig) GetIpBlock() string {
	if m != nil {
		return m.IpBlock
	}
	return ""
}

func (m *GatewayAPNConfig) GetTransportConfig() *GatewayAPNConfig_TransportConfig {
	if m != nil {
		return m.TransportConfig
	}
	return nil
}

type GatewayAPNConfig_VlanConfig struct {
	VlanId               uint32   `protobuf:"varint,4,opt,name=vlan_id,json=vlanId,proto3" json:"vlan_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GatewayAPNConfig_VlanConfig) Reset()         { *m = GatewayAPNConfig_VlanConfig{} }
func (m *GatewayAPNConfig_VlanConfig) String() string { return proto.CompactTextString(m) }
func (*GatewayAPNConfig_VlanConfig) ProtoMessage()    {}
func (*GatewayAPNConfig_VlanConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_07409b71340b860d, []int{4, 0}
}

func (m *GatewayAPNConfig_VlanConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayAPNConfig_VlanConfig.Unmarshal(m, b)
}
func (m *GatewayAPNConfig_VlanConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayAPNConfig_VlanConfig.Marshal(b, m, deterministic)
}
func (m *GatewayAPNConfig_VlanConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayAPNConfig_VlanConfig.Merge(m, src)
}
func (m *GatewayAPNConfig_VlanConfig) XXX_Size() int {
	return xxx_messageInfo_GatewayAPNConfig_VlanConfig.Size(m)
}
func (m *GatewayAPNConfig_VlanConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayAPNConfig_VlanConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayAPNConfig_VlanConfig proto.InternalMessageInfo

func (m *GatewayAPNConfig_VlanConfig) GetVlanId() uint32 {
	if m != nil {
		return m.VlanId
	}
	return 0
}

type GatewayAPNConfig_TransportConfig struct {
	GatewayIp            string                       `protobuf:"bytes,1,opt,name=gateway_ip,json=gatewayIp,proto3" json:"gateway_ip,omitempty"`
	GatewayMac           string                       `protobuf:"bytes,2,opt,name=gateway_mac,json=gatewayMac,proto3" json:"gateway_mac,omitempty"`
	EgressType           GatewayAPNConfig_EgressType  `protobuf:"varint,3,opt,name=egress_type,json=egressType,proto3,enum=magma.lte.GatewayAPNConfig_EgressType" json:"egress_type,omitempty"`
	VlanConfig           *GatewayAPNConfig_VlanConfig `protobuf:"bytes,4,opt,name=vlan_config,json=vlanConfig,proto3" json:"vlan_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *GatewayAPNConfig_TransportConfig) Reset()         { *m = GatewayAPNConfig_TransportConfig{} }
func (m *GatewayAPNConfig_TransportConfig) String() string { return proto.CompactTextString(m) }
func (*GatewayAPNConfig_TransportConfig) ProtoMessage()    {}
func (*GatewayAPNConfig_TransportConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_07409b71340b860d, []int{4, 1}
}

func (m *GatewayAPNConfig_TransportConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayAPNConfig_TransportConfig.Unmarshal(m, b)
}
func (m *GatewayAPNConfig_TransportConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayAPNConfig_TransportConfig.Marshal(b, m, deterministic)
}
func (m *GatewayAPNConfig_TransportConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayAPNConfig_TransportConfig.Merge(m, src)
}
func (m *GatewayAPNConfig_TransportConfig) XXX_Size() int {
	return xxx_messageInfo_GatewayAPNConfig_TransportConfig.Size(m)
}
func (m *GatewayAPNConfig_TransportConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayAPNConfig_TransportConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayAPNConfig_TransportConfig proto.InternalMessageInfo

func (m *GatewayAPNConfig_TransportConfig) GetGatewayIp() string {
	if m != nil {
		return m.GatewayIp
	}
	return ""
}

func (m *GatewayAPNConfig_TransportConfig) GetGatewayMac() string {
	if m != nil {
		return m.GatewayMac
	}
	return ""
}

func (m *GatewayAPNConfig_TransportConfig) GetEgressType() GatewayAPNConfig_EgressType {
	if m != nil {
		return m.EgressType
	}
	return GatewayAPNConfig_VLAN
}

func (m *GatewayAPNConfig_TransportConfig) GetVlanConfig() *GatewayAPNConfig_VlanConfig {
	if m != nil {
		return m.VlanConfig
	}
	return nil
}

type ListApnConfigRequest struct {
	// page_size is the maximum number of entities returned per request.
	PageSize uint32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// page_token is a serialized entity page token for paginated loads.
	PageToken            string   `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListApnConfigRequest) Reset()         { *m = ListApnConfigRequest{} }
func (m *ListApnConfigRequest) String() string { return proto.CompactTextString(m) }
func (*ListApnConfigRequest) ProtoMessage()    {}
func (*ListApnConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_07409b71340b860d, []int{5}
}

func (m *ListApnConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListApnConfigRequest.Unmarshal(m, b)
}
func (m *ListApnConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListApnConfigRequest.Marshal(b, m, deterministic)
}
func (m *ListApnConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListApnConfigRequest.Merge(m, src)
}
func (m *ListApnConfigRequest) XXX_Size() int {
	return xxx_messageInfo_ListApnConfigRequest.Size(m)
}
func (m *ListApnConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListApnConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListApnConfigRequest proto.InternalMessageInfo

func (m *ListApnConfigRequest) GetPageSize() uint32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListApnConfigRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListApnConfigResponse struct {
	Configs []*APNConfig `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
	// next_page_token is a serialized entity page token for subsequent paginated
	// loads.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListApnConfigResponse) Reset()         { *m = ListApnConfigResponse{} }
func (m *ListApnConfigResponse) String() string { return proto.CompactTextString(m) }
func (*ListApnConfigResponse) ProtoMessage()    {}
func (*ListApnConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_07409b71340b860d, []int{6}
}

func (m *ListApnConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListApnConfigResponse.Unmarshal(m, b)
}
func (m *ListApnConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListApnConfigResponse.Marshal(b, m, deterministic)
}
func (m *ListApnConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListApnConfigResponse.Merge(m, src)
}
func (m *ListApnConfigResponse) XXX_Size() int {
	return xxx_messageInfo_ListApnConfigResponse.Size(m)
}
func (m *ListApnConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListApnConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListApnConfigResponse proto.InternalMessageInfo

func (m *ListApnConfigResponse) GetConfigs() []*APNConfig {
	if m != nil {
		return m.Configs
	}
	return nil
}

func (m *ListApnConfigResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type ListGatewayApnConfigRequest struct {
	// page_size is the maximum number of entities returned per request.
	PageSize uint32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// page_token is a serialized entity page token for paginated loads.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// hardware id of the requesting gateway
	GatewayId            string   `protobuf:"bytes,3,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListGatewayApnConfigRequest) Reset()         { *m = ListGatewayApnConfigRequest{} }
func (m *ListGatewayApnConfigRequest) String() string { return proto.CompactTextString(m) }
func (*ListGatewayApnConfigRequest) ProtoMessage()    {}
func (*ListGatewayApnConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_07409b71340b860d, []int{7}
}

func (m *ListGatewayApnConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListGatewayApnConfigRequest.Unmarshal(m, b)
}
func (m *ListGatewayApnConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListGatewayApnConfigRequest.Marshal(b, m, deterministic)
}
func (m *ListGatewayApnConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListGatewayApnConfigRequest.Merge(m, src)
}
func (m *ListGatewayApnConfigRequest) XXX_Size() int {
	return xxx_messageInfo_ListGatewayApnConfigRequest.Size(m)
}
func (m *ListGatewayApnConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListGatewayApnConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListGatewayApnConfigRequest proto.InternalMessageInfo

func (m *ListGatewayApnConfigRequest) GetPageSize() uint32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListGatewayApnConfigRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListGatewayApnConfigRequest) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

type ListGatewayApnConfigResponse struct {
	Configs []*GatewayAPNConfig `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
	// next_page_token is a serialized entity page token for subsequent paginated
	// loads.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListGatewayApnConfigResponse) Reset()         { *m = ListGatewayApnConfigResponse{} }
func (m *ListGatewayApnConfigResponse) String() string { return proto.CompactTextString(m) }
func (*ListGatewayApnConfigResponse) ProtoMessage()    {}
func (*ListGatewayApnConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_07409b71340b860d, []int{8}
}

func (m *ListGatewayApnConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListGatewayApnConfigResponse.Unmarshal(m, b)
}
func (m *ListGatewayApnConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListGatewayApnConfigResponse.Marshal(b, m, deterministic)
}
func (m *ListGatewayApnConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListGatewayApnConfigResponse.Merge(m, src)
}
func (m *ListGatewayApnConfigResponse) XXX_Size() int {
	return xxx_messageInfo_ListGatewayApnConfigResponse.Size(m)
}
func (m *ListGatewayApnConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListGatewayApnConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListGatewayApnConfigResponse proto.InternalMessageInfo

func (m *ListGatewayApnConfigResponse) GetConfigs() []*GatewayAPNConfig {
	if m != nil {
		return m.Configs
	}
	return nil
}

func (m *ListGatewayApnConfigResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func init() {
	proto.RegisterEnum("magma.lte.AggregatedMaximumBitrate_BitrateUnitsAMBR", AggregatedMaximumBitrate_BitrateUnitsAMBR_name, AggregatedMaximumBitrate_BitrateUnitsAMBR_value)
	proto.RegisterEnum("magma.lte.APNConfiguration_PDNType", APNConfiguration_PDNType_name, APNConfiguration_PDNType_value)
	proto.RegisterEnum("magma.lte.APNConfig_PDNType", APNConfig_PDNType_name, APNConfig_PDNType_value)
	proto.RegisterEnum("magma.lte.GatewayAPNConfig_APNFilter", GatewayAPNConfig_APNFilter_name, GatewayAPNConfig_APNFilter_value)
	proto.RegisterEnum("magma.lte.GatewayAPNConfig_EgressType", GatewayAPNConfig_EgressType_name, GatewayAPNConfig_EgressType_value)
	proto.RegisterEnum("magma.lte.GatewayAPNConfig_IpAllocatorType", GatewayAPNConfig_IpAllocatorType_name, GatewayAPNConfig_IpAllocatorType_value)
	proto.RegisterType((*QoSProfile)(nil), "magma.lte.QoSProfile")
	proto.RegisterType((*AggregatedMaximumBitrate)(nil), "magma.lte.AggregatedMaximumBitrate")
	proto.RegisterType((*APNConfiguration)(nil), "magma.lte.APNConfiguration")
	proto.RegisterType((*APNConfiguration_QoSProfile)(nil), "magma.lte.APNConfiguration.QoSProfile")
	proto.RegisterType((*APNConfiguration_APNResource)(nil), "magma.lte.APNConfiguration.APNResource")
	proto.RegisterType((*APNConfig)(nil), "magma.lte.APNConfig")
	proto.RegisterType((*GatewayAPNConfig)(nil), "magma.lte.GatewayAPNConfig")
	proto.RegisterType((*GatewayAPNConfig_VlanConfig)(nil), "magma.lte.GatewayAPNConfig.VlanConfig")
	proto.RegisterType((*GatewayAPNConfig_TransportConfig)(nil), "magma.lte.GatewayAPNConfig.TransportConfig")
	proto.RegisterType((*ListApnConfigRequest)(nil), "magma.lte.ListApnConfigRequest")
	proto.RegisterType((*ListApnConfigResponse)(nil), "magma.lte.ListApnConfigResponse")
	proto.RegisterType((*ListGatewayApnConfigRequest)(nil), "magma.lte.ListGatewayApnConfigRequest")
	proto.RegisterType((*ListGatewayApnConfigResponse)(nil), "magma.lte.ListGatewayApnConfigResponse")
}

func init() { proto.RegisterFile("lte/protos/apn.proto", fileDescriptor_07409b71340b860d) }

var fileDescriptor_07409b71340b860d = []byte{
	// 1136 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x56, 0xcb, 0x6e, 0xdb, 0x46,
	0x17, 0x36, 0x65, 0x59, 0xb2, 0x8e, 0x62, 0x9b, 0x19, 0xd8, 0x7f, 0x14, 0x39, 0x3f, 0x62, 0x30,
	0xb0, 0x23, 0x20, 0x85, 0x0c, 0x28, 0x97, 0xa2, 0xe8, 0x4a, 0x97, 0x24, 0x15, 0x22, 0xdb, 0x2c,
	0x65, 0xab, 0x40, 0x37, 0xc4, 0x88, 0x9c, 0xa8, 0xd3, 0x90, 0xc3, 0x31, 0x67, 0xe4, 0x58, 0x01,
	0xba, 0xc8, 0xbe, 0xcf, 0xd1, 0xc7, 0xe8, 0x2b, 0xf4, 0x21, 0xda, 0x07, 0x29, 0x66, 0x48, 0x4a,
	0xb2, 0x6c, 0x2b, 0x0d, 0x9a, 0x4d, 0x57, 0x1a, 0x9e, 0xcb, 0x9c, 0xf3, 0x7d, 0xe7, 0x3b, 0xa4,
	0x60, 0x3b, 0x90, 0xe4, 0x90, 0xc7, 0x91, 0x8c, 0xc4, 0x21, 0xe6, 0xac, 0xae, 0x8f, 0xa8, 0x14,
	0xe2, 0x51, 0x88, 0xeb, 0x81, 0x24, 0xd6, 0xef, 0x06, 0xc0, 0xf7, 0x51, 0xdf, 0x8e, 0xa3, 0xb7,
	0x34, 0x20, 0xe8, 0x3e, 0xac, 0x7b, 0x01, 0x16, 0xc2, 0xa5, 0x7e, 0xc5, 0xd8, 0x33, 0x6a, 0x6b,
	0x4e, 0x51, 0x3f, 0x77, 0x7d, 0xb4, 0x0f, 0x9b, 0x3c, 0xa6, 0x51, 0x4c, 0xe5, 0xc4, 0x0d, 0xc8,
	0x05, 0x09, 0x2a, 0xb9, 0x3d, 0xa3, 0xb6, 0xe1, 0x6c, 0x64, 0xd6, 0x9e, 0x32, 0xa2, 0xa7, 0xb0,
	0xc3, 0x63, 0x42, 0x42, 0x2e, 0x69, 0xc4, 0x5c, 0x0f, 0x73, 0x3c, 0xa4, 0x01, 0x95, 0x93, 0xca,
	0xea, 0x9e, 0x51, 0x5b, 0x77, 0xb6, 0x67, 0xce, 0xf6, 0xd4, 0x87, 0xbe, 0x81, 0xca, 0x5c, 0xd2,
	0xc5, 0x38, 0x60, 0x24, 0xce, 0xf2, 0xf2, 0x3a, 0xef, 0xde, 0xcc, 0x3f, 0x98, 0x77, 0x5b, 0x7f,
	0x19, 0x50, 0x69, 0x8e, 0x46, 0x31, 0x19, 0x61, 0x49, 0xfc, 0x23, 0x7c, 0x49, 0xc3, 0x71, 0xd8,
	0xa2, 0x32, 0xc6, 0x92, 0xa0, 0x1a, 0x98, 0x21, 0xbe, 0x74, 0x87, 0x98, 0xf9, 0xef, 0xa9, 0x2f,
	0x7f, 0x72, 0xc7, 0x81, 0x86, 0x95, 0x77, 0x36, 0x43, 0x7c, 0xd9, 0xca, 0xcc, 0x67, 0xc1, 0xf5,
	0x48, 0x3f, 0xc1, 0xb7, 0x10, 0xd9, 0x09, 0xd0, 0x11, 0x14, 0x87, 0xb1, 0x3b, 0x66, 0x54, 0x6a,
	0x48, 0x9b, 0x8d, 0x67, 0xf5, 0x29, 0x9d, 0xf5, 0xdb, 0x3a, 0xa9, 0xa7, 0xbf, 0x67, 0x8c, 0x4a,
	0xd1, 0x3c, 0x6a, 0x39, 0x4e, 0x61, 0x18, 0xab, 0x07, 0x6b, 0x1f, 0xcc, 0x45, 0x1f, 0x2a, 0xc2,
	0x6a, 0xcb, 0xee, 0x9b, 0x2b, 0x68, 0x1d, 0xf2, 0x6f, 0xd4, 0xc9, 0xb0, 0x7e, 0x2d, 0x80, 0xd9,
	0xb4, 0x8f, 0xdb, 0x11, 0x7b, 0x4b, 0x47, 0xe3, 0x18, 0x2b, 0x22, 0xd0, 0xff, 0x01, 0xbc, 0x88,
	0x49, 0x72, 0x29, 0xb3, 0x79, 0x6d, 0x38, 0xa5, 0xd4, 0xd2, 0xf5, 0xd1, 0x13, 0xb8, 0x2b, 0x48,
	0x7c, 0x41, 0x3d, 0xe2, 0x0a, 0x12, 0x10, 0x4f, 0xe5, 0x68, 0x50, 0x25, 0xc7, 0x4c, 0x1d, 0xfd,
	0xcc, 0x8e, 0x5e, 0x43, 0xf9, 0x3c, 0x12, 0x2e, 0x4f, 0x84, 0xa0, 0xa1, 0x95, 0x1b, 0x07, 0xf3,
	0xd0, 0x16, 0xaa, 0xd7, 0x67, 0xb2, 0x71, 0xe0, 0x3c, 0x12, 0x99, 0x84, 0xbe, 0x86, 0x3c, 0x0e,
	0x87, 0xb1, 0x9e, 0x5b, 0xb9, 0xf1, 0xe8, 0x1f, 0x90, 0xe3, 0xe8, 0x04, 0xf4, 0x1c, 0x56, 0xb9,
	0xcf, 0x2a, 0x6b, 0x9a, 0xd4, 0x47, 0xcb, 0x2a, 0xdb, 0x9d, 0xe3, 0xd3, 0x09, 0x27, 0x8e, 0x8a,
	0x47, 0x5f, 0x01, 0xc2, 0x42, 0xd0, 0x11, 0x23, 0xbe, 0x2b, 0x24, 0x96, 0xd4, 0x73, 0x29, 0xaf,
	0x14, 0x12, 0x98, 0x99, 0xa7, 0xaf, 0x1d, 0x5d, 0x8e, 0xda, 0xb0, 0x1e, 0x13, 0x11, 0x8d, 0x63,
	0x8f, 0x54, 0x8a, 0xba, 0xc3, 0xc7, 0xcb, 0x2a, 0x35, 0xed, 0x63, 0x27, 0x0d, 0x77, 0xa6, 0x89,
	0xd5, 0xff, 0xfa, 0xd2, 0x54, 0x3f, 0x1a, 0x50, 0x9e, 0x83, 0xa6, 0x10, 0x60, 0xce, 0x5c, 0x86,
	0x43, 0xa2, 0x11, 0x94, 0x9c, 0x22, 0xe6, 0xec, 0x18, 0x87, 0x44, 0x69, 0x4c, 0x8d, 0xec, 0x3d,
	0x9e, 0x28, 0x5a, 0x13, 0xf5, 0x94, 0x52, 0x4b, 0x97, 0xa3, 0x87, 0x50, 0xce, 0xdc, 0x21, 0xf6,
	0x74, 0xbf, 0x25, 0x27, 0xcb, 0x38, 0xc2, 0x1e, 0xba, 0x07, 0xc5, 0x8b, 0x00, 0x33, 0xc5, 0x4d,
	0x5e, 0x43, 0x2f, 0xa8, 0xc7, 0xae, 0x6f, 0x7d, 0x0b, 0xc5, 0x74, 0x8e, 0x4a, 0xe6, 0x5d, 0x7b,
	0xf0, 0x2c, 0x11, 0x7c, 0xd7, 0x1e, 0xbc, 0x30, 0x0d, 0x04, 0x50, 0x50, 0xb6, 0xc1, 0x0b, 0x33,
	0x87, 0x4c, 0xb8, 0xa3, 0xce, 0xee, 0x89, 0xe3, 0x6a, 0xef, 0xaa, 0xf5, 0x5b, 0x0e, 0x4a, 0xd3,
	0x61, 0xa1, 0x4d, 0xc8, 0x4d, 0xf5, 0x9f, 0xa3, 0x9f, 0x29, 0xfc, 0x17, 0x37, 0x09, 0x7f, 0x67,
	0x4e, 0x14, 0x5f, 0x5a, 0xe7, 0xf5, 0x79, 0x9d, 0x3f, 0xb8, 0x49, 0x7d, 0x57, 0x04, 0xfe, 0xef,
	0x88, 0xfa, 0x58, 0x00, 0xf3, 0x75, 0x32, 0x8d, 0x19, 0x5f, 0x3b, 0x50, 0x50, 0xe3, 0x9e, 0x72,
	0xb6, 0x86, 0x39, 0xeb, 0xfa, 0xa8, 0x03, 0xa0, 0xcc, 0x6f, 0x69, 0x20, 0x49, 0xac, 0xf9, 0xda,
	0x6c, 0xec, 0xcf, 0xf5, 0xb7, 0x78, 0x8f, 0x6a, 0xf8, 0x95, 0x0e, 0x76, 0x4a, 0x98, 0xb3, 0xe4,
	0xa8, 0x14, 0xe1, 0x33, 0xc5, 0x27, 0x0d, 0x71, 0x3c, 0xc9, 0x14, 0xe1, 0x33, 0x61, 0x27, 0x16,
	0xf4, 0x08, 0x36, 0x54, 0x80, 0x20, 0x5e, 0xc4, 0x7c, 0x15, 0x92, 0xd7, 0x21, 0x77, 0x7c, 0x26,
	0xfa, 0x99, 0x0d, 0xfd, 0x00, 0x77, 0x29, 0x77, 0x71, 0x10, 0x44, 0x1e, 0x96, 0x51, 0xec, 0xca,
	0x09, 0x27, 0x29, 0x65, 0x4f, 0x96, 0xb5, 0xd4, 0xe5, 0xcd, 0x2c, 0x47, 0x33, 0xb8, 0x45, 0xaf,
	0x1a, 0x94, 0xd4, 0x29, 0x77, 0x87, 0x41, 0xe4, 0xbd, 0x4b, 0x5f, 0x12, 0x45, 0xca, 0x5b, 0xea,
	0x11, 0x0d, 0xc0, 0x94, 0x31, 0x66, 0x82, 0x47, 0xb1, 0x74, 0x3d, 0x7d, 0x5f, 0xfa, 0x8e, 0x58,
	0x5a, 0xf2, 0x34, 0xcb, 0x49, 0x9e, 0x9d, 0x2d, 0x79, 0xd5, 0x50, 0xdd, 0x07, 0x18, 0x04, 0x98,
	0xa5, 0xe4, 0xdf, 0xb6, 0x10, 0xd5, 0x3f, 0x0d, 0xd8, 0x5a, 0xb8, 0x6b, 0x61, 0xfb, 0x8c, 0x4f,
	0x6c, 0x5f, 0xee, 0xda, 0xf6, 0xbd, 0x86, 0x32, 0x19, 0xc5, 0x44, 0x88, 0x84, 0xc0, 0xe4, 0x83,
	0x75, 0xb0, 0x0c, 0xcd, 0x4b, 0x1d, 0xae, 0xb9, 0x03, 0x32, 0x3d, 0xab, 0x8b, 0x74, 0xd7, 0x29,
	0x2d, 0xf9, 0x6b, 0x9f, 0x87, 0x6b, 0x17, 0xcd, 0x20, 0x3b, 0x70, 0x31, 0x3d, 0x5b, 0x87, 0x7a,
	0x71, 0x53, 0xad, 0x94, 0xa1, 0xd8, 0x79, 0xf9, 0xaa, 0x79, 0xd6, 0x3b, 0x35, 0x57, 0x50, 0x09,
	0xd6, 0x5a, 0xbd, 0x93, 0xf6, 0x9b, 0x44, 0xd3, 0xf6, 0x4b, 0xe7, 0xa8, 0x7b, 0x6a, 0xe6, 0xac,
	0xff, 0x01, 0xcc, 0x7a, 0x52, 0xba, 0x1f, 0xf4, 0x9a, 0xc7, 0xe6, 0x8a, 0x55, 0x83, 0xad, 0x85,
	0x61, 0xab, 0xeb, 0xba, 0xb6, 0x6b, 0x9f, 0x9c, 0xf4, 0x92, 0x0d, 0xe9, 0x7c, 0xd7, 0xb6, 0x4d,
	0xc3, 0x72, 0x60, 0xbb, 0x47, 0x85, 0x6c, 0xf2, 0xac, 0x1f, 0x72, 0x3e, 0x26, 0x42, 0xa2, 0x5d,
	0x28, 0x71, 0x3c, 0x22, 0xae, 0xa0, 0x1f, 0x48, 0xba, 0x09, 0xeb, 0xca, 0xd0, 0xa7, 0x1f, 0xf4,
	0x7b, 0x4f, 0x3b, 0x65, 0xf4, 0x8e, 0x64, 0x2f, 0x0f, 0x1d, 0x7e, 0xaa, 0x0c, 0x56, 0x04, 0x3b,
	0x0b, 0x77, 0x0a, 0x1e, 0x31, 0x41, 0x50, 0x1d, 0x8a, 0x09, 0x47, 0xa2, 0x62, 0xec, 0xad, 0xd6,
	0xca, 0x8d, 0xed, 0x9b, 0x36, 0xdc, 0xc9, 0x82, 0xd0, 0x01, 0x6c, 0x31, 0xf5, 0x01, 0xbf, 0x56,
	0x6c, 0x43, 0x99, 0xed, 0x69, 0xc1, 0x4b, 0xd8, 0x55, 0x05, 0x33, 0x9a, 0xbf, 0x20, 0x96, 0x2b,
	0x22, 0xf3, 0xd3, 0x85, 0x9d, 0x8a, 0xcc, 0xb7, 0x7e, 0x81, 0x07, 0x37, 0x57, 0x4e, 0x11, 0x3f,
	0x5f, 0x44, 0xbc, 0xbb, 0x44, 0x16, 0x9f, 0x0d, 0xbc, 0xf1, 0x87, 0x01, 0xd0, 0xe4, 0xac, 0xd3,
	0x6a, 0x07, 0xd1, 0xd8, 0x47, 0x67, 0xb0, 0x79, 0x85, 0x78, 0x81, 0x1e, 0xce, 0x95, 0xbb, 0x69,
	0xce, 0xd5, 0xbd, 0xdb, 0x03, 0x12, 0x08, 0xd6, 0x0a, 0xfa, 0x39, 0x99, 0xe7, 0x22, 0x48, 0x81,
	0x0e, 0x16, 0x92, 0x6f, 0x19, 0x40, 0xf5, 0xf1, 0x27, 0xe3, 0xb2, 0x5a, 0xad, 0xdd, 0x1f, 0xef,
	0xeb, 0xd8, 0x43, 0xf5, 0xe7, 0xdc, 0x53, 0xa8, 0x0e, 0x47, 0x51, 0xfa, 0x2f, 0x7d, 0x58, 0xd0,
	0xbf, 0x4f, 0xff, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x07, 0xfb, 0x55, 0xb5, 0xba, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ApnDBCloudClient is the client API for ApnDBCloud service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApnDBCloudClient interface {
	// ListApnConfigs lists network wide apn configuration.
	ListApnConfigs(ctx context.Context, in *ListApnConfigRequest, opts ...grpc.CallOption) (*ListApnConfigResponse, error)
	// ListGatewayApnConfigs lists gateway specific apn configuration
	ListGatewayApnConfigs(ctx context.Context, in *ListGatewayApnConfigRequest, opts ...grpc.CallOption) (*ListGatewayApnConfigResponse, error)
}

type apnDBCloudClient struct {
	cc grpc.ClientConnInterface
}

func NewApnDBCloudClient(cc grpc.ClientConnInterface) ApnDBCloudClient {
	return &apnDBCloudClient{cc}
}

func (c *apnDBCloudClient) ListApnConfigs(ctx context.Context, in *ListApnConfigRequest, opts ...grpc.CallOption) (*ListApnConfigResponse, error) {
	out := new(ListApnConfigResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.ApnDBCloud/ListApnConfigs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apnDBCloudClient) ListGatewayApnConfigs(ctx context.Context, in *ListGatewayApnConfigRequest, opts ...grpc.CallOption) (*ListGatewayApnConfigResponse, error) {
	out := new(ListGatewayApnConfigResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.ApnDBCloud/ListGatewayApnConfigs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApnDBCloudServer is the server API for ApnDBCloud service.
type ApnDBCloudServer interface {
	// ListApnConfigs lists network wide apn configuration.
	ListApnConfigs(context.Context, *ListApnConfigRequest) (*ListApnConfigResponse, error)
	// ListGatewayApnConfigs lists gateway specific apn configuration
	ListGatewayApnConfigs(context.Context, *ListGatewayApnConfigRequest) (*ListGatewayApnConfigResponse, error)
}

// UnimplementedApnDBCloudServer can be embedded to have forward compatible implementations.
type UnimplementedApnDBCloudServer struct {
}

func (*UnimplementedApnDBCloudServer) ListApnConfigs(ctx context.Context, req *ListApnConfigRequest) (*ListApnConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListApnConfigs not implemented")
}
func (*UnimplementedApnDBCloudServer) ListGatewayApnConfigs(ctx context.Context, req *ListGatewayApnConfigRequest) (*ListGatewayApnConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGatewayApnConfigs not implemented")
}

func RegisterApnDBCloudServer(s *grpc.Server, srv ApnDBCloudServer) {
	s.RegisterService(&_ApnDBCloud_serviceDesc, srv)
}

func _ApnDBCloud_ListApnConfigs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListApnConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApnDBCloudServer).ListApnConfigs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.ApnDBCloud/ListApnConfigs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApnDBCloudServer).ListApnConfigs(ctx, req.(*ListApnConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApnDBCloud_ListGatewayApnConfigs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListGatewayApnConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApnDBCloudServer).ListGatewayApnConfigs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.ApnDBCloud/ListGatewayApnConfigs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApnDBCloudServer).ListGatewayApnConfigs(ctx, req.(*ListGatewayApnConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApnDBCloud_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.lte.ApnDBCloud",
	HandlerType: (*ApnDBCloudServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListApnConfigs",
			Handler:    _ApnDBCloud_ListApnConfigs_Handler,
		},
		{
			MethodName: "ListGatewayApnConfigs",
			Handler:    _ApnDBCloud_ListGatewayApnConfigs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lte/protos/apn.proto",
}
