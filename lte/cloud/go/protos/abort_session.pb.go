//
//Copyright 2020 The Magma Authors.
//
//This source code is licensed under the BSD-style license found in the
//LICENSE file in the root directory of this source tree.
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: lte/protos/abort_session.proto

package protos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AbortSessionResult_Code int32

const (
	AbortSessionResult_SESSION_REMOVED     AbortSessionResult_Code = 0
	AbortSessionResult_SESSION_NOT_FOUND   AbortSessionResult_Code = 1
	AbortSessionResult_USER_NOT_FOUND      AbortSessionResult_Code = 2
	AbortSessionResult_GATEWAY_NOT_FOUND   AbortSessionResult_Code = 3
	AbortSessionResult_RADIUS_SERVER_ERROR AbortSessionResult_Code = 4
)

// Enum value maps for AbortSessionResult_Code.
var (
	AbortSessionResult_Code_name = map[int32]string{
		0: "SESSION_REMOVED",
		1: "SESSION_NOT_FOUND",
		2: "USER_NOT_FOUND",
		3: "GATEWAY_NOT_FOUND",
		4: "RADIUS_SERVER_ERROR",
	}
	AbortSessionResult_Code_value = map[string]int32{
		"SESSION_REMOVED":     0,
		"SESSION_NOT_FOUND":   1,
		"USER_NOT_FOUND":      2,
		"GATEWAY_NOT_FOUND":   3,
		"RADIUS_SERVER_ERROR": 4,
	}
)

func (x AbortSessionResult_Code) Enum() *AbortSessionResult_Code {
	p := new(AbortSessionResult_Code)
	*p = x
	return p
}

func (x AbortSessionResult_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AbortSessionResult_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_lte_protos_abort_session_proto_enumTypes[0].Descriptor()
}

func (AbortSessionResult_Code) Type() protoreflect.EnumType {
	return &file_lte_protos_abort_session_proto_enumTypes[0]
}

func (x AbortSessionResult_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AbortSessionResult_Code.Descriptor instead.
func (AbortSessionResult_Code) EnumDescriptor() ([]byte, []int) {
	return file_lte_protos_abort_session_proto_rawDescGZIP(), []int{1, 0}
}

type AbortSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	UserName  string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"` // IMSI
}

func (x *AbortSessionRequest) Reset() {
	*x = AbortSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_abort_session_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbortSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortSessionRequest) ProtoMessage() {}

func (x *AbortSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_abort_session_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortSessionRequest.ProtoReflect.Descriptor instead.
func (*AbortSessionRequest) Descriptor() ([]byte, []int) {
	return file_lte_protos_abort_session_proto_rawDescGZIP(), []int{0}
}

func (x *AbortSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *AbortSessionRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type AbortSessionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         AbortSessionResult_Code `protobuf:"varint,1,opt,name=code,proto3,enum=magma.lte.AbortSessionResult_Code" json:"code,omitempty"`
	ErrorMessage string                  `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *AbortSessionResult) Reset() {
	*x = AbortSessionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lte_protos_abort_session_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbortSessionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortSessionResult) ProtoMessage() {}

func (x *AbortSessionResult) ProtoReflect() protoreflect.Message {
	mi := &file_lte_protos_abort_session_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortSessionResult.ProtoReflect.Descriptor instead.
func (*AbortSessionResult) Descriptor() ([]byte, []int) {
	return file_lte_protos_abort_session_proto_rawDescGZIP(), []int{1}
}

func (x *AbortSessionResult) GetCode() AbortSessionResult_Code {
	if x != nil {
		return x.Code
	}
	return AbortSessionResult_SESSION_REMOVED
}

func (x *AbortSessionResult) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_lte_protos_abort_session_proto protoreflect.FileDescriptor

var file_lte_protos_abort_session_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6c, 0x74, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x61, 0x62, 0x6f,
	0x72, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x09, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x22, 0x51, 0x0a, 0x13, 0x41,
	0x62, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe9,
	0x01, 0x0a, 0x12, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e,
	0x41, 0x62, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x76, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x45,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x15, 0x0a, 0x11, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46,
	0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x41,
	0x54, 0x45, 0x57, 0x41, 0x59, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0x03, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x41, 0x44, 0x49, 0x55, 0x53, 0x5f, 0x53, 0x45, 0x52, 0x56,
	0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x32, 0x68, 0x0a, 0x15, 0x41, 0x62,
	0x6f, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x0c, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e,
	0x41, 0x62, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6c, 0x74, 0x65, 0x2e,
	0x41, 0x62, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x00, 0x42, 0x1b, 0x5a, 0x19, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2f, 0x6c, 0x74,
	0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lte_protos_abort_session_proto_rawDescOnce sync.Once
	file_lte_protos_abort_session_proto_rawDescData = file_lte_protos_abort_session_proto_rawDesc
)

func file_lte_protos_abort_session_proto_rawDescGZIP() []byte {
	file_lte_protos_abort_session_proto_rawDescOnce.Do(func() {
		file_lte_protos_abort_session_proto_rawDescData = protoimpl.X.CompressGZIP(file_lte_protos_abort_session_proto_rawDescData)
	})
	return file_lte_protos_abort_session_proto_rawDescData
}

var file_lte_protos_abort_session_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_lte_protos_abort_session_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_lte_protos_abort_session_proto_goTypes = []interface{}{
	(AbortSessionResult_Code)(0), // 0: magma.lte.AbortSessionResult.Code
	(*AbortSessionRequest)(nil),  // 1: magma.lte.AbortSessionRequest
	(*AbortSessionResult)(nil),   // 2: magma.lte.AbortSessionResult
}
var file_lte_protos_abort_session_proto_depIdxs = []int32{
	0, // 0: magma.lte.AbortSessionResult.code:type_name -> magma.lte.AbortSessionResult.Code
	1, // 1: magma.lte.AbortSessionResponder.AbortSession:input_type -> magma.lte.AbortSessionRequest
	2, // 2: magma.lte.AbortSessionResponder.AbortSession:output_type -> magma.lte.AbortSessionResult
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_lte_protos_abort_session_proto_init() }
func file_lte_protos_abort_session_proto_init() {
	if File_lte_protos_abort_session_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lte_protos_abort_session_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbortSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lte_protos_abort_session_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbortSessionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lte_protos_abort_session_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lte_protos_abort_session_proto_goTypes,
		DependencyIndexes: file_lte_protos_abort_session_proto_depIdxs,
		EnumInfos:         file_lte_protos_abort_session_proto_enumTypes,
		MessageInfos:      file_lte_protos_abort_session_proto_msgTypes,
	}.Build()
	File_lte_protos_abort_session_proto = out.File
	file_lte_protos_abort_session_proto_rawDesc = nil
	file_lte_protos_abort_session_proto_goTypes = nil
	file_lte_protos_abort_session_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AbortSessionResponderClient is the client API for AbortSessionResponder service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AbortSessionResponderClient interface {
	AbortSession(ctx context.Context, in *AbortSessionRequest, opts ...grpc.CallOption) (*AbortSessionResult, error)
}

type abortSessionResponderClient struct {
	cc grpc.ClientConnInterface
}

func NewAbortSessionResponderClient(cc grpc.ClientConnInterface) AbortSessionResponderClient {
	return &abortSessionResponderClient{cc}
}

func (c *abortSessionResponderClient) AbortSession(ctx context.Context, in *AbortSessionRequest, opts ...grpc.CallOption) (*AbortSessionResult, error) {
	out := new(AbortSessionResult)
	err := c.cc.Invoke(ctx, "/magma.lte.AbortSessionResponder/AbortSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AbortSessionResponderServer is the server API for AbortSessionResponder service.
type AbortSessionResponderServer interface {
	AbortSession(context.Context, *AbortSessionRequest) (*AbortSessionResult, error)
}

// UnimplementedAbortSessionResponderServer can be embedded to have forward compatible implementations.
type UnimplementedAbortSessionResponderServer struct {
}

func (*UnimplementedAbortSessionResponderServer) AbortSession(context.Context, *AbortSessionRequest) (*AbortSessionResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AbortSession not implemented")
}

func RegisterAbortSessionResponderServer(s *grpc.Server, srv AbortSessionResponderServer) {
	s.RegisterService(&_AbortSessionResponder_serviceDesc, srv)
}

func _AbortSessionResponder_AbortSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AbortSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AbortSessionResponderServer).AbortSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.AbortSessionResponder/AbortSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AbortSessionResponderServer).AbortSession(ctx, req.(*AbortSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AbortSessionResponder_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.lte.AbortSessionResponder",
	HandlerType: (*AbortSessionResponderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AbortSession",
			Handler:    _AbortSessionResponder_AbortSession_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lte/protos/abort_session.proto",
}
