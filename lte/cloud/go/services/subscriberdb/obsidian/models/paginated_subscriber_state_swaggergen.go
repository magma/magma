// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PaginatedSubscriberState Page of Subscriber States
// swagger:model paginated_subscriber_state
type PaginatedSubscriberState struct {

	// page token
	// Required: true
	PageToken PageToken `json:"page_token"`

	// subscriber state
	// Required: true
	SubscriberState map[string]*SubscriberState `json:"subscriber_state"`

	// Estimated total number of subscriber states
	// Required: true
	TotalCount int64 `json:"total_count"`
}

// Validate validates this paginated subscriber state
func (m *PaginatedSubscriberState) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePageToken(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSubscriberState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalCount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PaginatedSubscriberState) validatePageToken(formats strfmt.Registry) error {

	if err := m.PageToken.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("page_token")
		}
		return err
	}

	return nil
}

func (m *PaginatedSubscriberState) validateSubscriberState(formats strfmt.Registry) error {

	for k := range m.SubscriberState {

		if err := validate.Required("subscriber_state"+"."+k, "body", m.SubscriberState[k]); err != nil {
			return err
		}
		if val, ok := m.SubscriberState[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *PaginatedSubscriberState) validateTotalCount(formats strfmt.Registry) error {

	if err := validate.Required("total_count", "body", int64(m.TotalCount)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PaginatedSubscriberState) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PaginatedSubscriberState) UnmarshalBinary(b []byte) error {
	var res PaginatedSubscriberState
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
