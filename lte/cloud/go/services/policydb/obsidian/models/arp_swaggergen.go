// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Arp Allocation and retention priority
//
// swagger:model arp
type Arp struct {

	// preemption capability
	// Example: true
	PreemptionCapability *bool `json:"preemption_capability,omitempty"`

	// preemption vulnerability
	// Example: false
	PreemptionVulnerability *bool `json:"preemption_vulnerability,omitempty"`

	// priority level
	// Example: 15
	// Maximum: 15
	// Minimum: 0
	PriorityLevel *uint32 `json:"priority_level,omitempty"`
}

// Validate validates this arp
func (m *Arp) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePriorityLevel(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Arp) validatePriorityLevel(formats strfmt.Registry) error {
	if swag.IsZero(m.PriorityLevel) { // not required
		return nil
	}

	if err := validate.MinimumUint("priority_level", "body", uint64(*m.PriorityLevel), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumUint("priority_level", "body", uint64(*m.PriorityLevel), 15, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this arp based on context it is used
func (m *Arp) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Arp) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Arp) UnmarshalBinary(b []byte) error {
	var res Arp
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
