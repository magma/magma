# Copyright 2022 The Magma Authors.

# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")

package(default_visibility = ["//visibility:private"])

cc_test(
    name = "s1ap_handle_new_association_test",
    size = "small",
    srcs = [
        "test_s1ap_handle_new_association.cpp",
    ],
    deps = [
        "//lte/gateway/c/core:lib_agw_of",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "s1ap_mme_handlers_test",
    size = "small",
    srcs = [
        "test_s1ap_mme_handlers.cpp",
    ],
    deps = [
        ":s1ap_mme_test_utils",
        "//lte/gateway/c/core:lib_agw_of",
        "//lte/gateway/c/core/oai/test/mock_tasks",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "s1ap_mme_test_utils",
    srcs = [
        "s1ap_mme_test_utils.cpp",
    ],
    hdrs = [
        "s1ap_mme_test_utils.h",
    ],
    deps = [
        "//lte/gateway/c/core:lib_agw_of",
    ],
)

cc_test(
    name = "s1ap_state_converter_test",
    size = "small",
    srcs = [
        "test_s1ap_state_converter.cpp",
    ],
    deps = [
        "//lte/gateway/c/core:lib_agw_of",
        "//lte/gateway/c/core/oai/test/mock_tasks",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "s1ap_state_manager_test",
    size = "small",
    srcs = [
        "test_s1ap_state_manager.cpp",
    ],
    deps = [
        "//lte/gateway/c/core:lib_agw_of",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "mock_s1ap_op",
    testonly = True,
    srcs = ["mock_s1ap_op.cpp"],
    hdrs = ["mock_s1ap_op.h"],
    deps = [
        "//lte/gateway/c/core:lib_agw_of",
        "//lte/gateway/c/core/common:common_defs",
    ],
)

cc_test(
    name = "s1ap_mme_handlers_with_injected_state_test",
    size = "small",
    srcs = ["test_s1ap_mme_handlers_with_injected_state.cpp"],
    deps = [
        ":mock_s1ap_op",
        ":s1ap_mme_test_utils",
        "//lte/gateway/c/core:lib_agw_of",
        "//lte/gateway/c/core/common:dynamic_memory_check",
        "//lte/gateway/c/core/oai/lib/bstr:bstrlib",
        "//lte/gateway/c/core/oai/test/mock_tasks",
        "@com_google_googletest//:gtest_main",
    ],
)
