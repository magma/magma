From ee470c3f1eda967b0a9a850ef580167893600b49 Mon Sep 17 00:00:00 2001
From: William Qian <wlq@fb.com>
Date: Fri, 5 May 2017 15:33:22 +0000
Subject: [PATCH] FB-only changes to s1ap tester

---
 .gitignore                  |  1 +
 TestCntlrStub/src/ts_main.c | 34 ++++++++++++++++++++++++++++++++--
 Trfgen/src/trfgen.c         |  3 ++-
 create_tags                 |  7 +++++++
 4 files changed, 42 insertions(+), 3 deletions(-)
 create mode 100755 create_tags

diff --git a/.gitignore b/.gitignore
index 8df421d..16b7df1 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,5 +1,6 @@
 *.o
 *.swp
+cscope.out
 tags
 
 lib*.a
diff --git a/TestCntlrStub/src/ts_main.c b/TestCntlrStub/src/ts_main.c
index 3d4e23f..a68b304 100644
--- a/TestCntlrStub/src/ts_main.c
+++ b/TestCntlrStub/src/ts_main.c
@@ -77,6 +77,7 @@
      Prg:      
 
 **********************************************************************/
+#include <fcntl.h>
 #include <stdio.h>
 #include <unistd.h>
 #include <sys/types.h>
@@ -97,6 +98,8 @@
 #include "ts_timer_queue.h"
 #include "ts_timer_thread.h"
 
+#define PID_FILE "/var/run/s1sim.pid"
+
 char noTauComplete; /* If 1, don't send TAU complete */
 char requestedIdType; /* Requested mobile ID type in IDENTITY REQUEST message */
 int T3412 = 0;
@@ -613,12 +616,28 @@ int main(int argc, char *argv[])
             tsSendAttachRequest(id);
             sleep(1);
          }
+         int fd;
+         do {
+            fd = open(PID_FILE, O_CREAT | O_EXCL | O_WRONLY);
+         } while (-1 == fd);
+         {
+            char pid[32];
+            sprintf(pid, "%d", getpid());
+            write(fd, pid, strlen(pid));
+         }
          for (id = 1; id <= noOfUe; id++)
          {
             tsStartUlData(id);
             sleep(1);
          }
-         sleep(130);
+         int i;
+         for (i = 0; i < 13 && fopen(PID_FILE, "r"); i++) {
+            sleep(10);
+         }
+         if (fopen(PID_FILE, "r")) {
+            close(fd);
+            unlink(PID_FILE);
+         }
          for(id = 1; id <= noOfUe; id++)
          {
             tsSendDetachRequest(id, UE_SWITCHOFF_DETACH, UE_IN_CONNECTED_MODE);
@@ -637,12 +656,23 @@ int main(int argc, char *argv[])
             tsSendAttachRequest(id);
             sleep(1);
          }
+         int fd;
+         do {
+            fd = open(PID_FILE, O_CREAT | O_EXCL | O_WRONLY);
+         } while (-1 == fd);
          for (id = 1; id <= noOfUe; id++)
          {
             tsStartDlData(id);
             sleep(1);
          }
-         sleep(130);
+         int i;
+         for (i = 0; i < 13 && fopen(PID_FILE, "r"); i++) {
+            sleep(10);
+         }
+         if (fopen(PID_FILE, "r")) {
+            close(fd);
+            unlink(PID_FILE);
+         }
          for (id = 1; id <= noOfUe; id++)
          {
             tsSendDetachRequest(id, UE_SWITCHOFF_DETACH, UE_IN_CONNECTED_MODE);
diff --git a/Trfgen/src/trfgen.c b/Trfgen/src/trfgen.c
index cc6c334..1d57777 100644
--- a/Trfgen/src/trfgen.c
+++ b/Trfgen/src/trfgen.c
@@ -386,7 +386,8 @@ void trfgen_start_test(int test_id, char *host_ip, char *bind_ip, char *host_por
       }
       else
       {
-         iperf_set_test_socket_bufsize(test,20000);
+         iperf_set_test_rate(test, 5000);
+         iperf_set_test_socket_bufsize(test,200);
       }
 #if 0
       /* create client thread */
diff --git a/create_tags b/create_tags
new file mode 100755
index 0000000..bcf493b
--- /dev/null
+++ b/create_tags
@@ -0,0 +1,7 @@
+#!/bin/bash
+
+sudo apt-get install ctags cscope -qy
+
+files=$(find -name '*.[chx]*')
+ctags $files
+cscope $files
-- 
2.1.4

