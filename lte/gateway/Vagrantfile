# -*- mode: ruby -*-
# vi: set ft=ruby :
# Copyright 2020 The Magma Authors.

# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"
Vagrant.require_version ">=1.9.1"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # Mount magma directory in all VMs
  config.vm.synced_folder "../..", "/home/vagrant/magma"

  config.vm.define :magma, primary: true do |magma|
    # Get our prepackaged box from the atlas cloud, based on
    # - debian/contrib-jessie64
    # - linux kernel from debian jessie backports
    # - updated vbguest-tool
    config.vm.box = "magmacore/magma_dev"
    config.vm.box_version = "1.1.20210618"
     # Enable Dynamic Swap Space to prevent Out of Memory crashes
    config.vm.provision :shell, inline: "fallocate -l 4G /swapfile && chmod 0600 /swapfile && mkswap /swapfile && swapon /swapfile && echo '/swapfile none swap sw 0 0' >> /etc/fstab"
    config.vm.provision :shell, inline: "echo vm.swappiness = 10 >> /etc/sysctl.conf && echo vm.vfs_cache_pressure = 50 >> /etc/sysctl.conf && sysctl -p"
    
    magma.vbguest.auto_update = false

    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    magma.vm.network "private_network", ip: "192.168.60.142", nic_type: "82540EM"
    # iperf3 trfserver routable IP.
    magma.vm.network "private_network", ip: "192.168.129.1", nic_type: "82540EM"

    magma.vm.provider "virtualbox" do |vb|
      vb.name = "magma-dev"
      vb.linked_clone = true
      vb.customize ["modifyvm", :id, "--memory", "8192"]
      vb.customize ["modifyvm", :id, "--cpus", "4"]
      vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
      vb.customize ["guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--timesync-set-threshold", 10000 ]
    end
    magma.vm.provision "ansible" do |ansible|
      ansible.host_key_checking = false
      ansible.playbook = "deploy/magma_dev_focal.yml"
      ansible.inventory_path = "deploy/hosts"
      ansible.raw_arguments = ENV.fetch("ANSIBLE_ARGS", "").split(";") +
                              ["--timeout=30"]
      ansible.verbose = 'v'
    end
  end

  config.vm.define :magma_trfserver, autostart: false do |magma_trfserver|
    magma_trfserver.vm.box = "magmacore/magma_trfserver"
    magma_trfserver.vm.hostname = "magma-trfserver"
    magma_trfserver.vm.box_version = "1.1.20210326"
    magma_trfserver.vbguest.auto_update = false

    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    magma_trfserver.vm.network "private_network", ip: "192.168.60.144", nic_type: "82540EM"
    # iperf3 server IP.
    magma_trfserver.vm.network "private_network", ip: "192.168.129.42", nic_type: "82540EM"

    magma_trfserver.vm.provider "virtualbox" do |vb|
      vb.name = "magma-trfserver"
      vb.linked_clone = true
      vb.customize ["modifyvm", :id, "--memory", "256"]
      vb.customize ["modifyvm", :id, "--cpus", "1"]
      vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
    end

    config.vm.provider :libvirt do |domain, override|
      override.vm.synced_folder "../..", "/home/vagrant/magma", type: 'nfs', linux__nfs_options: ['rw','no_subtree_check','no_root_squash'], mount_options: ['nolock']
      domain.uri = "qemu+unix:///system"
      domain.memory = 6144
      domain.cpus = 4
      domain.driver = "kvm"
      domain.host = "localhost"
      domain.connect_via_ssh = false
      domain.username = $user
      domain.storage_pool_name = "default"
      domain.nic_model_type = "virtio"
      domain.management_network_name = "magma-mgmt-net"
      domain.management_network_address = "172.17.2.0/24"
      domain.nested = true
      domain.cpu_mode = "host-passthrough"
      domain.volume_cache = "unsafe"
      domain.disk_bus = "virtio"
      domain.graphics_ip = "0.0.0.0"
    end

    magma_trfserver.vm.provision "ansible" do |ansible|
      ansible.host_key_checking = false
      ansible.playbook = "deploy/magma_trfserver.yml"
      ansible.inventory_path = "deploy/hosts"
      ansible.raw_arguments = ENV.fetch("ANSIBLE_ARGS", "").split(";") +
                              ["--timeout=30"]
      ansible.verbose = 'v'
    end
  end

  config.vm.define :magma_test, autostart: false do |magma_test|
    # Get our prepackaged box from the atlas cloud
    magma_test.vm.box = "magmacore/magma_test"
    magma_test.vm.hostname = "magma-test"
    magma_test.vm.box_version = "1.1.20210326"
    magma_test.vbguest.auto_update = false

    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    magma_test.vm.network "private_network", ip: "192.168.60.141", nic_type: "82540EM"
    # UE trfgen network
    magma_test.vm.network "private_network", ip: "192.168.128.11", nic_type: "82540EM"
    #config.ssh.private_key_path = "~/.ssh/vagrant.key"
    config.ssh.forward_agent = true

    magma_test.vm.provider "virtualbox" do |vb|
      vb.name = "magma_test"
      vb.linked_clone = true
      vb.customize ["modifyvm", :id, "--memory", "1024"]
      vb.customize ["modifyvm", :id, "--cpus", "1"]
      vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
    end

    config.vm.provider :libvirt do |domain, override|
      override.vm.synced_folder "../..", "/home/vagrant/magma", type: 'nfs', linux__nfs_options: ['rw','no_subtree_check','no_root_squash'], mount_options: ['nolock']
      domain.uri = "qemu+unix:///system"
      domain.memory = 1024
      domain.cpus = 1
      domain.driver = "kvm"
      domain.host = "localhost"
      domain.connect_via_ssh = false
      domain.username = $user
      domain.storage_pool_name = "default"
      domain.nic_model_type = "virtio"
      domain.management_network_name = "magma-mgmt-net"
      domain.management_network_address = "172.17.2.0/24"
      domain.nested = true
      domain.cpu_mode = "host-passthrough"
      domain.volume_cache = "unsafe"
      domain.disk_bus = "virtio"
      domain.graphics_ip = "0.0.0.0"
    end

    magma_test.vm.provision "ansible" do |ansible|
      ansible.host_key_checking = false
      ansible.playbook = "deploy/magma_test.yml"
      ansible.inventory_path = "deploy/hosts"
      ansible.raw_arguments = ENV.fetch("ANSIBLE_ARGS", "").split(";") +
                              ["--timeout=30"]
      ansible.verbose = 'v'
    end
  end

  config.vm.define :magma_prod, autostart: false do |magma_prod|
    magma_prod.vm.synced_folder ".", "/vagrant", disabled: true
    magma_prod.vm.synced_folder "../..", "/home/vagrant/magma", disabled: true
    # upstream box won't start due to missing linux-headers-4.9.0-9
    # using slightly customized box based on debian/stretch64
    magma_prod.vm.box = "amarpad/magma_prod"
    magma_prod.vm.hostname = "magma-prod"
    magma_prod.vbguest.auto_update = false

    # magma_prod.vm.box = "debian/stretch64"
    # magma_prod.vm.box_version = "9.9.1"
    # Create a private network, which can be bridged to a physical eNB
    magma_prod.vm.network "private_network", ip: "10.10.2.1", nic_type: "82540EM"
    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    magma_prod.vm.network "private_network", ip: "192.168.60.151", nic_type: "82540EM"
    #config.ssh.private_key_path = "~/.ssh/vagrant.key"
    config.ssh.forward_agent = true

    magma_prod.vm.provider "virtualbox" do |vb|
      vb.name = "magma_prod"
      vb.linked_clone = true
      vb.customize ["modifyvm", :id, "--memory", "1024"]
      vb.customize ["modifyvm", :id, "--cpus", "1"]
      vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
    end

    magma_prod.vm.provision "shell",
                            inline: "apt update"

    magma_prod.vm.provision "ansible" do |ansible|
      ansible.host_key_checking = false
      ansible.playbook = "deploy/magma_prod.yml"
      ansible.inventory_path = "deploy/hosts"
      ansible.raw_arguments = ENV.fetch("ANSIBLE_ARGS", "").split(";") +
                              ["--timeout=30"]
      ansible.verbose = 'v'
    end
  end

  config.vm.define :ovs_build, autostart: false do |ovs_build|
    ovs_build.vm.box = "generic/debian9"
    ovs_build.vm.hostname = "build-ovs"
    ovs_build.vm.network "public_network"
    ovs_build.ssh.forward_agent = true
    ovs_build.vm.box_check_update = false

    # Enable provisioning with a shell script. Additional provisioners such as
    # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
    # documentation for more information about their specific syntax and use.
    config.ssh.insert_key = false
  end

  config.vm.define :oai_hss, autostart: false do |oai_hss|
    oai_hss.vm.box = "ubuntu/bionic64"
    oai_hss.vm.hostname = "oai-hss"
    oai_hss.vm.network "public_network"
    oai_hss.ssh.forward_agent = true
    oai_hss.vm.box_check_update = false

    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    oai_hss.vm.network "private_network", ip: "192.168.60.153", nic_type: "82540EM"
    config.ssh.insert_key = false
    oai_hss.vm.provider "virtualbox" do |vb|
      vb.name = "oai-hss"
      vb.linked_clone = true
      vb.customize ["modifyvm", :id, "--memory", "4096"]
      vb.customize ["modifyvm", :id, "--cpus", "4"]
      vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
    end

  end

end
