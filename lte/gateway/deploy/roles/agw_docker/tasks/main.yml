---
# Copyright 2020 The Magma Authors.

# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Include vars of all.yaml
  include_vars:
    file: all.yaml

- name: Install dependencies
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
    - gnupg-agent
 
- name: Install aptitude using apt
  apt: name=aptitude state=latest force_apt_get=yes

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable
    state: present

- name: Configuring private package manager.
  copy:
    content: >
      deb {{ magma_pkgrepo_proto }}://{{ magma_pkgrepo_host }}{{ magma_pkgrepo_path}}
      {{ magma_pkgrepo_dist }} {{ magma_pkgrepo_component }}
    dest: /etc/apt/sources.list.d/{{ magma_pkgrepo_name }}.list
  become: yes

- name: Add unvalidated Apt signing key.
  when: magma_pkgrepo_key_fingerprint == ""
  become: yes
  block:
    - name: Download key
      apt_key:
        url: "{{ magma_pkgrepo_key }}"
        state: present
        validate_certs: no
    - name: Ignore server ssl cert
      copy:
        dest: /etc/apt/apt.conf.d/99insecurehttpsrepo
        content: |
          Acquire::https::{{ magma_pkgrepo_host }} {
          Verify-Peer "false";
          Verify-Host "false";
          };

- name: Add validated Apt signing key.
  when: magma_pkgrepo_key_fingerprint != ""
  become: yes
  apt_key:
    url: "{{ magma_pkgrepo_key }}"
    id: "{{ magma_pkgrepo_key_fingerprint }}"
    state: present

- name: Update and upgrade apt packages
  become: yes
  apt:
    update_cache: yes

- name: Install runtime dependencies.
  become: yes
  apt:
    name: "{{ packages }}"
  vars:
    packages:
      - graphviz
      - python-all
      - module-assistant
      - openssl
      - dkms
      - uuid-runtime

- name: Preconfigure wireshark (tshark) SUID property
  become: yes
  ignore_errors: yes
  shell: bash -c 'echo "wireshark-common wireshark-common/install-setuid boolean true" | debconf-set-selections'

- name: Install prebuilt openvswitch packages
  become: yes
  apt:
    name: "{{ packages }}"
    #dpkg_options: 'force-confold,force-confdef,force-overwrite'
  vars:
    packages:
      - libopenvswitch
      - openvswitch-datapath-dkms
      - openvswitch-datapath-source
      - openvswitch-common
      - openvswitch-switch

- name: Install Docker
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - docker-ce
    - docker-ce-cli
    - containerd.io

- name: Download docker-compose {{ docker_compose_version }}
  get_url:
    url : https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64
    dest: ~/docker-compose
    mode: '+x'

- name: Check docker-compose exists
  stat: path=~/docker-compose
  register: docker_compose

- name: Move docker-compose to /usr/local/bin/docker-compose
  command: mv ~/docker-compose /usr/local/bin/docker-compose
  when: docker_compose.stat.exists

- name: create directories for magma configs and files
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "/var/opt/magma"
    - "/var/opt/magma/configs"
    - "/var/opt/magma/certs"
    - "/etc/magma"
    - "/etc/magma/templates/"
    - "/var/opt/magma/docker"

- name: Enable IP forwarding
  become: true
  sysctl: name="net.ipv4.ip_forward" value=1 sysctl_set=yes state=present reload=yes

- name: touch snowflake
  shell: touch /etc/snowflake

- name: start docker service
  systemd: name=docker state=started enabled=yes

- name: Start service openvswitch-switch.
  become: yes
  service:
    name: openvswitch-switch
    state: started

- name: Copy the gtp interface initialization definition
  copy:
    src: magma_ifaces_gtp
    dest: /etc/network/interfaces.d/gtp

- name: Delete the OVS bridge on system initialization
  lineinfile: dest=/etc/default/openvswitch-switch regexp='.*OVS_CTL_OPTS=.*' line='OVS_CTL_OPTS=\'--delete-bridges\'' state=present

- name: Restart networking to bring up linux bridge
  ignore_errors: yes
  service:
    name: networking
    state: restarted

- name: Bring up gtp_br0
  shell: ifup gtp_br0
  become: yes

- name: Bring up mtr0
  shell: ifup mtr0
  become: yes

- name: Bring up uplink_br0
  shell: ifup uplink_br0
  become: yes

- name: Bring up ipfix0
  shell: ifup ipfix0
  become: yes
