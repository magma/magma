---
# Copyright 2020 The Magma Authors.

# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Fix resove conf
  shell: ln -sf /var/run/systemd/resolve/resolv.conf /etc/resolv.conf

- name: Include vars of all.yaml
  include_vars:
    file: all.yaml
    name: all_vars

- name: Copy magma service files
  copy:
    src: "systemd/magma_{{ item }}.service"
    dest: "/etc/systemd/system/magma@{{ item }}.service"
  with_items:
    # Magma Python services
    - magmad
    - mobilityd
    - dnsd
    - eventd
    - ctraced
    # Magma OAI services
    - mme
    # Magma third-party services
    - redis
    - pipelined
    - redirectd
    - envoy_controller
    # Manhattan services
    - lighttpd
    - sessiond
    - connectiond
    - liagentd
  when: full_provision

- name: Copy sctpd service file
  copy:
    src: systemd/sctpd.service
    dest: /etc/systemd/system/sctpd.service
  when: full_provision

- name: Copy envoy service file
  copy:
    src: systemd/magma_dp_envoy.service
    dest: /etc/systemd/system/magma_dp@envoy.service
  when: full_provision

- name: Copy syslog logrotate config file
  copy:
    src: logrotate_rsyslog.conf
    dest: /etc/logrotate.d/rsyslog
  when: full_provision

- name: Copy OAI logrotate config file
  copy:
    src: logrotate_oai.conf
    dest: /etc/logrotate.d/oai
  when: full_provision

- name: Copy preferences file for backports
  copy: src=magma-preferences dest=/etc/apt/preferences.d/magma-preferences
  when: full_provision

- name: Copy sysctl file for core dumps
  copy: src=99-magma.conf dest=/etc/sysctl.d/99-magma.conf
  when: full_provision

- name: Copy set_irq_affinity
  copy: src=set_irq_affinity dest=/usr/local/bin/set_irq_affinity mode=751
  when: full_provision

- name: Copy magma-bridge-reset.sh
  copy: src=magma-bridge-reset.sh dest=/usr/local/bin/magma-bridge-reset.sh mode=751
  when: full_provision

- name: Copy magma-setup-wg.sh
  copy: src=magma-setup-wg.sh dest=/usr/local/bin/magma-setup-wg.sh mode=751
  when: full_provision

- name: Copy magma-create-gtp-port.sh
  copy: src=magma-create-gtp-port.sh dest=/usr/local/bin/magma-create-gtp-port.sh mode=751
  when: full_provision

- name: Add the sysctl config from the step before
  become: yes
  command: 'sysctl -p /etc/sysctl.d/99-magma.conf'
  when: full_provision

- name: Set core ulimit to unlimited
  pam_limits:
    domain: '*'
    limit_item: core
    limit_type: '-'
    value: unlimited

- name: Create the /var/core directory
  file: path=/var/core state=directory
  when: full_provision

- name: Copy lte scripts
  copy:
    src: '{{ magma_root }}/lte/gateway/python/scripts/{{ item }}'
    dest: /usr/local/bin/{{ item }}
    force: yes
    remote_src: yes
  with_items:
    - config_stateless_agw.py
    - create_oai_certs.py
    - generate_oai_config.py
    - generate_dnsd_config.py
  when: full_provision

- name: Copy Envoy config
  copy: src=envoy.yaml dest=/var/opt/magma/envoy.yaml
  when: full_provision

- name: Copy Envoy configuration script
  copy: src=configure_envoy_namespace.sh dest=/usr/local/bin/configure_envoy_namespace.sh
  when: full_provision

- name: Create symlink for sctpd binary
  file: src='{{ c_build }}/sctpd/src/sctpd' path=/usr/local/sbin/sctpd state=link force=yes follow=no
  when: full_provision

- name: Create symlink for OAI mme binary
  file: src='{{ oai_build }}/oai_mme/mme' path=/usr/local/bin/mme state=link force=yes follow=no
  when: full_provision

- name: Create symlink for session_manager binary
  file: src='{{ c_build }}/session_manager/sessiond' path=/usr/local/bin/sessiond state=link force=yes follow=no
  when: full_provision

- name: Create symlink for envoy controller binary
  file: src='{{ go_build }}/envoy_controller' path=/usr/local/bin/envoy_controller state=link force=yes follow=no
  when: full_provision

- name: Create symlink for dpid binary
  file: src='{{ c_build }}/dpi/dpid' path=/usr/local/bin/dpid state=link force=yes follow=no
  when: full_provision

- name: Create symlink for connectiond binary
  file: src='{{ c_build }}/connection_tracker/src/connectiond' path=/usr/local/bin/connectiond state=link force=yes follow=no
  when: full_provision

- name: Create symlink for li agent binary
  file: src='{{ c_build }}/li_agent/src/liagentd' path=/usr/local/bin/liagentd state=link force=yes follow=no
  when: full_provision

- name: Create symlink for corefile collection script
  file: src='{{ magma_root }}/lte/gateway/deploy/roles/magma/files/coredump' path=/usr/local/bin/coredump state=link force=yes follow=no
  when: full_provision

- name: Create the /var/www/local-cdn directory
  file: path=/var/www/local-cdn state=directory
  when: full_provision

- name: Create the /var/www/local-cdn/store directory
  file: path=/var/www/local-cdn/store state=directory
  when: full_provision

- name: Add Magma package directory
  become: no
  file:
    path: '{{ magma_repo }}/'
    state: directory
  when: full_provision

- name: Add Magma dependency package directory
  become: no
  file:
    path: '{{ magma_deps }}/'
    state: directory
  when: full_provision

- name: Enable IP forwarding
  sysctl: name="net.ipv4.ip_forward" value=1 sysctl_set=yes state=present reload=yes
  when: full_provision

- name: Install OpenAirInterface (OAI) dependencies
  retries: 5
  when: preburn
  apt:
    state: present
    update_cache: yes
    pkg:
      - check
      - libgtest-dev
      - liblfds710
      - google-mock
      - libssl-dev
      - libsctp-dev
      - libtspi-dev
      - oai-asn1c
      - oai-nettle
      - oai-gnutls
      - oai-freediameter
      - prometheus-cpp-dev
      - libczmq-dev
      - libczmq-dev

- name: Install LI Agent dependencies
  retries: 5
  apt:
    state: present
    update_cache: yes
    pkg:
      - uuid-dev

- name: Fix vport-gtp kernel module for Ubuntu Focal
  become: yes
  block:
    - shell: rmmod openvswitch
      ignore_errors: yes
    - shell: modprobe vport-gtp
      ignore_errors: yes

- name: Install Ubuntu Magma gateway dev dependencies
  retries: 5
  when: preburn
  apt:
    state: present
    update_cache: no
    pkg:
      - libconfig-dev

- name: Install common Magma dependencies
  retries: 5
  when: preburn
  apt:
    state: present
    update_cache: yes
    pkg:
      # install prometheus
      - prometheus-cpp-dev
      # install openvswitch
      - openvswitch-switch
      - openvswitch-test
      - libopenvswitch
      - openvswitch-datapath-dkms
      - openvswitch-common
      - libopenvswitch-dev
      - python3-openvswitch
      - openvswitch-doc
      - openvswitch-pki
      - openvswitch-test
      - magma-libfluid
      # install lxml
      - python3-lxml
      - bridge-utils
      # install yaml parser
      - libyaml-cpp-dev
      - libgoogle-glog-dev
      # folly deps
      - libfolly-dev
      - libdouble-conversion-dev
      - libboost-chrono-dev
      - redis-server
      - python-redis
      - magma-cpp-redis
      # Time synchronization with NTP for eventd
      - ntpdate
      # For call tracing
      - tshark
      - getenvoy-envoy
      # eBPF compile and load tools for kernsnoopd and AGW datapath
      # Ubuntu bcc lib (bpfcc-tools) is pretty old, use magma repo package
      - bcc-tools

- name: Install ubuntu Magma dependencies
  retries: 5
  when: preburn
  apt:
    state: present
    update_cache: yes
    pkg:
      - python3-openvswitch
      - nlohmann-json3-dev
      # managing gtp interface
      - ifupdown

- name: Copy the gtp interface initialization definition
  copy:
    src: magma_ifaces_gtp
    dest: /etc/network/interfaces.d/gtp
  when: full_provision

- name: Configure IPv6 address on eth0 interface
  blockinfile:
    block: |
        iface eth0 inet6 static
              address 2020::10/64
              gateway 2020::1
    insertafter: "iface eth0 inet dhcp"
    path: "/etc/network/interfaces"
  when: full_provision

- name: Delete the OVS bridge on system initialization
  lineinfile: dest=/etc/default/openvswitch-switch regexp='.*OVS_CTL_OPTS=.*' line='OVS_CTL_OPTS=\'--delete-bridges\'' state=present
  when: full_provision

- name: Specific Magma dependencies from backports
  apt: pkg=cmake state=present update_cache=yes
  retries: 5
  when: preburn

- name: Install C code coverage analysis dependencies
  apt: pkg=lcov state=present update_cache=yes
  retries: 5
  when: preburn

- name: Install gmock and gtest for C++ testing
  become: yes
  ignore_errors: yes
  shell: cmake CMakeLists.txt && make && cp *.a /usr/lib
  args:
    chdir: /usr/src/{{ item }}
  with_items:
    - gtest
    - gmock
  when: preburn

- name: Download golang tar
  get_url:
    url: "https://storage.googleapis.com/golang/go{{ all_vars.GO_VERSION }}.linux-amd64.tar.gz"
    dest: "{{ all_vars.WORK_DIR }}"
    mode: 0440
  when: preburn

- name: Extract Go tarball
  unarchive:
    src: "{{all_vars.WORK_DIR}}/go{{ all_vars.GO_VERSION }}.linux-amd64.tar.gz"
    dest: /usr/local
    copy: no
  when: preburn

- name: Set Go environment vars in profile
  lineinfile:
    dest: "/home/{{ ansible_user }}/.profile"
    state: present
    line: "{{ item }}"
  with_items:
    - export PATH=$PATH:/usr/local/bin/go/
  when: full_provision

- name: Install dnsmasq
  apt: pkg=dnsmasq state=present update_cache=yes
  retries: 5
  when: preburn

- name: Stop dnsmasq service
  service: name=dnsmasq state=stopped enabled=no
  when: preburn

- name: Install lighttpd
  apt: pkg=lighttpd state=present update_cache=yes
  retries: 5
  when: preburn

- name: Stop lighttpd service
  service: name=lighttpd state=stopped enabled=no
  when: preburn

- name: Restart networking to bring up linux bridge
  ignore_errors: yes
  service:
    name: networking
    state: restarted
  when: full_provision

- name: Restart OVS
  ignore_errors: yes
  shell: |
    ifdown gtp_br0
    /etc/init.d/openvswitch-switch  force-reload-kmod

- name: Bring up ovs bridge
  ignore_errors: yes
  shell: ifup -i /etc/network/interfaces.d/gtp {{ item }}
  with_items:
    - gtp_br0
    - uplink_br0
  when: full_provision

- name: Bring up interfaces
  ignore_errors: yes
  shell: ifup {{ item }}
  with_items:
    - eth0
    - mtr0
    - ipfix0
    - li_port
  when: full_provision

- name: Copy ryu ipfix patch for 3.5
  copy:
    src: nx_actions.py
    dest: /home/vagrant/build/python/lib/python3.5/site-packages/ryu/ofproto/
  when: full_provision

- name: Copy ryu ipfix patch for 3.8
  copy:
    src: nx_actions_3.5.py
    dest: /home/vagrant/build/python/lib/python3.8/site-packages/ryu/ofproto/nx_actions.py
  when: full_provision
  ignore_errors: true

- name: Change build folder ownership
  ansible.builtin.file:
    path: /home/vagrant/build
    owner: vagrant
    group: vagrant
    recurse: yes

- name: Patch python aio lib
  patch:
    src: patches/aioeventlet.py38.patch
    dest: /usr/local/lib/python3.8/dist-packages/aioeventlet.py

- name: Patch python aioeventlet lib crash ubuntu
  patch:
    src: patches/aioeventlet_fd_exception.patch
    dest: /usr/local/lib/python3.8/dist-packages/aioeventlet.py

# TODO: preburn this
- name: Install requirements for VSCode <-> Bazel integration
  retries: 5
  apt:
    state: latest
    pkg:
      - clangd-12
      - lld

# TODO: preburn this
- name: Install clang-format-11 c/c++ formatting tooling
  retries: 5
  apt:
    state: latest
    pkg:
      - clang-format-11

- name: Symlink system wide bazelrc into the VM
  file:
    src: '/home/vagrant/magma/bazel/bazelrcs/vm.bazelrc'
    path: '/etc/bazelrc'
    state: link
    force: yes

# TODO: Fix magma-dev VM box and remove this step.
- name: Install Magma dependencies
  retries: 5
  apt:
    state: latest
    pkg:
      - magma-libfluid

- name: Create eBPF code dir
  command: 'mkdir /var/opt/magma/ebpf/ -p'
  when: full_provision

- name: Prepare AGW for eBPF
  command: 'apt-get -y install bcc-tools linux-headers-5.4.0-74-generic'
  when: full_provision

- name: Copy eBPF code
  copy:
    src: '{{ magma_root }}/lte/gateway/python/magma/pipelined/ebpf/{{ item }}'
    dest: /var/opt/magma/ebpf/{{ item }}
    force: yes
    remote_src: yes
  with_items:
    - ebpf_ul_handler.c
    - ebpf_dl_handler.c
  when: full_provision


- name: Copy eBPF code
  copy:
    src: '{{ magma_root }}/orc8r/gateway/c/common/ebpf/EbpfMap.h'
    dest: /var/opt/magma/ebpf/EbpfMap.h
    force: yes
    remote_src: yes
  when: full_provision
