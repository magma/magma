//
//Copyright 2022 The Magma Authors.
//
//This source code is licensed under the BSD-style license found in the
//LICENSE file in the root directory of this source tree.
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.10.0
// source: dp/protos/cbsd.proto

package protos

import (
	context "context"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCbsdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkId string    `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	Data      *CbsdData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateCbsdRequest) Reset() {
	*x = CreateCbsdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_cbsd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCbsdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCbsdRequest) ProtoMessage() {}

func (x *CreateCbsdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_cbsd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCbsdRequest.ProtoReflect.Descriptor instead.
func (*CreateCbsdRequest) Descriptor() ([]byte, []int) {
	return file_dp_protos_cbsd_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCbsdRequest) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *CreateCbsdRequest) GetData() *CbsdData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateCbsdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateCbsdResponse) Reset() {
	*x = CreateCbsdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_cbsd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCbsdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCbsdResponse) ProtoMessage() {}

func (x *CreateCbsdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_cbsd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCbsdResponse.ProtoReflect.Descriptor instead.
func (*CreateCbsdResponse) Descriptor() ([]byte, []int) {
	return file_dp_protos_cbsd_proto_rawDescGZIP(), []int{1}
}

type UpdateCbsdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkId string    `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	Id        int64     `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Data      *CbsdData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateCbsdRequest) Reset() {
	*x = UpdateCbsdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_cbsd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCbsdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCbsdRequest) ProtoMessage() {}

func (x *UpdateCbsdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_cbsd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCbsdRequest.ProtoReflect.Descriptor instead.
func (*UpdateCbsdRequest) Descriptor() ([]byte, []int) {
	return file_dp_protos_cbsd_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateCbsdRequest) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *UpdateCbsdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCbsdRequest) GetData() *CbsdData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateCbsdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCbsdResponse) Reset() {
	*x = UpdateCbsdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_cbsd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCbsdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCbsdResponse) ProtoMessage() {}

func (x *UpdateCbsdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_cbsd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCbsdResponse.ProtoReflect.Descriptor instead.
func (*UpdateCbsdResponse) Descriptor() ([]byte, []int) {
	return file_dp_protos_cbsd_proto_rawDescGZIP(), []int{3}
}

type DeleteCbsdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkId string `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	Id        int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCbsdRequest) Reset() {
	*x = DeleteCbsdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_cbsd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCbsdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCbsdRequest) ProtoMessage() {}

func (x *DeleteCbsdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_cbsd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCbsdRequest.ProtoReflect.Descriptor instead.
func (*DeleteCbsdRequest) Descriptor() ([]byte, []int) {
	return file_dp_protos_cbsd_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteCbsdRequest) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *DeleteCbsdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteCbsdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCbsdResponse) Reset() {
	*x = DeleteCbsdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_cbsd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCbsdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCbsdResponse) ProtoMessage() {}

func (x *DeleteCbsdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_cbsd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCbsdResponse.ProtoReflect.Descriptor instead.
func (*DeleteCbsdResponse) Descriptor() ([]byte, []int) {
	return file_dp_protos_cbsd_proto_rawDescGZIP(), []int{5}
}

type FetchCbsdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkId string `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	Id        int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FetchCbsdRequest) Reset() {
	*x = FetchCbsdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_cbsd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchCbsdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchCbsdRequest) ProtoMessage() {}

func (x *FetchCbsdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_cbsd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchCbsdRequest.ProtoReflect.Descriptor instead.
func (*FetchCbsdRequest) Descriptor() ([]byte, []int) {
	return file_dp_protos_cbsd_proto_rawDescGZIP(), []int{6}
}

func (x *FetchCbsdRequest) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *FetchCbsdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FetchCbsdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *CbsdDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *FetchCbsdResponse) Reset() {
	*x = FetchCbsdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_cbsd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchCbsdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchCbsdResponse) ProtoMessage() {}

func (x *FetchCbsdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_cbsd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchCbsdResponse.ProtoReflect.Descriptor instead.
func (*FetchCbsdResponse) Descriptor() ([]byte, []int) {
	return file_dp_protos_cbsd_proto_rawDescGZIP(), []int{7}
}

func (x *FetchCbsdResponse) GetDetails() *CbsdDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListCbsdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkId  string      `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	Pagination *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filter     *CbsdFilter `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListCbsdRequest) Reset() {
	*x = ListCbsdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_cbsd_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCbsdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCbsdRequest) ProtoMessage() {}

func (x *ListCbsdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_cbsd_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCbsdRequest.ProtoReflect.Descriptor instead.
func (*ListCbsdRequest) Descriptor() ([]byte, []int) {
	return file_dp_protos_cbsd_proto_rawDescGZIP(), []int{8}
}

func (x *ListCbsdRequest) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *ListCbsdRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListCbsdRequest) GetFilter() *CbsdFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListCbsdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details    []*CbsdDetails `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"`
	TotalCount int64          `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ListCbsdResponse) Reset() {
	*x = ListCbsdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_cbsd_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCbsdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCbsdResponse) ProtoMessage() {}

func (x *ListCbsdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_cbsd_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCbsdResponse.ProtoReflect.Descriptor instead.
func (*ListCbsdResponse) Descriptor() ([]byte, []int) {
	return file_dp_protos_cbsd_proto_rawDescGZIP(), []int{9}
}

func (x *ListCbsdResponse) GetDetails() []*CbsdDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ListCbsdResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type CbsdData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string                `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FccId        string                `protobuf:"bytes,2,opt,name=fcc_id,json=fccId,proto3" json:"fcc_id,omitempty"`
	SerialNumber string                `protobuf:"bytes,3,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Capabilities *Capabilities         `protobuf:"bytes,4,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	Preferences  *FrequencyPreferences `protobuf:"bytes,5,opt,name=preferences,proto3" json:"preferences,omitempty"`
}

func (x *CbsdData) Reset() {
	*x = CbsdData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_cbsd_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CbsdData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CbsdData) ProtoMessage() {}

func (x *CbsdData) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_cbsd_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CbsdData.ProtoReflect.Descriptor instead.
func (*CbsdData) Descriptor() ([]byte, []int) {
	return file_dp_protos_cbsd_proto_rawDescGZIP(), []int{10}
}

func (x *CbsdData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CbsdData) GetFccId() string {
	if x != nil {
		return x.FccId
	}
	return ""
}

func (x *CbsdData) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *CbsdData) GetCapabilities() *Capabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *CbsdData) GetPreferences() *FrequencyPreferences {
	if x != nil {
		return x.Preferences
	}
	return nil
}

type Capabilities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinPower         float64 `protobuf:"fixed64,1,opt,name=min_power,json=minPower,proto3" json:"min_power,omitempty"`
	MaxPower         float64 `protobuf:"fixed64,2,opt,name=max_power,json=maxPower,proto3" json:"max_power,omitempty"`
	NumberOfAntennas int64   `protobuf:"varint,3,opt,name=number_of_antennas,json=numberOfAntennas,proto3" json:"number_of_antennas,omitempty"`
	AntennaGain      float64 `protobuf:"fixed64,4,opt,name=antenna_gain,json=antennaGain,proto3" json:"antenna_gain,omitempty"`
}

func (x *Capabilities) Reset() {
	*x = Capabilities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_cbsd_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Capabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Capabilities) ProtoMessage() {}

func (x *Capabilities) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_cbsd_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Capabilities.ProtoReflect.Descriptor instead.
func (*Capabilities) Descriptor() ([]byte, []int) {
	return file_dp_protos_cbsd_proto_rawDescGZIP(), []int{11}
}

func (x *Capabilities) GetMinPower() float64 {
	if x != nil {
		return x.MinPower
	}
	return 0
}

func (x *Capabilities) GetMaxPower() float64 {
	if x != nil {
		return x.MaxPower
	}
	return 0
}

func (x *Capabilities) GetNumberOfAntennas() int64 {
	if x != nil {
		return x.NumberOfAntennas
	}
	return 0
}

func (x *Capabilities) GetAntennaGain() float64 {
	if x != nil {
		return x.AntennaGain
	}
	return 0
}

type FrequencyPreferences struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BandwidthMhz   int64   `protobuf:"varint,1,opt,name=bandwidth_mhz,json=bandwidthMhz,proto3" json:"bandwidth_mhz,omitempty"`
	FrequenciesMhz []int64 `protobuf:"varint,2,rep,packed,name=frequencies_mhz,json=frequenciesMhz,proto3" json:"frequencies_mhz,omitempty"`
}

func (x *FrequencyPreferences) Reset() {
	*x = FrequencyPreferences{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_cbsd_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrequencyPreferences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrequencyPreferences) ProtoMessage() {}

func (x *FrequencyPreferences) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_cbsd_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrequencyPreferences.ProtoReflect.Descriptor instead.
func (*FrequencyPreferences) Descriptor() ([]byte, []int) {
	return file_dp_protos_cbsd_proto_rawDescGZIP(), []int{12}
}

func (x *FrequencyPreferences) GetBandwidthMhz() int64 {
	if x != nil {
		return x.BandwidthMhz
	}
	return 0
}

func (x *FrequencyPreferences) GetFrequenciesMhz() []int64 {
	if x != nil {
		return x.FrequenciesMhz
	}
	return nil
}

type CbsdDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data     *CbsdData     `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	CbsdId   string        `protobuf:"bytes,3,opt,name=cbsd_id,json=cbsdId,proto3" json:"cbsd_id,omitempty"`
	State    string        `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	IsActive bool          `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	Grant    *GrantDetails `protobuf:"bytes,6,opt,name=grant,proto3" json:"grant,omitempty"`
}

func (x *CbsdDetails) Reset() {
	*x = CbsdDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_cbsd_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CbsdDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CbsdDetails) ProtoMessage() {}

func (x *CbsdDetails) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_cbsd_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CbsdDetails.ProtoReflect.Descriptor instead.
func (*CbsdDetails) Descriptor() ([]byte, []int) {
	return file_dp_protos_cbsd_proto_rawDescGZIP(), []int{13}
}

func (x *CbsdDetails) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CbsdDetails) GetData() *CbsdData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CbsdDetails) GetCbsdId() string {
	if x != nil {
		return x.CbsdId
	}
	return ""
}

func (x *CbsdDetails) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *CbsdDetails) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *CbsdDetails) GetGrant() *GrantDetails {
	if x != nil {
		return x.Grant
	}
	return nil
}

type GrantDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BandwidthMhz            int64   `protobuf:"varint,1,opt,name=bandwidth_mhz,json=bandwidthMhz,proto3" json:"bandwidth_mhz,omitempty"`
	FrequencyMhz            int64   `protobuf:"varint,2,opt,name=frequency_mhz,json=frequencyMhz,proto3" json:"frequency_mhz,omitempty"`
	MaxEirp                 float64 `protobuf:"fixed64,3,opt,name=max_eirp,json=maxEirp,proto3" json:"max_eirp,omitempty"`
	State                   string  `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	TransmitExpireTimestamp int64   `protobuf:"varint,5,opt,name=transmit_expire_timestamp,json=transmitExpireTimestamp,proto3" json:"transmit_expire_timestamp,omitempty"`
	GrantExpireTimestamp    int64   `protobuf:"varint,6,opt,name=grant_expire_timestamp,json=grantExpireTimestamp,proto3" json:"grant_expire_timestamp,omitempty"`
}

func (x *GrantDetails) Reset() {
	*x = GrantDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_cbsd_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantDetails) ProtoMessage() {}

func (x *GrantDetails) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_cbsd_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantDetails.ProtoReflect.Descriptor instead.
func (*GrantDetails) Descriptor() ([]byte, []int) {
	return file_dp_protos_cbsd_proto_rawDescGZIP(), []int{14}
}

func (x *GrantDetails) GetBandwidthMhz() int64 {
	if x != nil {
		return x.BandwidthMhz
	}
	return 0
}

func (x *GrantDetails) GetFrequencyMhz() int64 {
	if x != nil {
		return x.FrequencyMhz
	}
	return 0
}

func (x *GrantDetails) GetMaxEirp() float64 {
	if x != nil {
		return x.MaxEirp
	}
	return 0
}

func (x *GrantDetails) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GrantDetails) GetTransmitExpireTimestamp() int64 {
	if x != nil {
		return x.TransmitExpireTimestamp
	}
	return 0
}

func (x *GrantDetails) GetGrantExpireTimestamp() int64 {
	if x != nil {
		return x.GrantExpireTimestamp
	}
	return 0
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  *wrappers.Int64Value `protobuf:"bytes,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset *wrappers.Int64Value `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_cbsd_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_cbsd_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_dp_protos_cbsd_proto_rawDescGZIP(), []int{15}
}

func (x *Pagination) GetLimit() *wrappers.Int64Value {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *Pagination) GetOffset() *wrappers.Int64Value {
	if x != nil {
		return x.Offset
	}
	return nil
}

type CbsdFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerialNumber string `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
}

func (x *CbsdFilter) Reset() {
	*x = CbsdFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_cbsd_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CbsdFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CbsdFilter) ProtoMessage() {}

func (x *CbsdFilter) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_cbsd_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CbsdFilter.ProtoReflect.Descriptor instead.
func (*CbsdFilter) Descriptor() ([]byte, []int) {
	return file_dp_protos_cbsd_proto_rawDescGZIP(), []int{16}
}

func (x *CbsdFilter) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

var File_dp_protos_cbsd_proto protoreflect.FileDescriptor

var file_dp_protos_cbsd_proto_rawDesc = []byte{
	0x0a, 0x14, 0x64, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x62, 0x73, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x64, 0x70,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x5a, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x62, 0x73, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x64, 0x70, 0x2e, 0x43, 0x62,
	0x73, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x14, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x62, 0x73, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x6a, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x62, 0x73, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x64, 0x70, 0x2e,
	0x43, 0x62, 0x73, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x14,
	0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x62, 0x73, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x62,
	0x73, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x62, 0x73, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41,
	0x0a, 0x10, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x62, 0x73, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x44, 0x0a, 0x11, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x62, 0x73, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e,
	0x64, 0x70, 0x2e, 0x43, 0x62, 0x73, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x62, 0x73, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x64, 0x70, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2c, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x64, 0x70, 0x2e, 0x43, 0x62, 0x73, 0x64,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x64,
	0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x62, 0x73, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x64, 0x70, 0x2e, 0x43,
	0x62, 0x73, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xdd, 0x01, 0x0a, 0x08, 0x43, 0x62, 0x73, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x66, 0x63,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x63, 0x63, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d,
	0x61, 0x67, 0x6d, 0x61, 0x2e, 0x64, 0x70, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x40, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e,
	0x64, 0x70, 0x2e, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x0c, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12,
	0x2c, 0x0a, 0x12, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x6e, 0x74,
	0x65, 0x6e, 0x6e, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x4f, 0x66, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x5f, 0x67, 0x61, 0x69, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0b, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x47, 0x61, 0x69, 0x6e,
	0x22, 0x64, 0x0a, 0x14, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x61, 0x6e, 0x64,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x5f, 0x6d, 0x68, 0x7a, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x4d, 0x68, 0x7a, 0x12, 0x27, 0x0a,
	0x0f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x5f, 0x6d, 0x68, 0x7a,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0e, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x4d, 0x68, 0x7a, 0x22, 0xbf, 0x01, 0x0a, 0x0b, 0x43, 0x62, 0x73, 0x64, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x64, 0x70, 0x2e,
	0x43, 0x62, 0x73, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17,
	0x0a, 0x07, 0x63, 0x62, 0x73, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x62, 0x73, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x67, 0x6d,
	0x61, 0x2e, 0x64, 0x70, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x05, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x22, 0xfb, 0x01, 0x0a, 0x0c, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x61, 0x6e,
	0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x5f, 0x6d, 0x68, 0x7a, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x4d, 0x68, 0x7a, 0x12, 0x23,
	0x0a, 0x0d, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6d, 0x68, 0x7a, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79,
	0x4d, 0x68, 0x7a, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x65, 0x69, 0x72, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x45, 0x69, 0x72, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74,
	0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69,
	0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x34, 0x0a, 0x16, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x14, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x74, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x31, 0x0a, 0x0a,
	0x43, 0x62, 0x73, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x32,
	0xff, 0x02, 0x0a, 0x0e, 0x43, 0x62, 0x73, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x49, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x62, 0x73, 0x64,
	0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x64, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x62, 0x73, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x64, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x62, 0x73, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x62, 0x73, 0x64, 0x12, 0x1b, 0x2e, 0x6d, 0x61,
	0x67, 0x6d, 0x61, 0x2e, 0x64, 0x70, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x62, 0x73,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61,
	0x2e, 0x64, 0x70, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x62, 0x73, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x62, 0x73, 0x64, 0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x64,
	0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x62, 0x73, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x64, 0x70, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x62, 0x73, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x62, 0x73, 0x64,
	0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x64, 0x70, 0x2e, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x43, 0x62, 0x73, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d,
	0x61, 0x67, 0x6d, 0x61, 0x2e, 0x64, 0x70, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x62, 0x73,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x62, 0x73, 0x64, 0x73, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61,
	0x2e, 0x64, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x62, 0x73, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x64, 0x70, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x62, 0x73, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x1a, 0x5a, 0x18, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2f, 0x64, 0x70, 0x2f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dp_protos_cbsd_proto_rawDescOnce sync.Once
	file_dp_protos_cbsd_proto_rawDescData = file_dp_protos_cbsd_proto_rawDesc
)

func file_dp_protos_cbsd_proto_rawDescGZIP() []byte {
	file_dp_protos_cbsd_proto_rawDescOnce.Do(func() {
		file_dp_protos_cbsd_proto_rawDescData = protoimpl.X.CompressGZIP(file_dp_protos_cbsd_proto_rawDescData)
	})
	return file_dp_protos_cbsd_proto_rawDescData
}

var file_dp_protos_cbsd_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_dp_protos_cbsd_proto_goTypes = []interface{}{
	(*CreateCbsdRequest)(nil),    // 0: magma.dp.CreateCbsdRequest
	(*CreateCbsdResponse)(nil),   // 1: magma.dp.CreateCbsdResponse
	(*UpdateCbsdRequest)(nil),    // 2: magma.dp.UpdateCbsdRequest
	(*UpdateCbsdResponse)(nil),   // 3: magma.dp.UpdateCbsdResponse
	(*DeleteCbsdRequest)(nil),    // 4: magma.dp.DeleteCbsdRequest
	(*DeleteCbsdResponse)(nil),   // 5: magma.dp.DeleteCbsdResponse
	(*FetchCbsdRequest)(nil),     // 6: magma.dp.FetchCbsdRequest
	(*FetchCbsdResponse)(nil),    // 7: magma.dp.FetchCbsdResponse
	(*ListCbsdRequest)(nil),      // 8: magma.dp.ListCbsdRequest
	(*ListCbsdResponse)(nil),     // 9: magma.dp.ListCbsdResponse
	(*CbsdData)(nil),             // 10: magma.dp.CbsdData
	(*Capabilities)(nil),         // 11: magma.dp.Capabilities
	(*FrequencyPreferences)(nil), // 12: magma.dp.FrequencyPreferences
	(*CbsdDetails)(nil),          // 13: magma.dp.CbsdDetails
	(*GrantDetails)(nil),         // 14: magma.dp.GrantDetails
	(*Pagination)(nil),           // 15: magma.dp.Pagination
	(*CbsdFilter)(nil),           // 16: magma.dp.CbsdFilter
	(*wrappers.Int64Value)(nil),  // 17: google.protobuf.Int64Value
}
var file_dp_protos_cbsd_proto_depIdxs = []int32{
	10, // 0: magma.dp.CreateCbsdRequest.data:type_name -> magma.dp.CbsdData
	10, // 1: magma.dp.UpdateCbsdRequest.data:type_name -> magma.dp.CbsdData
	13, // 2: magma.dp.FetchCbsdResponse.details:type_name -> magma.dp.CbsdDetails
	15, // 3: magma.dp.ListCbsdRequest.pagination:type_name -> magma.dp.Pagination
	16, // 4: magma.dp.ListCbsdRequest.filter:type_name -> magma.dp.CbsdFilter
	13, // 5: magma.dp.ListCbsdResponse.details:type_name -> magma.dp.CbsdDetails
	11, // 6: magma.dp.CbsdData.capabilities:type_name -> magma.dp.Capabilities
	12, // 7: magma.dp.CbsdData.preferences:type_name -> magma.dp.FrequencyPreferences
	10, // 8: magma.dp.CbsdDetails.data:type_name -> magma.dp.CbsdData
	14, // 9: magma.dp.CbsdDetails.grant:type_name -> magma.dp.GrantDetails
	17, // 10: magma.dp.Pagination.limit:type_name -> google.protobuf.Int64Value
	17, // 11: magma.dp.Pagination.offset:type_name -> google.protobuf.Int64Value
	0,  // 12: magma.dp.CbsdManagement.CreateCbsd:input_type -> magma.dp.CreateCbsdRequest
	2,  // 13: magma.dp.CbsdManagement.UpdateCbsd:input_type -> magma.dp.UpdateCbsdRequest
	4,  // 14: magma.dp.CbsdManagement.DeleteCbsd:input_type -> magma.dp.DeleteCbsdRequest
	6,  // 15: magma.dp.CbsdManagement.FetchCbsd:input_type -> magma.dp.FetchCbsdRequest
	8,  // 16: magma.dp.CbsdManagement.ListCbsds:input_type -> magma.dp.ListCbsdRequest
	1,  // 17: magma.dp.CbsdManagement.CreateCbsd:output_type -> magma.dp.CreateCbsdResponse
	3,  // 18: magma.dp.CbsdManagement.UpdateCbsd:output_type -> magma.dp.UpdateCbsdResponse
	5,  // 19: magma.dp.CbsdManagement.DeleteCbsd:output_type -> magma.dp.DeleteCbsdResponse
	7,  // 20: magma.dp.CbsdManagement.FetchCbsd:output_type -> magma.dp.FetchCbsdResponse
	9,  // 21: magma.dp.CbsdManagement.ListCbsds:output_type -> magma.dp.ListCbsdResponse
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_dp_protos_cbsd_proto_init() }
func file_dp_protos_cbsd_proto_init() {
	if File_dp_protos_cbsd_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dp_protos_cbsd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCbsdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_cbsd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCbsdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_cbsd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCbsdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_cbsd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCbsdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_cbsd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCbsdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_cbsd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCbsdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_cbsd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchCbsdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_cbsd_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchCbsdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_cbsd_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCbsdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_cbsd_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCbsdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_cbsd_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CbsdData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_cbsd_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Capabilities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_cbsd_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrequencyPreferences); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_cbsd_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CbsdDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_cbsd_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_cbsd_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_cbsd_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CbsdFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dp_protos_cbsd_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dp_protos_cbsd_proto_goTypes,
		DependencyIndexes: file_dp_protos_cbsd_proto_depIdxs,
		MessageInfos:      file_dp_protos_cbsd_proto_msgTypes,
	}.Build()
	File_dp_protos_cbsd_proto = out.File
	file_dp_protos_cbsd_proto_rawDesc = nil
	file_dp_protos_cbsd_proto_goTypes = nil
	file_dp_protos_cbsd_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CbsdManagementClient is the client API for CbsdManagement service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CbsdManagementClient interface {
	CreateCbsd(ctx context.Context, in *CreateCbsdRequest, opts ...grpc.CallOption) (*CreateCbsdResponse, error)
	UpdateCbsd(ctx context.Context, in *UpdateCbsdRequest, opts ...grpc.CallOption) (*UpdateCbsdResponse, error)
	DeleteCbsd(ctx context.Context, in *DeleteCbsdRequest, opts ...grpc.CallOption) (*DeleteCbsdResponse, error)
	FetchCbsd(ctx context.Context, in *FetchCbsdRequest, opts ...grpc.CallOption) (*FetchCbsdResponse, error)
	ListCbsds(ctx context.Context, in *ListCbsdRequest, opts ...grpc.CallOption) (*ListCbsdResponse, error)
}

type cbsdManagementClient struct {
	cc grpc.ClientConnInterface
}

func NewCbsdManagementClient(cc grpc.ClientConnInterface) CbsdManagementClient {
	return &cbsdManagementClient{cc}
}

func (c *cbsdManagementClient) CreateCbsd(ctx context.Context, in *CreateCbsdRequest, opts ...grpc.CallOption) (*CreateCbsdResponse, error) {
	out := new(CreateCbsdResponse)
	err := c.cc.Invoke(ctx, "/magma.dp.CbsdManagement/CreateCbsd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cbsdManagementClient) UpdateCbsd(ctx context.Context, in *UpdateCbsdRequest, opts ...grpc.CallOption) (*UpdateCbsdResponse, error) {
	out := new(UpdateCbsdResponse)
	err := c.cc.Invoke(ctx, "/magma.dp.CbsdManagement/UpdateCbsd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cbsdManagementClient) DeleteCbsd(ctx context.Context, in *DeleteCbsdRequest, opts ...grpc.CallOption) (*DeleteCbsdResponse, error) {
	out := new(DeleteCbsdResponse)
	err := c.cc.Invoke(ctx, "/magma.dp.CbsdManagement/DeleteCbsd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cbsdManagementClient) FetchCbsd(ctx context.Context, in *FetchCbsdRequest, opts ...grpc.CallOption) (*FetchCbsdResponse, error) {
	out := new(FetchCbsdResponse)
	err := c.cc.Invoke(ctx, "/magma.dp.CbsdManagement/FetchCbsd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cbsdManagementClient) ListCbsds(ctx context.Context, in *ListCbsdRequest, opts ...grpc.CallOption) (*ListCbsdResponse, error) {
	out := new(ListCbsdResponse)
	err := c.cc.Invoke(ctx, "/magma.dp.CbsdManagement/ListCbsds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CbsdManagementServer is the server API for CbsdManagement service.
type CbsdManagementServer interface {
	CreateCbsd(context.Context, *CreateCbsdRequest) (*CreateCbsdResponse, error)
	UpdateCbsd(context.Context, *UpdateCbsdRequest) (*UpdateCbsdResponse, error)
	DeleteCbsd(context.Context, *DeleteCbsdRequest) (*DeleteCbsdResponse, error)
	FetchCbsd(context.Context, *FetchCbsdRequest) (*FetchCbsdResponse, error)
	ListCbsds(context.Context, *ListCbsdRequest) (*ListCbsdResponse, error)
}

// UnimplementedCbsdManagementServer can be embedded to have forward compatible implementations.
type UnimplementedCbsdManagementServer struct {
}

func (*UnimplementedCbsdManagementServer) CreateCbsd(context.Context, *CreateCbsdRequest) (*CreateCbsdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCbsd not implemented")
}
func (*UnimplementedCbsdManagementServer) UpdateCbsd(context.Context, *UpdateCbsdRequest) (*UpdateCbsdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCbsd not implemented")
}
func (*UnimplementedCbsdManagementServer) DeleteCbsd(context.Context, *DeleteCbsdRequest) (*DeleteCbsdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCbsd not implemented")
}
func (*UnimplementedCbsdManagementServer) FetchCbsd(context.Context, *FetchCbsdRequest) (*FetchCbsdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchCbsd not implemented")
}
func (*UnimplementedCbsdManagementServer) ListCbsds(context.Context, *ListCbsdRequest) (*ListCbsdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCbsds not implemented")
}

func RegisterCbsdManagementServer(s *grpc.Server, srv CbsdManagementServer) {
	s.RegisterService(&_CbsdManagement_serviceDesc, srv)
}

func _CbsdManagement_CreateCbsd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCbsdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CbsdManagementServer).CreateCbsd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.dp.CbsdManagement/CreateCbsd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CbsdManagementServer).CreateCbsd(ctx, req.(*CreateCbsdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CbsdManagement_UpdateCbsd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCbsdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CbsdManagementServer).UpdateCbsd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.dp.CbsdManagement/UpdateCbsd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CbsdManagementServer).UpdateCbsd(ctx, req.(*UpdateCbsdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CbsdManagement_DeleteCbsd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCbsdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CbsdManagementServer).DeleteCbsd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.dp.CbsdManagement/DeleteCbsd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CbsdManagementServer).DeleteCbsd(ctx, req.(*DeleteCbsdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CbsdManagement_FetchCbsd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchCbsdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CbsdManagementServer).FetchCbsd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.dp.CbsdManagement/FetchCbsd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CbsdManagementServer).FetchCbsd(ctx, req.(*FetchCbsdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CbsdManagement_ListCbsds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCbsdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CbsdManagementServer).ListCbsds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.dp.CbsdManagement/ListCbsds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CbsdManagementServer).ListCbsds(ctx, req.(*ListCbsdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CbsdManagement_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.dp.CbsdManagement",
	HandlerType: (*CbsdManagementServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCbsd",
			Handler:    _CbsdManagement_CreateCbsd_Handler,
		},
		{
			MethodName: "UpdateCbsd",
			Handler:    _CbsdManagement_UpdateCbsd_Handler,
		},
		{
			MethodName: "DeleteCbsd",
			Handler:    _CbsdManagement_DeleteCbsd_Handler,
		},
		{
			MethodName: "FetchCbsd",
			Handler:    _CbsdManagement_FetchCbsd_Handler,
		},
		{
			MethodName: "ListCbsds",
			Handler:    _CbsdManagement_ListCbsds_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dp/protos/cbsd.proto",
}
