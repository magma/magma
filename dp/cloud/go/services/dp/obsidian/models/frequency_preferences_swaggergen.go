// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// FrequencyPreferences frequency preferences
//
// swagger:model frequency_preferences
type FrequencyPreferences struct {

	// preferred bandwidth of sas channel
	// Required: true
	// Enum: [5 10 15 20]
	BandwidthMhz int64 `json:"bandwidth_mhz"`

	// list of preferred frequencies (midpoints) of sas channels
	// Required: true
	FrequenciesMhz []int64 `json:"frequencies_mhz"`
}

// Validate validates this frequency preferences
func (m *FrequencyPreferences) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBandwidthMhz(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFrequenciesMhz(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var frequencyPreferencesTypeBandwidthMhzPropEnum []interface{}

func init() {
	var res []int64
	if err := json.Unmarshal([]byte(`[5,10,15,20]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		frequencyPreferencesTypeBandwidthMhzPropEnum = append(frequencyPreferencesTypeBandwidthMhzPropEnum, v)
	}
}

// prop value enum
func (m *FrequencyPreferences) validateBandwidthMhzEnum(path, location string, value int64) error {
	if err := validate.EnumCase(path, location, value, frequencyPreferencesTypeBandwidthMhzPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *FrequencyPreferences) validateBandwidthMhz(formats strfmt.Registry) error {

	if err := validate.Required("bandwidth_mhz", "body", int64(m.BandwidthMhz)); err != nil {
		return err
	}

	// value enum
	if err := m.validateBandwidthMhzEnum("bandwidth_mhz", "body", m.BandwidthMhz); err != nil {
		return err
	}

	return nil
}

func (m *FrequencyPreferences) validateFrequenciesMhz(formats strfmt.Registry) error {

	if err := validate.Required("frequencies_mhz", "body", m.FrequenciesMhz); err != nil {
		return err
	}

	for i := 0; i < len(m.FrequenciesMhz); i++ {

		if err := validate.MinimumInt("frequencies_mhz"+"."+strconv.Itoa(i), "body", m.FrequenciesMhz[i], 3555, false); err != nil {
			return err
		}

		if err := validate.MaximumInt("frequencies_mhz"+"."+strconv.Itoa(i), "body", m.FrequenciesMhz[i], 3695, false); err != nil {
			return err
		}

		if err := validate.MultipleOfInt("frequencies_mhz"+"."+strconv.Itoa(i), "body", m.FrequenciesMhz[i], 5); err != nil {
			return err
		}

	}

	return nil
}

// ContextValidate validates this frequency preferences based on context it is used
func (m *FrequencyPreferences) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FrequencyPreferences) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FrequencyPreferences) UnmarshalBinary(b []byte) error {
	var res FrequencyPreferences
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
