//
//Copyright 2022 The Magma Authors.
//
//This source code is licensed under the BSD-style license found in the
//LICENSE file in the root directory of this source tree.
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.10.0
// source: dp/protos/active_mode.proto

package active_mode

import (
	context "context"
	empty "github.com/golang/protobuf/ptypes/empty"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CbsdState int32

const (
	CbsdState_Unregistered CbsdState = 0
	CbsdState_Registered   CbsdState = 1
)

// Enum value maps for CbsdState.
var (
	CbsdState_name = map[int32]string{
		0: "Unregistered",
		1: "Registered",
	}
	CbsdState_value = map[string]int32{
		"Unregistered": 0,
		"Registered":   1,
	}
)

func (x CbsdState) Enum() *CbsdState {
	p := new(CbsdState)
	*p = x
	return p
}

func (x CbsdState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CbsdState) Descriptor() protoreflect.EnumDescriptor {
	return file_dp_protos_active_mode_proto_enumTypes[0].Descriptor()
}

func (CbsdState) Type() protoreflect.EnumType {
	return &file_dp_protos_active_mode_proto_enumTypes[0]
}

func (x CbsdState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CbsdState.Descriptor instead.
func (CbsdState) EnumDescriptor() ([]byte, []int) {
	return file_dp_protos_active_mode_proto_rawDescGZIP(), []int{0}
}

type GrantState int32

const (
	GrantState_Granted    GrantState = 0
	GrantState_Authorized GrantState = 1
	GrantState_Unsync     GrantState = 2
)

// Enum value maps for GrantState.
var (
	GrantState_name = map[int32]string{
		0: "Granted",
		1: "Authorized",
		2: "Unsync",
	}
	GrantState_value = map[string]int32{
		"Granted":    0,
		"Authorized": 1,
		"Unsync":     2,
	}
)

func (x GrantState) Enum() *GrantState {
	p := new(GrantState)
	*p = x
	return p
}

func (x GrantState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GrantState) Descriptor() protoreflect.EnumDescriptor {
	return file_dp_protos_active_mode_proto_enumTypes[1].Descriptor()
}

func (GrantState) Type() protoreflect.EnumType {
	return &file_dp_protos_active_mode_proto_enumTypes[1]
}

func (x GrantState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GrantState.Descriptor instead.
func (GrantState) EnumDescriptor() ([]byte, []int) {
	return file_dp_protos_active_mode_proto_rawDescGZIP(), []int{1}
}

type GetStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStateRequest) Reset() {
	*x = GetStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_active_mode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStateRequest) ProtoMessage() {}

func (x *GetStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_active_mode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStateRequest.ProtoReflect.Descriptor instead.
func (*GetStateRequest) Descriptor() ([]byte, []int) {
	return file_dp_protos_active_mode_proto_rawDescGZIP(), []int{0}
}

type State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cbsds []*Cbsd `protobuf:"bytes,1,rep,name=cbsds,proto3" json:"cbsds,omitempty"`
}

func (x *State) Reset() {
	*x = State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_active_mode_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_active_mode_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_dp_protos_active_mode_proto_rawDescGZIP(), []int{1}
}

func (x *State) GetCbsds() []*Cbsd {
	if x != nil {
		return x.Cbsds
	}
	return nil
}

type Cbsd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId            string                `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FccId             string                `protobuf:"bytes,3,opt,name=fcc_id,json=fccId,proto3" json:"fcc_id,omitempty"`
	SerialNumber      string                `protobuf:"bytes,4,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	State             CbsdState             `protobuf:"varint,5,opt,name=state,proto3,enum=CbsdState" json:"state,omitempty"`
	DesiredState      CbsdState             `protobuf:"varint,6,opt,name=desired_state,json=desiredState,proto3,enum=CbsdState" json:"desired_state,omitempty"`
	Grants            []*Grant              `protobuf:"bytes,7,rep,name=grants,proto3" json:"grants,omitempty"`
	Channels          []*Channel            `protobuf:"bytes,8,rep,name=channels,proto3" json:"channels,omitempty"`
	LastSeenTimestamp int64                 `protobuf:"varint,9,opt,name=last_seen_timestamp,json=lastSeenTimestamp,proto3" json:"last_seen_timestamp,omitempty"`
	GrantAttempts     int32                 `protobuf:"varint,10,opt,name=grant_attempts,json=grantAttempts,proto3" json:"grant_attempts,omitempty"`
	EirpCapabilities  *EirpCapabilities     `protobuf:"bytes,11,opt,name=eirp_capabilities,json=eirpCapabilities,proto3" json:"eirp_capabilities,omitempty"`
	DbData            *DatabaseCbsd         `protobuf:"bytes,12,opt,name=db_data,json=dbData,proto3" json:"db_data,omitempty"`
	Preferences       *FrequencyPreferences `protobuf:"bytes,13,opt,name=preferences,proto3" json:"preferences,omitempty"`
}

func (x *Cbsd) Reset() {
	*x = Cbsd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_active_mode_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cbsd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cbsd) ProtoMessage() {}

func (x *Cbsd) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_active_mode_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cbsd.ProtoReflect.Descriptor instead.
func (*Cbsd) Descriptor() ([]byte, []int) {
	return file_dp_protos_active_mode_proto_rawDescGZIP(), []int{2}
}

func (x *Cbsd) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Cbsd) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Cbsd) GetFccId() string {
	if x != nil {
		return x.FccId
	}
	return ""
}

func (x *Cbsd) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *Cbsd) GetState() CbsdState {
	if x != nil {
		return x.State
	}
	return CbsdState_Unregistered
}

func (x *Cbsd) GetDesiredState() CbsdState {
	if x != nil {
		return x.DesiredState
	}
	return CbsdState_Unregistered
}

func (x *Cbsd) GetGrants() []*Grant {
	if x != nil {
		return x.Grants
	}
	return nil
}

func (x *Cbsd) GetChannels() []*Channel {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *Cbsd) GetLastSeenTimestamp() int64 {
	if x != nil {
		return x.LastSeenTimestamp
	}
	return 0
}

func (x *Cbsd) GetGrantAttempts() int32 {
	if x != nil {
		return x.GrantAttempts
	}
	return 0
}

func (x *Cbsd) GetEirpCapabilities() *EirpCapabilities {
	if x != nil {
		return x.EirpCapabilities
	}
	return nil
}

func (x *Cbsd) GetDbData() *DatabaseCbsd {
	if x != nil {
		return x.DbData
	}
	return nil
}

func (x *Cbsd) GetPreferences() *FrequencyPreferences {
	if x != nil {
		return x.Preferences
	}
	return nil
}

type Grant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State                  GrantState `protobuf:"varint,2,opt,name=state,proto3,enum=GrantState" json:"state,omitempty"`
	HeartbeatIntervalSec   int64      `protobuf:"varint,3,opt,name=heartbeat_interval_sec,json=heartbeatIntervalSec,proto3" json:"heartbeat_interval_sec,omitempty"`
	LastHeartbeatTimestamp int64      `protobuf:"varint,4,opt,name=last_heartbeat_timestamp,json=lastHeartbeatTimestamp,proto3" json:"last_heartbeat_timestamp,omitempty"`
}

func (x *Grant) Reset() {
	*x = Grant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_active_mode_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Grant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Grant) ProtoMessage() {}

func (x *Grant) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_active_mode_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Grant.ProtoReflect.Descriptor instead.
func (*Grant) Descriptor() ([]byte, []int) {
	return file_dp_protos_active_mode_proto_rawDescGZIP(), []int{3}
}

func (x *Grant) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Grant) GetState() GrantState {
	if x != nil {
		return x.State
	}
	return GrantState_Granted
}

func (x *Grant) GetHeartbeatIntervalSec() int64 {
	if x != nil {
		return x.HeartbeatIntervalSec
	}
	return 0
}

func (x *Grant) GetLastHeartbeatTimestamp() int64 {
	if x != nil {
		return x.LastHeartbeatTimestamp
	}
	return 0
}

type Channel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LowFrequencyHz  int64                `protobuf:"varint,1,opt,name=low_frequency_hz,json=lowFrequencyHz,proto3" json:"low_frequency_hz,omitempty"`
	HighFrequencyHz int64                `protobuf:"varint,2,opt,name=high_frequency_hz,json=highFrequencyHz,proto3" json:"high_frequency_hz,omitempty"`
	MaxEirp         *wrappers.FloatValue `protobuf:"bytes,3,opt,name=max_eirp,json=maxEirp,proto3" json:"max_eirp,omitempty"`
}

func (x *Channel) Reset() {
	*x = Channel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_active_mode_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Channel) ProtoMessage() {}

func (x *Channel) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_active_mode_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Channel.ProtoReflect.Descriptor instead.
func (*Channel) Descriptor() ([]byte, []int) {
	return file_dp_protos_active_mode_proto_rawDescGZIP(), []int{4}
}

func (x *Channel) GetLowFrequencyHz() int64 {
	if x != nil {
		return x.LowFrequencyHz
	}
	return 0
}

func (x *Channel) GetHighFrequencyHz() int64 {
	if x != nil {
		return x.HighFrequencyHz
	}
	return 0
}

func (x *Channel) GetMaxEirp() *wrappers.FloatValue {
	if x != nil {
		return x.MaxEirp
	}
	return nil
}

type EirpCapabilities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinPower      float32 `protobuf:"fixed32,1,opt,name=min_power,json=minPower,proto3" json:"min_power,omitempty"`
	MaxPower      float32 `protobuf:"fixed32,2,opt,name=max_power,json=maxPower,proto3" json:"max_power,omitempty"`
	AntennaGain   float32 `protobuf:"fixed32,3,opt,name=antenna_gain,json=antennaGain,proto3" json:"antenna_gain,omitempty"`
	NumberOfPorts int32   `protobuf:"varint,4,opt,name=number_of_ports,json=numberOfPorts,proto3" json:"number_of_ports,omitempty"`
}

func (x *EirpCapabilities) Reset() {
	*x = EirpCapabilities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_active_mode_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EirpCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EirpCapabilities) ProtoMessage() {}

func (x *EirpCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_active_mode_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EirpCapabilities.ProtoReflect.Descriptor instead.
func (*EirpCapabilities) Descriptor() ([]byte, []int) {
	return file_dp_protos_active_mode_proto_rawDescGZIP(), []int{5}
}

func (x *EirpCapabilities) GetMinPower() float32 {
	if x != nil {
		return x.MinPower
	}
	return 0
}

func (x *EirpCapabilities) GetMaxPower() float32 {
	if x != nil {
		return x.MaxPower
	}
	return 0
}

func (x *EirpCapabilities) GetAntennaGain() float32 {
	if x != nil {
		return x.AntennaGain
	}
	return 0
}

func (x *EirpCapabilities) GetNumberOfPorts() int32 {
	if x != nil {
		return x.NumberOfPorts
	}
	return 0
}

type DatabaseCbsd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ShouldDeregister bool  `protobuf:"varint,2,opt,name=should_deregister,json=shouldDeregister,proto3" json:"should_deregister,omitempty"`
	IsDeleted        bool  `protobuf:"varint,3,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
}

func (x *DatabaseCbsd) Reset() {
	*x = DatabaseCbsd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_active_mode_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseCbsd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseCbsd) ProtoMessage() {}

func (x *DatabaseCbsd) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_active_mode_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseCbsd.ProtoReflect.Descriptor instead.
func (*DatabaseCbsd) Descriptor() ([]byte, []int) {
	return file_dp_protos_active_mode_proto_rawDescGZIP(), []int{6}
}

func (x *DatabaseCbsd) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DatabaseCbsd) GetShouldDeregister() bool {
	if x != nil {
		return x.ShouldDeregister
	}
	return false
}

func (x *DatabaseCbsd) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

type FrequencyPreferences struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BandwidthMhz   int32   `protobuf:"varint,1,opt,name=bandwidth_mhz,json=bandwidthMhz,proto3" json:"bandwidth_mhz,omitempty"`
	FrequenciesMhz []int32 `protobuf:"varint,2,rep,packed,name=frequencies_mhz,json=frequenciesMhz,proto3" json:"frequencies_mhz,omitempty"`
}

func (x *FrequencyPreferences) Reset() {
	*x = FrequencyPreferences{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_active_mode_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrequencyPreferences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrequencyPreferences) ProtoMessage() {}

func (x *FrequencyPreferences) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_active_mode_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrequencyPreferences.ProtoReflect.Descriptor instead.
func (*FrequencyPreferences) Descriptor() ([]byte, []int) {
	return file_dp_protos_active_mode_proto_rawDescGZIP(), []int{7}
}

func (x *FrequencyPreferences) GetBandwidthMhz() int32 {
	if x != nil {
		return x.BandwidthMhz
	}
	return 0
}

func (x *FrequencyPreferences) GetFrequenciesMhz() []int32 {
	if x != nil {
		return x.FrequenciesMhz
	}
	return nil
}

type DeleteCbsdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCbsdRequest) Reset() {
	*x = DeleteCbsdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_active_mode_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCbsdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCbsdRequest) ProtoMessage() {}

func (x *DeleteCbsdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_active_mode_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCbsdRequest.ProtoReflect.Descriptor instead.
func (*DeleteCbsdRequest) Descriptor() ([]byte, []int) {
	return file_dp_protos_active_mode_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteCbsdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AcknowledgeCbsdUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AcknowledgeCbsdUpdateRequest) Reset() {
	*x = AcknowledgeCbsdUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dp_protos_active_mode_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcknowledgeCbsdUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeCbsdUpdateRequest) ProtoMessage() {}

func (x *AcknowledgeCbsdUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dp_protos_active_mode_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeCbsdUpdateRequest.ProtoReflect.Descriptor instead.
func (*AcknowledgeCbsdUpdateRequest) Descriptor() ([]byte, []int) {
	return file_dp_protos_active_mode_proto_rawDescGZIP(), []int{9}
}

func (x *AcknowledgeCbsdUpdateRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_dp_protos_active_mode_proto protoreflect.FileDescriptor

var file_dp_protos_active_mode_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x64, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x24, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x63, 0x62, 0x73, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x43, 0x62, 0x73, 0x64, 0x52, 0x05, 0x63, 0x62,
	0x73, 0x64, 0x73, 0x22, 0xfc, 0x03, 0x0a, 0x04, 0x43, 0x62, 0x73, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x66, 0x63, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x63, 0x63, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0a, 0x2e, 0x43, 0x62, 0x73, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x43, 0x62, 0x73,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x06, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x73, 0x12, 0x3e, 0x0a, 0x11, 0x65, 0x69, 0x72, 0x70, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x45,
	0x69, 0x72, 0x70, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52,
	0x10, 0x65, 0x69, 0x72, 0x70, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x26, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x62, 0x73,
	0x64, 0x52, 0x06, 0x64, 0x62, 0x44, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x0b, 0x70, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x05, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x34, 0x0a, 0x16, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x14, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x53, 0x65, 0x63, 0x12, 0x38, 0x0a, 0x18, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x68, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22,
	0x97, 0x01, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x6c,
	0x6f, 0x77, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x68, 0x7a, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x6f, 0x77, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x79, 0x48, 0x7a, 0x12, 0x2a, 0x0a, 0x11, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x66, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x68, 0x7a, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x68, 0x69, 0x67, 0x68, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x48,
	0x7a, 0x12, 0x36, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x65, 0x69, 0x72, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x07, 0x6d, 0x61, 0x78, 0x45, 0x69, 0x72, 0x70, 0x22, 0x97, 0x01, 0x0a, 0x10, 0x45, 0x69,
	0x72, 0x70, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x61, 0x78, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x6d, 0x61, 0x78, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6e, 0x74, 0x65,
	0x6e, 0x6e, 0x61, 0x5f, 0x67, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b,
	0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x47, 0x61, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x50, 0x6f,
	0x72, 0x74, 0x73, 0x22, 0x6a, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43,
	0x62, 0x73, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x5f, 0x64, 0x65,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x44, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22,
	0x64, 0x0a, 0x14, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x61, 0x6e, 0x64, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x5f, 0x6d, 0x68, 0x7a, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x4d, 0x68, 0x7a, 0x12, 0x27, 0x0a, 0x0f,
	0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x5f, 0x6d, 0x68, 0x7a, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x4d, 0x68, 0x7a, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x62, 0x73, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x1c, 0x41, 0x63,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x43, 0x62, 0x73, 0x64, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x2a, 0x2d, 0x0a, 0x09, 0x43, 0x62,
	0x73, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x6e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x10, 0x01, 0x2a, 0x35, 0x0a, 0x0a, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x65, 0x64, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x64, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x6e, 0x73, 0x79, 0x6e, 0x63, 0x10, 0x02,
	0x32, 0xcc, 0x01, 0x0a, 0x14, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x06, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x00, 0x12, 0x3a, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x62, 0x73, 0x64, 0x12,
	0x12, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x62, 0x73, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a,
	0x15, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x43, 0x62, 0x73, 0x64,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x43, 0x62, 0x73, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42,
	0x3d, 0x5a, 0x3b, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2f, 0x64, 0x70, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dp_protos_active_mode_proto_rawDescOnce sync.Once
	file_dp_protos_active_mode_proto_rawDescData = file_dp_protos_active_mode_proto_rawDesc
)

func file_dp_protos_active_mode_proto_rawDescGZIP() []byte {
	file_dp_protos_active_mode_proto_rawDescOnce.Do(func() {
		file_dp_protos_active_mode_proto_rawDescData = protoimpl.X.CompressGZIP(file_dp_protos_active_mode_proto_rawDescData)
	})
	return file_dp_protos_active_mode_proto_rawDescData
}

var file_dp_protos_active_mode_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_dp_protos_active_mode_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_dp_protos_active_mode_proto_goTypes = []interface{}{
	(CbsdState)(0),                       // 0: CbsdState
	(GrantState)(0),                      // 1: GrantState
	(*GetStateRequest)(nil),              // 2: GetStateRequest
	(*State)(nil),                        // 3: State
	(*Cbsd)(nil),                         // 4: Cbsd
	(*Grant)(nil),                        // 5: Grant
	(*Channel)(nil),                      // 6: Channel
	(*EirpCapabilities)(nil),             // 7: EirpCapabilities
	(*DatabaseCbsd)(nil),                 // 8: DatabaseCbsd
	(*FrequencyPreferences)(nil),         // 9: FrequencyPreferences
	(*DeleteCbsdRequest)(nil),            // 10: DeleteCbsdRequest
	(*AcknowledgeCbsdUpdateRequest)(nil), // 11: AcknowledgeCbsdUpdateRequest
	(*wrappers.FloatValue)(nil),          // 12: google.protobuf.FloatValue
	(*empty.Empty)(nil),                  // 13: google.protobuf.Empty
}
var file_dp_protos_active_mode_proto_depIdxs = []int32{
	4,  // 0: State.cbsds:type_name -> Cbsd
	0,  // 1: Cbsd.state:type_name -> CbsdState
	0,  // 2: Cbsd.desired_state:type_name -> CbsdState
	5,  // 3: Cbsd.grants:type_name -> Grant
	6,  // 4: Cbsd.channels:type_name -> Channel
	7,  // 5: Cbsd.eirp_capabilities:type_name -> EirpCapabilities
	8,  // 6: Cbsd.db_data:type_name -> DatabaseCbsd
	9,  // 7: Cbsd.preferences:type_name -> FrequencyPreferences
	1,  // 8: Grant.state:type_name -> GrantState
	12, // 9: Channel.max_eirp:type_name -> google.protobuf.FloatValue
	2,  // 10: ActiveModeController.GetState:input_type -> GetStateRequest
	10, // 11: ActiveModeController.DeleteCbsd:input_type -> DeleteCbsdRequest
	11, // 12: ActiveModeController.AcknowledgeCbsdUpdate:input_type -> AcknowledgeCbsdUpdateRequest
	3,  // 13: ActiveModeController.GetState:output_type -> State
	13, // 14: ActiveModeController.DeleteCbsd:output_type -> google.protobuf.Empty
	13, // 15: ActiveModeController.AcknowledgeCbsdUpdate:output_type -> google.protobuf.Empty
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_dp_protos_active_mode_proto_init() }
func file_dp_protos_active_mode_proto_init() {
	if File_dp_protos_active_mode_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dp_protos_active_mode_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_active_mode_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_active_mode_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cbsd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_active_mode_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Grant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_active_mode_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Channel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_active_mode_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EirpCapabilities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_active_mode_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseCbsd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_active_mode_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrequencyPreferences); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_active_mode_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCbsdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dp_protos_active_mode_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcknowledgeCbsdUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dp_protos_active_mode_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dp_protos_active_mode_proto_goTypes,
		DependencyIndexes: file_dp_protos_active_mode_proto_depIdxs,
		EnumInfos:         file_dp_protos_active_mode_proto_enumTypes,
		MessageInfos:      file_dp_protos_active_mode_proto_msgTypes,
	}.Build()
	File_dp_protos_active_mode_proto = out.File
	file_dp_protos_active_mode_proto_rawDesc = nil
	file_dp_protos_active_mode_proto_goTypes = nil
	file_dp_protos_active_mode_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ActiveModeControllerClient is the client API for ActiveModeController service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ActiveModeControllerClient interface {
	GetState(ctx context.Context, in *GetStateRequest, opts ...grpc.CallOption) (*State, error)
	DeleteCbsd(ctx context.Context, in *DeleteCbsdRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	AcknowledgeCbsdUpdate(ctx context.Context, in *AcknowledgeCbsdUpdateRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type activeModeControllerClient struct {
	cc grpc.ClientConnInterface
}

func NewActiveModeControllerClient(cc grpc.ClientConnInterface) ActiveModeControllerClient {
	return &activeModeControllerClient{cc}
}

func (c *activeModeControllerClient) GetState(ctx context.Context, in *GetStateRequest, opts ...grpc.CallOption) (*State, error) {
	out := new(State)
	err := c.cc.Invoke(ctx, "/ActiveModeController/GetState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *activeModeControllerClient) DeleteCbsd(ctx context.Context, in *DeleteCbsdRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/ActiveModeController/DeleteCbsd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *activeModeControllerClient) AcknowledgeCbsdUpdate(ctx context.Context, in *AcknowledgeCbsdUpdateRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/ActiveModeController/AcknowledgeCbsdUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ActiveModeControllerServer is the server API for ActiveModeController service.
type ActiveModeControllerServer interface {
	GetState(context.Context, *GetStateRequest) (*State, error)
	DeleteCbsd(context.Context, *DeleteCbsdRequest) (*empty.Empty, error)
	AcknowledgeCbsdUpdate(context.Context, *AcknowledgeCbsdUpdateRequest) (*empty.Empty, error)
}

// UnimplementedActiveModeControllerServer can be embedded to have forward compatible implementations.
type UnimplementedActiveModeControllerServer struct {
}

func (*UnimplementedActiveModeControllerServer) GetState(context.Context, *GetStateRequest) (*State, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetState not implemented")
}
func (*UnimplementedActiveModeControllerServer) DeleteCbsd(context.Context, *DeleteCbsdRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCbsd not implemented")
}
func (*UnimplementedActiveModeControllerServer) AcknowledgeCbsdUpdate(context.Context, *AcknowledgeCbsdUpdateRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcknowledgeCbsdUpdate not implemented")
}

func RegisterActiveModeControllerServer(s *grpc.Server, srv ActiveModeControllerServer) {
	s.RegisterService(&_ActiveModeController_serviceDesc, srv)
}

func _ActiveModeController_GetState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActiveModeControllerServer).GetState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ActiveModeController/GetState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActiveModeControllerServer).GetState(ctx, req.(*GetStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActiveModeController_DeleteCbsd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCbsdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActiveModeControllerServer).DeleteCbsd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ActiveModeController/DeleteCbsd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActiveModeControllerServer).DeleteCbsd(ctx, req.(*DeleteCbsdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActiveModeController_AcknowledgeCbsdUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcknowledgeCbsdUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActiveModeControllerServer).AcknowledgeCbsdUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ActiveModeController/AcknowledgeCbsdUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActiveModeControllerServer).AcknowledgeCbsdUpdate(ctx, req.(*AcknowledgeCbsdUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ActiveModeController_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ActiveModeController",
	HandlerType: (*ActiveModeControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetState",
			Handler:    _ActiveModeController_GetState_Handler,
		},
		{
			MethodName: "DeleteCbsd",
			Handler:    _ActiveModeController_DeleteCbsd_Handler,
		},
		{
			MethodName: "AcknowledgeCbsdUpdate",
			Handler:    _ActiveModeController_AcknowledgeCbsdUpdate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dp/protos/active_mode.proto",
}
