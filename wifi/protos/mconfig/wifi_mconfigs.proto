/*
Copyright 2020 The Magma Authors.

This source code is licensed under the BSD-style license found in the
LICENSE file in the root directory of this source tree.

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package magma.mconfig;
option go_package = "magma/wifi/cloud/go/protos/mconfig";

//------------------------------------------------------------------------------
// Wifi configs
//------------------------------------------------------------------------------
message Hostapd {
    // SSID of the wifi network
    string ssid = 1;
    // Password of the network
    string password = 2;
    // Virtual Lighthouse SSID
    string vl_ssid = 3;
    // Virtual Lighthouse auth server params
    string vl_auth_server_addr = 4;
    int32 vl_auth_server_port = 5;
    string vl_auth_server_shared_secret = 6;
    // disable wifi
    bool wifi_disabled = 7;
    // client channel
    string client_channel = 8;
    // xwf info
    bool xwf_enabled = 9;

    // for streamer - should be left unused by gateway
    bool use_override_ssid = 10;
    HostapdOverrideableConfigs base_configs = 11;
}

// Base hostapd configuration dervied from the mesh configs. This is here so
// the mconfig stramer knows what values to revert to if the gateway overrides
// are deleted
message HostapdOverrideableConfigs {
    string ssid = 1;
    string password = 2;
    bool xwf_enabled = 3;
}

message Linkstatsd {
    // ping stats configuration
    repeated string ping_host_list = 1;
    int32 ping_num_packets = 2;
    int32 ping_timeout_secs = 3;
}

message Xwfchilli {
    // expresswifi configs
    bool xwf_enabled = 1;
    string xwf_radius_server = 2;
    // Contents of xwf.conf
    string xwf_config = 4;
    // DNS IPs for Chilli's DHCP server to hand out
    string xwf_dhcp_dns1 = 5;
    string xwf_dhcp_dns2 = 6;
    // PSK for the RADIUS server
    string xwf_radius_shared_secret = 7;
    // Port number to use for RADIUS auth messages
    int32 xwf_radius_auth_port = 8;
    // Port number to use for RADIUS accounting messages
    int32 xwf_radius_acct_port = 9;
    // PSK for the XWF UAM
    string xwf_uam_secret = 10;
    // XWF parter name as specified in the partner's captive portal url
    // i.e. https://<<xwf_partner_name>>.expresswifi.com/customer/captive_portal/
    string xwf_partner_name = 11;

    // used for NAS
    string network_id = 12;
    string mesh_id = 13;
    string gateway_id = 14;

    // for streamer - should be left unused by gateway
    bool use_override_xwf = 15;
    XwfchilliOverrideableConfigs base_configs = 16;

    // deprecated fields
    repeated string xwf_traffic_classes = 3;
}

// Base XWF configuration derived from the mesh and network configs. This is
// here so the mconfig streamer knows what values to revert to if the gateway
// overrides are disabled
message XwfchilliOverrideableConfigs {
    // expresswifi configs
    bool xwf_enabled = 1;
    string xwf_radius_server = 2;
    // Contents of xwf.conf
    string xwf_config = 3;
    // DNS IPs for Chilli's DHCP server to hand out
    string xwf_dhcp_dns1 = 4;
    string xwf_dhcp_dns2 = 5;
    // PSK for the RADIUS server
    string xwf_radius_shared_secret = 6;
    // Port number to use for RADIUS auth messages
    int32 xwf_radius_auth_port = 7;
    // Port number to use for RADIUS accounting messages
    int32 xwf_radius_acct_port = 8;
    // PSK for the XWF UAM
    string xwf_uam_secret = 9;
    // XWF parter name as specified in the partner's captive portal url
    // i.e. https://<<xwf_partner_name>>.expresswifi.com/customer/captive_portal/
    string xwf_partner_name = 10;
}

message Meshd {
    // fbmeshd configs
    int32 mesh_rssi_threshold = 1;
    string mesh_ssid = 2;
    int32 mesh_frequency = 3;
    string mesh_channel_type = 4;
}

message Openvpn {
    // management vpn configs
    bool mgmt_vpn_enabled = 1;
    string mgmt_vpn_proto = 2;
    string mgmt_vpn_remote = 3;
}

message Openr {
    // open/r configs
    bool openr_enabled = 1;
}

message WifiMetadata {
    // device metadata, not consumed by a service but may be useful to have on the device
    string info = 1;
    double latitude = 2;
    double longitude = 3;
    string network_id = 4;
    string mesh_id = 5;
    string gateway_id = 6;
    repeated string mesh_peer_gateway_ids = 7;
    bool is_production = 8;
}

message WifiProperties {
    string info = 1;
    string network_id = 2;
    string mesh_id = 3;
    string gateway_id = 4;
    repeated string mesh_peer_gateway_ids = 5;
    map<string, string> network_props = 6;
    map<string, string> mesh_props = 7;
    map<string, string> gateway_props = 8;
}

