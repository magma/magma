// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CwfSubscriberDirectoryRecord CWF subscriber directory record
// swagger:model cwf_subscriber_directory_record
type CwfSubscriberDirectoryRecord struct {

	// ipv4 addr
	// Format: ipv4
	IPV4Addr strfmt.IPv4 `json:"ipv4_addr,omitempty"`

	// location history
	// Required: true
	LocationHistory []string `json:"location_history"`

	// mac addr
	MacAddr string `json:"mac_addr,omitempty"`
}

// Validate validates this cwf subscriber directory record
func (m *CwfSubscriberDirectoryRecord) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIPV4Addr(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLocationHistory(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CwfSubscriberDirectoryRecord) validateIPV4Addr(formats strfmt.Registry) error {

	if swag.IsZero(m.IPV4Addr) { // not required
		return nil
	}

	if err := validate.FormatOf("ipv4_addr", "body", "ipv4", m.IPV4Addr.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *CwfSubscriberDirectoryRecord) validateLocationHistory(formats strfmt.Registry) error {

	if err := validate.Required("location_history", "body", m.LocationHistory); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CwfSubscriberDirectoryRecord) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CwfSubscriberDirectoryRecord) UnmarshalBinary(b []byte) error {
	var res CwfSubscriberDirectoryRecord
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
