// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orc8r/protos/tenants.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetTenantRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTenantRequest) Reset()         { *m = GetTenantRequest{} }
func (m *GetTenantRequest) String() string { return proto.CompactTextString(m) }
func (*GetTenantRequest) ProtoMessage()    {}
func (*GetTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fa0ed566a19fde, []int{0}
}

func (m *GetTenantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTenantRequest.Unmarshal(m, b)
}
func (m *GetTenantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTenantRequest.Marshal(b, m, deterministic)
}
func (m *GetTenantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTenantRequest.Merge(m, src)
}
func (m *GetTenantRequest) XXX_Size() int {
	return xxx_messageInfo_GetTenantRequest.Size(m)
}
func (m *GetTenantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTenantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTenantRequest proto.InternalMessageInfo

func (m *GetTenantRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Tenant struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Networks             []string `protobuf:"bytes,2,rep,name=networks,proto3" json:"networks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tenant) Reset()         { *m = Tenant{} }
func (m *Tenant) String() string { return proto.CompactTextString(m) }
func (*Tenant) ProtoMessage()    {}
func (*Tenant) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fa0ed566a19fde, []int{1}
}

func (m *Tenant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tenant.Unmarshal(m, b)
}
func (m *Tenant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tenant.Marshal(b, m, deterministic)
}
func (m *Tenant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tenant.Merge(m, src)
}
func (m *Tenant) XXX_Size() int {
	return xxx_messageInfo_Tenant.Size(m)
}
func (m *Tenant) XXX_DiscardUnknown() {
	xxx_messageInfo_Tenant.DiscardUnknown(m)
}

var xxx_messageInfo_Tenant proto.InternalMessageInfo

func (m *Tenant) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tenant) GetNetworks() []string {
	if m != nil {
		return m.Networks
	}
	return nil
}

type TenantList struct {
	Tenants              []*IDAndTenant `protobuf:"bytes,1,rep,name=tenants,proto3" json:"tenants,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TenantList) Reset()         { *m = TenantList{} }
func (m *TenantList) String() string { return proto.CompactTextString(m) }
func (*TenantList) ProtoMessage()    {}
func (*TenantList) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fa0ed566a19fde, []int{2}
}

func (m *TenantList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TenantList.Unmarshal(m, b)
}
func (m *TenantList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TenantList.Marshal(b, m, deterministic)
}
func (m *TenantList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TenantList.Merge(m, src)
}
func (m *TenantList) XXX_Size() int {
	return xxx_messageInfo_TenantList.Size(m)
}
func (m *TenantList) XXX_DiscardUnknown() {
	xxx_messageInfo_TenantList.DiscardUnknown(m)
}

var xxx_messageInfo_TenantList proto.InternalMessageInfo

func (m *TenantList) GetTenants() []*IDAndTenant {
	if m != nil {
		return m.Tenants
	}
	return nil
}

type IDAndTenant struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Tenant               *Tenant  `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IDAndTenant) Reset()         { *m = IDAndTenant{} }
func (m *IDAndTenant) String() string { return proto.CompactTextString(m) }
func (*IDAndTenant) ProtoMessage()    {}
func (*IDAndTenant) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fa0ed566a19fde, []int{3}
}

func (m *IDAndTenant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IDAndTenant.Unmarshal(m, b)
}
func (m *IDAndTenant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IDAndTenant.Marshal(b, m, deterministic)
}
func (m *IDAndTenant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IDAndTenant.Merge(m, src)
}
func (m *IDAndTenant) XXX_Size() int {
	return xxx_messageInfo_IDAndTenant.Size(m)
}
func (m *IDAndTenant) XXX_DiscardUnknown() {
	xxx_messageInfo_IDAndTenant.DiscardUnknown(m)
}

var xxx_messageInfo_IDAndTenant proto.InternalMessageInfo

func (m *IDAndTenant) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *IDAndTenant) GetTenant() *Tenant {
	if m != nil {
		return m.Tenant
	}
	return nil
}

type GetControlProxyRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetControlProxyRequest) Reset()         { *m = GetControlProxyRequest{} }
func (m *GetControlProxyRequest) String() string { return proto.CompactTextString(m) }
func (*GetControlProxyRequest) ProtoMessage()    {}
func (*GetControlProxyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fa0ed566a19fde, []int{4}
}

func (m *GetControlProxyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetControlProxyRequest.Unmarshal(m, b)
}
func (m *GetControlProxyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetControlProxyRequest.Marshal(b, m, deterministic)
}
func (m *GetControlProxyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetControlProxyRequest.Merge(m, src)
}
func (m *GetControlProxyRequest) XXX_Size() int {
	return xxx_messageInfo_GetControlProxyRequest.Size(m)
}
func (m *GetControlProxyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetControlProxyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetControlProxyRequest proto.InternalMessageInfo

func (m *GetControlProxyRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetControlProxyResponse struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ControlProxy         string   `protobuf:"bytes,2,opt,name=controlProxy,proto3" json:"controlProxy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetControlProxyResponse) Reset()         { *m = GetControlProxyResponse{} }
func (m *GetControlProxyResponse) String() string { return proto.CompactTextString(m) }
func (*GetControlProxyResponse) ProtoMessage()    {}
func (*GetControlProxyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fa0ed566a19fde, []int{5}
}

func (m *GetControlProxyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetControlProxyResponse.Unmarshal(m, b)
}
func (m *GetControlProxyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetControlProxyResponse.Marshal(b, m, deterministic)
}
func (m *GetControlProxyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetControlProxyResponse.Merge(m, src)
}
func (m *GetControlProxyResponse) XXX_Size() int {
	return xxx_messageInfo_GetControlProxyResponse.Size(m)
}
func (m *GetControlProxyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetControlProxyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetControlProxyResponse proto.InternalMessageInfo

func (m *GetControlProxyResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetControlProxyResponse) GetControlProxy() string {
	if m != nil {
		return m.ControlProxy
	}
	return ""
}

type CreateOrUpdateControlProxyRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ControlProxy         string   `protobuf:"bytes,2,opt,name=controlProxy,proto3" json:"controlProxy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateOrUpdateControlProxyRequest) Reset()         { *m = CreateOrUpdateControlProxyRequest{} }
func (m *CreateOrUpdateControlProxyRequest) String() string { return proto.CompactTextString(m) }
func (*CreateOrUpdateControlProxyRequest) ProtoMessage()    {}
func (*CreateOrUpdateControlProxyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fa0ed566a19fde, []int{6}
}

func (m *CreateOrUpdateControlProxyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOrUpdateControlProxyRequest.Unmarshal(m, b)
}
func (m *CreateOrUpdateControlProxyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOrUpdateControlProxyRequest.Marshal(b, m, deterministic)
}
func (m *CreateOrUpdateControlProxyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOrUpdateControlProxyRequest.Merge(m, src)
}
func (m *CreateOrUpdateControlProxyRequest) XXX_Size() int {
	return xxx_messageInfo_CreateOrUpdateControlProxyRequest.Size(m)
}
func (m *CreateOrUpdateControlProxyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOrUpdateControlProxyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOrUpdateControlProxyRequest proto.InternalMessageInfo

func (m *CreateOrUpdateControlProxyRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreateOrUpdateControlProxyRequest) GetControlProxy() string {
	if m != nil {
		return m.ControlProxy
	}
	return ""
}

type CreateOrUpdateControlProxyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateOrUpdateControlProxyResponse) Reset()         { *m = CreateOrUpdateControlProxyResponse{} }
func (m *CreateOrUpdateControlProxyResponse) String() string { return proto.CompactTextString(m) }
func (*CreateOrUpdateControlProxyResponse) ProtoMessage()    {}
func (*CreateOrUpdateControlProxyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fa0ed566a19fde, []int{7}
}

func (m *CreateOrUpdateControlProxyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOrUpdateControlProxyResponse.Unmarshal(m, b)
}
func (m *CreateOrUpdateControlProxyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOrUpdateControlProxyResponse.Marshal(b, m, deterministic)
}
func (m *CreateOrUpdateControlProxyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOrUpdateControlProxyResponse.Merge(m, src)
}
func (m *CreateOrUpdateControlProxyResponse) XXX_Size() int {
	return xxx_messageInfo_CreateOrUpdateControlProxyResponse.Size(m)
}
func (m *CreateOrUpdateControlProxyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOrUpdateControlProxyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOrUpdateControlProxyResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetTenantRequest)(nil), "magma.orc8r.GetTenantRequest")
	proto.RegisterType((*Tenant)(nil), "magma.orc8r.Tenant")
	proto.RegisterType((*TenantList)(nil), "magma.orc8r.TenantList")
	proto.RegisterType((*IDAndTenant)(nil), "magma.orc8r.IDAndTenant")
	proto.RegisterType((*GetControlProxyRequest)(nil), "magma.orc8r.GetControlProxyRequest")
	proto.RegisterType((*GetControlProxyResponse)(nil), "magma.orc8r.GetControlProxyResponse")
	proto.RegisterType((*CreateOrUpdateControlProxyRequest)(nil), "magma.orc8r.CreateOrUpdateControlProxyRequest")
	proto.RegisterType((*CreateOrUpdateControlProxyResponse)(nil), "magma.orc8r.CreateOrUpdateControlProxyResponse")
}

func init() { proto.RegisterFile("orc8r/protos/tenants.proto", fileDescriptor_e7fa0ed566a19fde) }

var fileDescriptor_e7fa0ed566a19fde = []byte{
	// 438 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0x5b, 0x8b, 0xd3, 0x40,
	0x14, 0xc7, 0x7b, 0x59, 0xaa, 0x39, 0xad, 0xab, 0x1e, 0xc1, 0xcd, 0x8e, 0x08, 0x75, 0xdc, 0x87,
	0x80, 0x90, 0x40, 0x7d, 0x59, 0x84, 0x05, 0xbb, 0xbb, 0x50, 0x14, 0x45, 0xc9, 0x7a, 0x01, 0x1f,
	0x84, 0x6c, 0x72, 0x58, 0x82, 0xc9, 0x4c, 0x9d, 0x19, 0x6f, 0x4f, 0x7e, 0x27, 0x3f, 0xa1, 0x38,
	0x93, 0x0d, 0x4d, 0x9a, 0xee, 0xd6, 0xa7, 0x76, 0xa6, 0xbf, 0xf3, 0xef, 0x6f, 0xe6, 0x1c, 0x06,
	0x98, 0x54, 0xe9, 0xa1, 0x8a, 0x96, 0x4a, 0x1a, 0xa9, 0x23, 0x43, 0x22, 0x11, 0x46, 0x87, 0x76,
	0x89, 0xe3, 0x32, 0xb9, 0x28, 0x93, 0xd0, 0x12, 0x6c, 0xbf, 0x01, 0xa6, 0xb2, 0x2c, 0xa5, 0x70,
	0x1c, 0xe7, 0x70, 0x67, 0x41, 0xe6, 0x9d, 0xad, 0x8d, 0xe9, 0xeb, 0x37, 0xd2, 0x06, 0x77, 0x61,
	0x90, 0x67, 0x7e, 0x7f, 0xda, 0x0f, 0x86, 0xf1, 0x20, 0xcf, 0xf8, 0x21, 0x8c, 0x1c, 0x80, 0x08,
	0x3b, 0x22, 0x29, 0xc9, 0xfe, 0xe6, 0xc5, 0xf6, 0x3b, 0x32, 0xb8, 0x29, 0xc8, 0xfc, 0x90, 0xea,
	0x8b, 0xf6, 0x07, 0xd3, 0x61, 0xe0, 0xc5, 0xf5, 0x9a, 0x3f, 0x07, 0x70, 0x95, 0xaf, 0x72, 0x6d,
	0x70, 0x06, 0x37, 0x2a, 0x49, 0xbf, 0x3f, 0x1d, 0x06, 0xe3, 0x99, 0x1f, 0xae, 0x58, 0x86, 0x2f,
	0x4e, 0xe7, 0x22, 0xab, 0x4c, 0x2e, 0x41, 0xfe, 0x12, 0xc6, 0x2b, 0xfb, 0x6d, 0x35, 0x7c, 0x02,
	0x23, 0x47, 0xfa, 0x83, 0x69, 0x3f, 0x18, 0xcf, 0xee, 0x35, 0x12, 0xab, 0xb0, 0x0a, 0xe1, 0x01,
	0xdc, 0x5f, 0x90, 0x39, 0x91, 0xc2, 0x28, 0x59, 0xbc, 0x55, 0xf2, 0xe7, 0xaf, 0x4d, 0x27, 0x7e,
	0x0d, 0x7b, 0x6b, 0xa4, 0x5e, 0x4a, 0xa1, 0x69, 0xcd, 0x80, 0xc3, 0x24, 0x5d, 0xe1, 0xac, 0x87,
	0x17, 0x37, 0xf6, 0xf8, 0x47, 0x78, 0x74, 0xa2, 0x28, 0x31, 0xf4, 0x46, 0xbd, 0x5f, 0x66, 0x89,
	0xa1, 0x2d, 0x1c, 0xb6, 0x0a, 0x3e, 0x00, 0x7e, 0x55, 0xb0, 0x53, 0x9e, 0xfd, 0xd9, 0x81, 0x5d,
	0x77, 0x15, 0xfa, 0x8c, 0xd4, 0xf7, 0x3c, 0x25, 0x3c, 0x82, 0x5b, 0x0b, 0x32, 0xf3, 0xa2, 0xa8,
	0xf6, 0xf1, 0x6e, 0xe3, 0xe2, 0x3e, 0xc8, 0x3c, 0x63, 0x7b, 0x1d, 0x77, 0xf9, 0xaf, 0x8f, 0xbc,
	0x87, 0x73, 0xf0, 0xea, 0xa9, 0xc1, 0x87, 0x0d, 0xae, 0x3d, 0x4d, 0xac, 0xab, 0x25, 0xbc, 0x87,
	0x47, 0x30, 0x71, 0xea, 0x55, 0xca, 0xc6, 0x59, 0x60, 0xeb, 0x6a, 0xbc, 0x87, 0xcf, 0xc0, 0x3b,
	0xab, 0x0d, 0xfe, 0xb3, 0xf6, 0x18, 0x26, 0xa7, 0x54, 0x50, 0xfd, 0xd7, 0xd7, 0x1c, 0xa0, 0x33,
	0xe3, 0x33, 0xdc, 0x6e, 0x4d, 0x08, 0x3e, 0x6e, 0xc7, 0x74, 0x74, 0x99, 0x1d, 0x5c, 0x0d, 0xb9,
	0x8e, 0xf1, 0x1e, 0xfe, 0x06, 0xb6, 0xb9, 0xb3, 0x18, 0x36, 0x52, 0xae, 0x9d, 0x2d, 0x16, 0x6d,
	0xcd, 0x5f, 0x0a, 0x1c, 0x3f, 0xf8, 0xb4, 0x6f, 0x6b, 0x22, 0xf7, 0x76, 0x14, 0xf9, 0x79, 0x74,
	0x21, 0xab, 0x27, 0xe4, 0x7c, 0x64, 0x3f, 0x9f, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xc4, 0x58,
	0x57, 0x08, 0x82, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TenantsServiceClient is the client API for TenantsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TenantsServiceClient interface {
	GetAllTenants(ctx context.Context, in *Void, opts ...grpc.CallOption) (*TenantList, error)
	GetTenant(ctx context.Context, in *GetTenantRequest, opts ...grpc.CallOption) (*Tenant, error)
	CreateTenant(ctx context.Context, in *IDAndTenant, opts ...grpc.CallOption) (*Void, error)
	SetTenant(ctx context.Context, in *IDAndTenant, opts ...grpc.CallOption) (*Void, error)
	DeleteTenant(ctx context.Context, in *GetTenantRequest, opts ...grpc.CallOption) (*Void, error)
	GetControlProxy(ctx context.Context, in *GetControlProxyRequest, opts ...grpc.CallOption) (*GetControlProxyResponse, error)
	CreateOrUpdateControlProxy(ctx context.Context, in *CreateOrUpdateControlProxyRequest, opts ...grpc.CallOption) (*CreateOrUpdateControlProxyResponse, error)
}

type tenantsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTenantsServiceClient(cc grpc.ClientConnInterface) TenantsServiceClient {
	return &tenantsServiceClient{cc}
}

func (c *tenantsServiceClient) GetAllTenants(ctx context.Context, in *Void, opts ...grpc.CallOption) (*TenantList, error) {
	out := new(TenantList)
	err := c.cc.Invoke(ctx, "/magma.orc8r.TenantsService/GetAllTenants", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantsServiceClient) GetTenant(ctx context.Context, in *GetTenantRequest, opts ...grpc.CallOption) (*Tenant, error) {
	out := new(Tenant)
	err := c.cc.Invoke(ctx, "/magma.orc8r.TenantsService/GetTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantsServiceClient) CreateTenant(ctx context.Context, in *IDAndTenant, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/magma.orc8r.TenantsService/CreateTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantsServiceClient) SetTenant(ctx context.Context, in *IDAndTenant, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/magma.orc8r.TenantsService/SetTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantsServiceClient) DeleteTenant(ctx context.Context, in *GetTenantRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/magma.orc8r.TenantsService/DeleteTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantsServiceClient) GetControlProxy(ctx context.Context, in *GetControlProxyRequest, opts ...grpc.CallOption) (*GetControlProxyResponse, error) {
	out := new(GetControlProxyResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.TenantsService/GetControlProxy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantsServiceClient) CreateOrUpdateControlProxy(ctx context.Context, in *CreateOrUpdateControlProxyRequest, opts ...grpc.CallOption) (*CreateOrUpdateControlProxyResponse, error) {
	out := new(CreateOrUpdateControlProxyResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.TenantsService/CreateOrUpdateControlProxy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TenantsServiceServer is the server API for TenantsService service.
type TenantsServiceServer interface {
	GetAllTenants(context.Context, *Void) (*TenantList, error)
	GetTenant(context.Context, *GetTenantRequest) (*Tenant, error)
	CreateTenant(context.Context, *IDAndTenant) (*Void, error)
	SetTenant(context.Context, *IDAndTenant) (*Void, error)
	DeleteTenant(context.Context, *GetTenantRequest) (*Void, error)
	GetControlProxy(context.Context, *GetControlProxyRequest) (*GetControlProxyResponse, error)
	CreateOrUpdateControlProxy(context.Context, *CreateOrUpdateControlProxyRequest) (*CreateOrUpdateControlProxyResponse, error)
}

// UnimplementedTenantsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTenantsServiceServer struct {
}

func (*UnimplementedTenantsServiceServer) GetAllTenants(ctx context.Context, req *Void) (*TenantList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllTenants not implemented")
}
func (*UnimplementedTenantsServiceServer) GetTenant(ctx context.Context, req *GetTenantRequest) (*Tenant, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTenant not implemented")
}
func (*UnimplementedTenantsServiceServer) CreateTenant(ctx context.Context, req *IDAndTenant) (*Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTenant not implemented")
}
func (*UnimplementedTenantsServiceServer) SetTenant(ctx context.Context, req *IDAndTenant) (*Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTenant not implemented")
}
func (*UnimplementedTenantsServiceServer) DeleteTenant(ctx context.Context, req *GetTenantRequest) (*Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTenant not implemented")
}
func (*UnimplementedTenantsServiceServer) GetControlProxy(ctx context.Context, req *GetControlProxyRequest) (*GetControlProxyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetControlProxy not implemented")
}
func (*UnimplementedTenantsServiceServer) CreateOrUpdateControlProxy(ctx context.Context, req *CreateOrUpdateControlProxyRequest) (*CreateOrUpdateControlProxyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOrUpdateControlProxy not implemented")
}

func RegisterTenantsServiceServer(s *grpc.Server, srv TenantsServiceServer) {
	s.RegisterService(&_TenantsService_serviceDesc, srv)
}

func _TenantsService_GetAllTenants_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantsServiceServer).GetAllTenants(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.TenantsService/GetAllTenants",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantsServiceServer).GetAllTenants(ctx, req.(*Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantsService_GetTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantsServiceServer).GetTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.TenantsService/GetTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantsServiceServer).GetTenant(ctx, req.(*GetTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantsService_CreateTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IDAndTenant)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantsServiceServer).CreateTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.TenantsService/CreateTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantsServiceServer).CreateTenant(ctx, req.(*IDAndTenant))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantsService_SetTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IDAndTenant)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantsServiceServer).SetTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.TenantsService/SetTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantsServiceServer).SetTenant(ctx, req.(*IDAndTenant))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantsService_DeleteTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantsServiceServer).DeleteTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.TenantsService/DeleteTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantsServiceServer).DeleteTenant(ctx, req.(*GetTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantsService_GetControlProxy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetControlProxyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantsServiceServer).GetControlProxy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.TenantsService/GetControlProxy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantsServiceServer).GetControlProxy(ctx, req.(*GetControlProxyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantsService_CreateOrUpdateControlProxy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrUpdateControlProxyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantsServiceServer).CreateOrUpdateControlProxy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.TenantsService/CreateOrUpdateControlProxy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantsServiceServer).CreateOrUpdateControlProxy(ctx, req.(*CreateOrUpdateControlProxyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TenantsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.orc8r.TenantsService",
	HandlerType: (*TenantsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAllTenants",
			Handler:    _TenantsService_GetAllTenants_Handler,
		},
		{
			MethodName: "GetTenant",
			Handler:    _TenantsService_GetTenant_Handler,
		},
		{
			MethodName: "CreateTenant",
			Handler:    _TenantsService_CreateTenant_Handler,
		},
		{
			MethodName: "SetTenant",
			Handler:    _TenantsService_SetTenant_Handler,
		},
		{
			MethodName: "DeleteTenant",
			Handler:    _TenantsService_DeleteTenant_Handler,
		},
		{
			MethodName: "GetControlProxy",
			Handler:    _TenantsService_GetControlProxy_Handler,
		},
		{
			MethodName: "CreateOrUpdateControlProxy",
			Handler:    _TenantsService_CreateOrUpdateControlProxy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orc8r/protos/tenants.proto",
}
