// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orc8r/protos/directoryd.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UpdateRecordRequest struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Location             string            `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Fields               map[string]string `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UpdateRecordRequest) Reset()         { *m = UpdateRecordRequest{} }
func (m *UpdateRecordRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRecordRequest) ProtoMessage()    {}
func (*UpdateRecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f02336ef077163fd, []int{0}
}

func (m *UpdateRecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRecordRequest.Unmarshal(m, b)
}
func (m *UpdateRecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRecordRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRecordRequest.Merge(m, src)
}
func (m *UpdateRecordRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRecordRequest.Size(m)
}
func (m *UpdateRecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRecordRequest proto.InternalMessageInfo

func (m *UpdateRecordRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateRecordRequest) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *UpdateRecordRequest) GetFields() map[string]string {
	if m != nil {
		return m.Fields
	}
	return nil
}

type DirectoryField struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DirectoryField) Reset()         { *m = DirectoryField{} }
func (m *DirectoryField) String() string { return proto.CompactTextString(m) }
func (*DirectoryField) ProtoMessage()    {}
func (*DirectoryField) Descriptor() ([]byte, []int) {
	return fileDescriptor_f02336ef077163fd, []int{1}
}

func (m *DirectoryField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DirectoryField.Unmarshal(m, b)
}
func (m *DirectoryField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DirectoryField.Marshal(b, m, deterministic)
}
func (m *DirectoryField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DirectoryField.Merge(m, src)
}
func (m *DirectoryField) XXX_Size() int {
	return xxx_messageInfo_DirectoryField.Size(m)
}
func (m *DirectoryField) XXX_DiscardUnknown() {
	xxx_messageInfo_DirectoryField.DiscardUnknown(m)
}

var xxx_messageInfo_DirectoryField proto.InternalMessageInfo

func (m *DirectoryField) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DirectoryField) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type DeleteRecordRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRecordRequest) Reset()         { *m = DeleteRecordRequest{} }
func (m *DeleteRecordRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRecordRequest) ProtoMessage()    {}
func (*DeleteRecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f02336ef077163fd, []int{2}
}

func (m *DeleteRecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRecordRequest.Unmarshal(m, b)
}
func (m *DeleteRecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRecordRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRecordRequest.Merge(m, src)
}
func (m *DeleteRecordRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRecordRequest.Size(m)
}
func (m *DeleteRecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRecordRequest proto.InternalMessageInfo

func (m *DeleteRecordRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetDirectoryFieldRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FieldKey             string   `protobuf:"bytes,2,opt,name=field_key,json=fieldKey,proto3" json:"field_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDirectoryFieldRequest) Reset()         { *m = GetDirectoryFieldRequest{} }
func (m *GetDirectoryFieldRequest) String() string { return proto.CompactTextString(m) }
func (*GetDirectoryFieldRequest) ProtoMessage()    {}
func (*GetDirectoryFieldRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f02336ef077163fd, []int{3}
}

func (m *GetDirectoryFieldRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDirectoryFieldRequest.Unmarshal(m, b)
}
func (m *GetDirectoryFieldRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDirectoryFieldRequest.Marshal(b, m, deterministic)
}
func (m *GetDirectoryFieldRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDirectoryFieldRequest.Merge(m, src)
}
func (m *GetDirectoryFieldRequest) XXX_Size() int {
	return xxx_messageInfo_GetDirectoryFieldRequest.Size(m)
}
func (m *GetDirectoryFieldRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDirectoryFieldRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDirectoryFieldRequest proto.InternalMessageInfo

func (m *GetDirectoryFieldRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetDirectoryFieldRequest) GetFieldKey() string {
	if m != nil {
		return m.FieldKey
	}
	return ""
}

type DirectoryRecord struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LocationHistory      []string          `protobuf:"bytes,2,rep,name=location_history,json=locationHistory,proto3" json:"location_history,omitempty"`
	Fields               map[string]string `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DirectoryRecord) Reset()         { *m = DirectoryRecord{} }
func (m *DirectoryRecord) String() string { return proto.CompactTextString(m) }
func (*DirectoryRecord) ProtoMessage()    {}
func (*DirectoryRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_f02336ef077163fd, []int{4}
}

func (m *DirectoryRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DirectoryRecord.Unmarshal(m, b)
}
func (m *DirectoryRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DirectoryRecord.Marshal(b, m, deterministic)
}
func (m *DirectoryRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DirectoryRecord.Merge(m, src)
}
func (m *DirectoryRecord) XXX_Size() int {
	return xxx_messageInfo_DirectoryRecord.Size(m)
}
func (m *DirectoryRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_DirectoryRecord.DiscardUnknown(m)
}

var xxx_messageInfo_DirectoryRecord proto.InternalMessageInfo

func (m *DirectoryRecord) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DirectoryRecord) GetLocationHistory() []string {
	if m != nil {
		return m.LocationHistory
	}
	return nil
}

func (m *DirectoryRecord) GetFields() map[string]string {
	if m != nil {
		return m.Fields
	}
	return nil
}

type AllDirectoryRecords struct {
	Records              []*DirectoryRecord `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AllDirectoryRecords) Reset()         { *m = AllDirectoryRecords{} }
func (m *AllDirectoryRecords) String() string { return proto.CompactTextString(m) }
func (*AllDirectoryRecords) ProtoMessage()    {}
func (*AllDirectoryRecords) Descriptor() ([]byte, []int) {
	return fileDescriptor_f02336ef077163fd, []int{5}
}

func (m *AllDirectoryRecords) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllDirectoryRecords.Unmarshal(m, b)
}
func (m *AllDirectoryRecords) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllDirectoryRecords.Marshal(b, m, deterministic)
}
func (m *AllDirectoryRecords) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllDirectoryRecords.Merge(m, src)
}
func (m *AllDirectoryRecords) XXX_Size() int {
	return xxx_messageInfo_AllDirectoryRecords.Size(m)
}
func (m *AllDirectoryRecords) XXX_DiscardUnknown() {
	xxx_messageInfo_AllDirectoryRecords.DiscardUnknown(m)
}

var xxx_messageInfo_AllDirectoryRecords proto.InternalMessageInfo

func (m *AllDirectoryRecords) GetRecords() []*DirectoryRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

func init() {
	proto.RegisterType((*UpdateRecordRequest)(nil), "magma.orc8r.UpdateRecordRequest")
	proto.RegisterMapType((map[string]string)(nil), "magma.orc8r.UpdateRecordRequest.FieldsEntry")
	proto.RegisterType((*DirectoryField)(nil), "magma.orc8r.DirectoryField")
	proto.RegisterType((*DeleteRecordRequest)(nil), "magma.orc8r.DeleteRecordRequest")
	proto.RegisterType((*GetDirectoryFieldRequest)(nil), "magma.orc8r.GetDirectoryFieldRequest")
	proto.RegisterType((*DirectoryRecord)(nil), "magma.orc8r.DirectoryRecord")
	proto.RegisterMapType((map[string]string)(nil), "magma.orc8r.DirectoryRecord.FieldsEntry")
	proto.RegisterType((*AllDirectoryRecords)(nil), "magma.orc8r.AllDirectoryRecords")
}

func init() { proto.RegisterFile("orc8r/protos/directoryd.proto", fileDescriptor_f02336ef077163fd) }

var fileDescriptor_f02336ef077163fd = []byte{
	// 432 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xcf, 0x8b, 0xd3, 0x40,
	0x18, 0x6d, 0x12, 0x5c, 0xed, 0x57, 0xd9, 0x1f, 0x53, 0xd1, 0x6c, 0xaa, 0x10, 0x06, 0x16, 0x22,
	0x48, 0x02, 0x2b, 0x48, 0xf5, 0xa4, 0xd2, 0x35, 0x82, 0x88, 0x10, 0x51, 0xd0, 0xcb, 0x92, 0xcd,
	0x7c, 0xae, 0x83, 0x49, 0x67, 0x9d, 0xcc, 0x56, 0xf2, 0xef, 0x79, 0xf3, 0xec, 0x3f, 0x24, 0x99,
	0x24, 0x25, 0x49, 0x53, 0xeb, 0xc1, 0x53, 0x66, 0x1e, 0x6f, 0xde, 0x7b, 0xf3, 0xf2, 0x31, 0xf0,
	0x40, 0xc8, 0x64, 0x2e, 0x83, 0x2b, 0x29, 0x94, 0xc8, 0x03, 0xc6, 0x25, 0x26, 0x4a, 0xc8, 0x82,
	0xf9, 0x1a, 0x21, 0x93, 0x2c, 0xbe, 0xcc, 0x62, 0x5f, 0x93, 0x9c, 0xe3, 0x0e, 0x37, 0x11, 0x59,
	0x26, 0x96, 0x15, 0x8f, 0xfe, 0x34, 0x60, 0xfa, 0xe1, 0x8a, 0xc5, 0x0a, 0x23, 0x4c, 0x84, 0x64,
	0x11, 0x7e, 0xbf, 0xc6, 0x5c, 0x91, 0x7d, 0x30, 0x39, 0xb3, 0x0d, 0xd7, 0xf0, 0xc6, 0x91, 0xc9,
	0x19, 0x71, 0xe0, 0x56, 0x2a, 0x92, 0x58, 0x71, 0xb1, 0xb4, 0x4d, 0x8d, 0xae, 0xf7, 0x64, 0x01,
	0x7b, 0x5f, 0x38, 0xa6, 0x2c, 0xb7, 0x2d, 0xd7, 0xf2, 0x26, 0xa7, 0x8f, 0xfc, 0x96, 0xb9, 0x3f,
	0xa0, 0xee, 0xbf, 0xd2, 0xf4, 0xb3, 0xa5, 0x92, 0x45, 0x54, 0x9f, 0x75, 0x9e, 0xc2, 0xa4, 0x05,
	0x93, 0x43, 0xb0, 0xbe, 0x61, 0x51, 0x27, 0x28, 0x97, 0xe4, 0x0e, 0xdc, 0x58, 0xc5, 0xe9, 0x35,
	0xd6, 0xfe, 0xd5, 0xe6, 0x99, 0x39, 0x37, 0xe8, 0x1c, 0xf6, 0x17, 0x4d, 0x01, 0x5a, 0xe3, 0x5f,
	0x4f, 0xd3, 0x13, 0x98, 0x2e, 0x30, 0xc5, 0x1d, 0xb7, 0xa7, 0x21, 0xd8, 0x21, 0xaa, 0xae, 0xc7,
	0xb6, 0xa6, 0x66, 0x30, 0xd6, 0x37, 0x3a, 0x2f, 0x03, 0xd4, 0x55, 0x69, 0xe0, 0x0d, 0x16, 0xf4,
	0x97, 0x01, 0x07, 0x6b, 0x99, 0xca, 0x73, 0x43, 0xe0, 0x21, 0x1c, 0x36, 0xd5, 0x9e, 0x7f, 0xe5,
	0x79, 0xc9, 0xb4, 0x4d, 0xd7, 0xf2, 0xc6, 0xd1, 0x41, 0x83, 0xbf, 0xae, 0x60, 0xf2, 0xbc, 0xd7,
	0xbc, 0xd7, 0x69, 0xbe, 0x67, 0xf4, 0xbf, 0x5b, 0x7f, 0x0b, 0xd3, 0x17, 0x69, 0xda, 0x33, 0xc9,
	0xc9, 0x13, 0xb8, 0x29, 0xab, 0xa5, 0x6d, 0xe8, 0x50, 0xf7, 0xff, 0x16, 0x2a, 0x6a, 0xc8, 0xa7,
	0xbf, 0x4d, 0xb8, 0x17, 0xc6, 0x0a, 0x7f, 0xc4, 0xc5, 0x9a, 0xf3, 0x1e, 0xe5, 0x8a, 0x27, 0x48,
	0xce, 0xe0, 0x76, 0x7b, 0x8c, 0x88, 0xbb, 0x6b, 0xc2, 0x9c, 0xa3, 0x0e, 0xe3, 0xa3, 0xe0, 0x8c,
	0x8e, 0x4a, 0x99, 0xf6, 0xdf, 0xee, 0xc9, 0x0c, 0x0c, 0xc2, 0xb0, 0xcc, 0x27, 0x38, 0xda, 0x98,
	0x06, 0x72, 0xd2, 0x61, 0x6e, 0x9b, 0x16, 0x67, 0x36, 0x5c, 0x86, 0xe6, 0xd0, 0x11, 0x79, 0x07,
	0x77, 0x43, 0x54, 0x43, 0xb5, 0x6e, 0x26, 0x71, 0xba, 0xf1, 0x07, 0x0e, 0xd1, 0xd1, 0xcb, 0xd9,
	0xe7, 0x63, 0x4d, 0x0a, 0xaa, 0x27, 0x20, 0xe5, 0x17, 0xc1, 0xa5, 0xa8, 0x5f, 0x82, 0x8b, 0x3d,
	0xfd, 0x7d, 0xfc, 0x27, 0x00, 0x00, 0xff, 0xff, 0xf9, 0xc6, 0x90, 0xb8, 0x4c, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GatewayDirectoryServiceClient is the client API for GatewayDirectoryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GatewayDirectoryServiceClient interface {
	// Update the directory record of an object in the directory service
	UpdateRecord(ctx context.Context, in *UpdateRecordRequest, opts ...grpc.CallOption) (*Void, error)
	// Delete directory record of an object from the directory service
	// Throws UNKNOWN if object ID does not exist
	DeleteRecord(ctx context.Context, in *DeleteRecordRequest, opts ...grpc.CallOption) (*Void, error)
	// Get directory field for a given id and key
	GetDirectoryField(ctx context.Context, in *GetDirectoryFieldRequest, opts ...grpc.CallOption) (*DirectoryField, error)
	// Get all directory records
	GetAllDirectoryRecords(ctx context.Context, in *Void, opts ...grpc.CallOption) (*AllDirectoryRecords, error)
}

type gatewayDirectoryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGatewayDirectoryServiceClient(cc grpc.ClientConnInterface) GatewayDirectoryServiceClient {
	return &gatewayDirectoryServiceClient{cc}
}

func (c *gatewayDirectoryServiceClient) UpdateRecord(ctx context.Context, in *UpdateRecordRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/magma.orc8r.GatewayDirectoryService/UpdateRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayDirectoryServiceClient) DeleteRecord(ctx context.Context, in *DeleteRecordRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/magma.orc8r.GatewayDirectoryService/DeleteRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayDirectoryServiceClient) GetDirectoryField(ctx context.Context, in *GetDirectoryFieldRequest, opts ...grpc.CallOption) (*DirectoryField, error) {
	out := new(DirectoryField)
	err := c.cc.Invoke(ctx, "/magma.orc8r.GatewayDirectoryService/GetDirectoryField", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayDirectoryServiceClient) GetAllDirectoryRecords(ctx context.Context, in *Void, opts ...grpc.CallOption) (*AllDirectoryRecords, error) {
	out := new(AllDirectoryRecords)
	err := c.cc.Invoke(ctx, "/magma.orc8r.GatewayDirectoryService/GetAllDirectoryRecords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GatewayDirectoryServiceServer is the server API for GatewayDirectoryService service.
type GatewayDirectoryServiceServer interface {
	// Update the directory record of an object in the directory service
	UpdateRecord(context.Context, *UpdateRecordRequest) (*Void, error)
	// Delete directory record of an object from the directory service
	// Throws UNKNOWN if object ID does not exist
	DeleteRecord(context.Context, *DeleteRecordRequest) (*Void, error)
	// Get directory field for a given id and key
	GetDirectoryField(context.Context, *GetDirectoryFieldRequest) (*DirectoryField, error)
	// Get all directory records
	GetAllDirectoryRecords(context.Context, *Void) (*AllDirectoryRecords, error)
}

// UnimplementedGatewayDirectoryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGatewayDirectoryServiceServer struct {
}

func (*UnimplementedGatewayDirectoryServiceServer) UpdateRecord(ctx context.Context, req *UpdateRecordRequest) (*Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRecord not implemented")
}
func (*UnimplementedGatewayDirectoryServiceServer) DeleteRecord(ctx context.Context, req *DeleteRecordRequest) (*Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRecord not implemented")
}
func (*UnimplementedGatewayDirectoryServiceServer) GetDirectoryField(ctx context.Context, req *GetDirectoryFieldRequest) (*DirectoryField, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDirectoryField not implemented")
}
func (*UnimplementedGatewayDirectoryServiceServer) GetAllDirectoryRecords(ctx context.Context, req *Void) (*AllDirectoryRecords, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllDirectoryRecords not implemented")
}

func RegisterGatewayDirectoryServiceServer(s *grpc.Server, srv GatewayDirectoryServiceServer) {
	s.RegisterService(&_GatewayDirectoryService_serviceDesc, srv)
}

func _GatewayDirectoryService_UpdateRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayDirectoryServiceServer).UpdateRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.GatewayDirectoryService/UpdateRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayDirectoryServiceServer).UpdateRecord(ctx, req.(*UpdateRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayDirectoryService_DeleteRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayDirectoryServiceServer).DeleteRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.GatewayDirectoryService/DeleteRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayDirectoryServiceServer).DeleteRecord(ctx, req.(*DeleteRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayDirectoryService_GetDirectoryField_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDirectoryFieldRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayDirectoryServiceServer).GetDirectoryField(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.GatewayDirectoryService/GetDirectoryField",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayDirectoryServiceServer).GetDirectoryField(ctx, req.(*GetDirectoryFieldRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayDirectoryService_GetAllDirectoryRecords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayDirectoryServiceServer).GetAllDirectoryRecords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.GatewayDirectoryService/GetAllDirectoryRecords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayDirectoryServiceServer).GetAllDirectoryRecords(ctx, req.(*Void))
	}
	return interceptor(ctx, in, info, handler)
}

var _GatewayDirectoryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.orc8r.GatewayDirectoryService",
	HandlerType: (*GatewayDirectoryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateRecord",
			Handler:    _GatewayDirectoryService_UpdateRecord_Handler,
		},
		{
			MethodName: "DeleteRecord",
			Handler:    _GatewayDirectoryService_DeleteRecord_Handler,
		},
		{
			MethodName: "GetDirectoryField",
			Handler:    _GatewayDirectoryService_GetDirectoryField_Handler,
		},
		{
			MethodName: "GetAllDirectoryRecords",
			Handler:    _GatewayDirectoryService_GetAllDirectoryRecords_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orc8r/protos/directoryd.proto",
}
