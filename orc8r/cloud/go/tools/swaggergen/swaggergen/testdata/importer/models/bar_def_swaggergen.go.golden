// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BarDef bar def
// swagger:model barDef
type BarDef struct {

	// baz
	// Required: true
	Baz *BarDefBaz `json:"baz"`

	// quz
	// Required: true
	Quz *int64 `json:"quz"`
}

// Validate validates this bar def
func (m *BarDef) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBaz(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateQuz(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BarDef) validateBaz(formats strfmt.Registry) error {

	if err := validate.Required("baz", "body", m.Baz); err != nil {
		return err
	}

	if m.Baz != nil {
		if err := m.Baz.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("baz")
			}
			return err
		}
	}

	return nil
}

func (m *BarDef) validateQuz(formats strfmt.Registry) error {

	if err := validate.Required("quz", "body", m.Quz); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BarDef) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BarDef) UnmarshalBinary(b []byte) error {
	var res BarDef
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// BarDefBaz bar def baz
// swagger:model BarDefBaz
type BarDefBaz struct {

	// hello
	// Min Length: 1
	Hello string `json:"hello,omitempty"`

	// world
	World int64 `json:"world,omitempty"`
}

// Validate validates this bar def baz
func (m *BarDefBaz) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHello(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BarDefBaz) validateHello(formats strfmt.Registry) error {

	if swag.IsZero(m.Hello) { // not required
		return nil
	}

	if err := validate.MinLength("baz"+"."+"hello", "body", string(m.Hello), 1); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BarDefBaz) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BarDefBaz) UnmarshalBinary(b []byte) error {
	var res BarDefBaz
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
