// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orc8r/cloud/go/obsidian/swagger/protos/swagger.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PartialSpecRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PartialSpecRequest) Reset()         { *m = PartialSpecRequest{} }
func (m *PartialSpecRequest) String() string { return proto.CompactTextString(m) }
func (*PartialSpecRequest) ProtoMessage()    {}
func (*PartialSpecRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_66b2ccbfc02fce64, []int{0}
}

func (m *PartialSpecRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartialSpecRequest.Unmarshal(m, b)
}
func (m *PartialSpecRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartialSpecRequest.Marshal(b, m, deterministic)
}
func (m *PartialSpecRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartialSpecRequest.Merge(m, src)
}
func (m *PartialSpecRequest) XXX_Size() int {
	return xxx_messageInfo_PartialSpecRequest.Size(m)
}
func (m *PartialSpecRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PartialSpecRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PartialSpecRequest proto.InternalMessageInfo

type PartialSpecResponse struct {
	SwaggerSpec          string   `protobuf:"bytes,1,opt,name=swagger_spec,json=swaggerSpec,proto3" json:"swagger_spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PartialSpecResponse) Reset()         { *m = PartialSpecResponse{} }
func (m *PartialSpecResponse) String() string { return proto.CompactTextString(m) }
func (*PartialSpecResponse) ProtoMessage()    {}
func (*PartialSpecResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_66b2ccbfc02fce64, []int{1}
}

func (m *PartialSpecResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartialSpecResponse.Unmarshal(m, b)
}
func (m *PartialSpecResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartialSpecResponse.Marshal(b, m, deterministic)
}
func (m *PartialSpecResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartialSpecResponse.Merge(m, src)
}
func (m *PartialSpecResponse) XXX_Size() int {
	return xxx_messageInfo_PartialSpecResponse.Size(m)
}
func (m *PartialSpecResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PartialSpecResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PartialSpecResponse proto.InternalMessageInfo

func (m *PartialSpecResponse) GetSwaggerSpec() string {
	if m != nil {
		return m.SwaggerSpec
	}
	return ""
}

type StandaloneSpecRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StandaloneSpecRequest) Reset()         { *m = StandaloneSpecRequest{} }
func (m *StandaloneSpecRequest) String() string { return proto.CompactTextString(m) }
func (*StandaloneSpecRequest) ProtoMessage()    {}
func (*StandaloneSpecRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_66b2ccbfc02fce64, []int{2}
}

func (m *StandaloneSpecRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StandaloneSpecRequest.Unmarshal(m, b)
}
func (m *StandaloneSpecRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StandaloneSpecRequest.Marshal(b, m, deterministic)
}
func (m *StandaloneSpecRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StandaloneSpecRequest.Merge(m, src)
}
func (m *StandaloneSpecRequest) XXX_Size() int {
	return xxx_messageInfo_StandaloneSpecRequest.Size(m)
}
func (m *StandaloneSpecRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StandaloneSpecRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StandaloneSpecRequest proto.InternalMessageInfo

type StandaloneSpecResponse struct {
	SwaggerSpec          string   `protobuf:"bytes,1,opt,name=swagger_spec,json=swaggerSpec,proto3" json:"swagger_spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StandaloneSpecResponse) Reset()         { *m = StandaloneSpecResponse{} }
func (m *StandaloneSpecResponse) String() string { return proto.CompactTextString(m) }
func (*StandaloneSpecResponse) ProtoMessage()    {}
func (*StandaloneSpecResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_66b2ccbfc02fce64, []int{3}
}

func (m *StandaloneSpecResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StandaloneSpecResponse.Unmarshal(m, b)
}
func (m *StandaloneSpecResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StandaloneSpecResponse.Marshal(b, m, deterministic)
}
func (m *StandaloneSpecResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StandaloneSpecResponse.Merge(m, src)
}
func (m *StandaloneSpecResponse) XXX_Size() int {
	return xxx_messageInfo_StandaloneSpecResponse.Size(m)
}
func (m *StandaloneSpecResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StandaloneSpecResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StandaloneSpecResponse proto.InternalMessageInfo

func (m *StandaloneSpecResponse) GetSwaggerSpec() string {
	if m != nil {
		return m.SwaggerSpec
	}
	return ""
}

func init() {
	proto.RegisterType((*PartialSpecRequest)(nil), "magma.orc8r.obsidian.swagger.PartialSpecRequest")
	proto.RegisterType((*PartialSpecResponse)(nil), "magma.orc8r.obsidian.swagger.PartialSpecResponse")
	proto.RegisterType((*StandaloneSpecRequest)(nil), "magma.orc8r.obsidian.swagger.StandaloneSpecRequest")
	proto.RegisterType((*StandaloneSpecResponse)(nil), "magma.orc8r.obsidian.swagger.StandaloneSpecResponse")
}

func init() {
	proto.RegisterFile("orc8r/cloud/go/obsidian/swagger/protos/swagger.proto", fileDescriptor_66b2ccbfc02fce64)
}

var fileDescriptor_66b2ccbfc02fce64 = []byte{
	// 238 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0xc9, 0x2f, 0x4a, 0xb6,
	0x28, 0xd2, 0x4f, 0xce, 0xc9, 0x2f, 0x4d, 0xd1, 0x4f, 0xcf, 0xd7, 0xcf, 0x4f, 0x2a, 0xce, 0x4c,
	0xc9, 0x4c, 0xcc, 0xd3, 0x2f, 0x2e, 0x4f, 0x4c, 0x4f, 0x4f, 0x2d, 0xd2, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0x2f, 0x86, 0x71, 0xf5, 0xc0, 0x5c, 0x21, 0x99, 0xdc, 0xc4, 0xf4, 0xdc, 0x44, 0x3d, 0xb0,
	0x5e, 0x3d, 0x98, 0x16, 0x3d, 0xa8, 0x1a, 0x25, 0x11, 0x2e, 0xa1, 0x80, 0xc4, 0xa2, 0x92, 0xcc,
	0xc4, 0x9c, 0xe0, 0x82, 0xd4, 0xe4, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x25, 0x0b, 0x2e,
	0x61, 0x14, 0xd1, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x45, 0x2e, 0x1e, 0xa8, 0xbe, 0xf8,
	0xe2, 0x82, 0xd4, 0x64, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x6e, 0xa8, 0x18, 0x48, 0xa9,
	0x92, 0x38, 0x97, 0x68, 0x70, 0x49, 0x62, 0x5e, 0x4a, 0x62, 0x4e, 0x7e, 0x5e, 0x2a, 0xb2, 0x91,
	0xd6, 0x5c, 0x62, 0xe8, 0x12, 0x44, 0x9b, 0x6a, 0xd4, 0xc9, 0xc4, 0xc5, 0x1d, 0x8c, 0xe0, 0x0b,
	0x95, 0x73, 0xf1, 0xb9, 0xa7, 0x96, 0x20, 0x39, 0x51, 0xc8, 0x40, 0x0f, 0x9f, 0x37, 0xf5, 0x30,
	0xfd, 0x28, 0x65, 0x48, 0x82, 0x0e, 0x88, 0x4b, 0x95, 0x18, 0x84, 0x1a, 0x18, 0xb9, 0x04, 0xdd,
	0x53, 0x4b, 0x50, 0x7d, 0x22, 0x64, 0x8c, 0xdf, 0x28, 0xac, 0x01, 0x22, 0x65, 0x42, 0x9a, 0x26,
	0x98, 0x13, 0x9c, 0xf4, 0xa2, 0x74, 0xc0, 0x1a, 0xf5, 0x89, 0x4b, 0x0d, 0x49, 0x6c, 0x60, 0xda,
	0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x4a, 0x81, 0xe8, 0x84, 0x3e, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SwaggerSpecClient is the client API for SwaggerSpec service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SwaggerSpecClient interface {
	// GetPartialSpec returns partial Swagger specification of the service's REST API.
	GetPartialSpec(ctx context.Context, in *PartialSpecRequest, opts ...grpc.CallOption) (*PartialSpecResponse, error)
	// GetStandaloneSpec returns a standalone Swagger specification of the
	// service's REST API.
	GetStandaloneSpec(ctx context.Context, in *StandaloneSpecRequest, opts ...grpc.CallOption) (*StandaloneSpecResponse, error)
}

type swaggerSpecClient struct {
	cc grpc.ClientConnInterface
}

func NewSwaggerSpecClient(cc grpc.ClientConnInterface) SwaggerSpecClient {
	return &swaggerSpecClient{cc}
}

func (c *swaggerSpecClient) GetPartialSpec(ctx context.Context, in *PartialSpecRequest, opts ...grpc.CallOption) (*PartialSpecResponse, error) {
	out := new(PartialSpecResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.obsidian.swagger.SwaggerSpec/GetPartialSpec", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *swaggerSpecClient) GetStandaloneSpec(ctx context.Context, in *StandaloneSpecRequest, opts ...grpc.CallOption) (*StandaloneSpecResponse, error) {
	out := new(StandaloneSpecResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.obsidian.swagger.SwaggerSpec/GetStandaloneSpec", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SwaggerSpecServer is the server API for SwaggerSpec service.
type SwaggerSpecServer interface {
	// GetPartialSpec returns partial Swagger specification of the service's REST API.
	GetPartialSpec(context.Context, *PartialSpecRequest) (*PartialSpecResponse, error)
	// GetStandaloneSpec returns a standalone Swagger specification of the
	// service's REST API.
	GetStandaloneSpec(context.Context, *StandaloneSpecRequest) (*StandaloneSpecResponse, error)
}

// UnimplementedSwaggerSpecServer can be embedded to have forward compatible implementations.
type UnimplementedSwaggerSpecServer struct {
}

func (*UnimplementedSwaggerSpecServer) GetPartialSpec(ctx context.Context, req *PartialSpecRequest) (*PartialSpecResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPartialSpec not implemented")
}
func (*UnimplementedSwaggerSpecServer) GetStandaloneSpec(ctx context.Context, req *StandaloneSpecRequest) (*StandaloneSpecResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStandaloneSpec not implemented")
}

func RegisterSwaggerSpecServer(s *grpc.Server, srv SwaggerSpecServer) {
	s.RegisterService(&_SwaggerSpec_serviceDesc, srv)
}

func _SwaggerSpec_GetPartialSpec_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PartialSpecRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwaggerSpecServer).GetPartialSpec(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.obsidian.swagger.SwaggerSpec/GetPartialSpec",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwaggerSpecServer).GetPartialSpec(ctx, req.(*PartialSpecRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SwaggerSpec_GetStandaloneSpec_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StandaloneSpecRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwaggerSpecServer).GetStandaloneSpec(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.obsidian.swagger.SwaggerSpec/GetStandaloneSpec",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwaggerSpecServer).GetStandaloneSpec(ctx, req.(*StandaloneSpecRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SwaggerSpec_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.orc8r.obsidian.swagger.SwaggerSpec",
	HandlerType: (*SwaggerSpecServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPartialSpec",
			Handler:    _SwaggerSpec_GetPartialSpec_Handler,
		},
		{
			MethodName: "GetStandaloneSpec",
			Handler:    _SwaggerSpec_GetStandaloneSpec_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orc8r/cloud/go/obsidian/swagger/protos/swagger.proto",
}
