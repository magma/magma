// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orc8r/cloud/go/services/configurator/protos/southbound.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protos "magma/orc8r/lib/go/protos"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetMconfigInternalRequest struct {
	HardwareID           string   `protobuf:"bytes,1,opt,name=hardwareID,proto3" json:"hardwareID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMconfigInternalRequest) Reset()         { *m = GetMconfigInternalRequest{} }
func (m *GetMconfigInternalRequest) String() string { return proto.CompactTextString(m) }
func (*GetMconfigInternalRequest) ProtoMessage()    {}
func (*GetMconfigInternalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_185819ac40d93694, []int{0}
}

func (m *GetMconfigInternalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMconfigInternalRequest.Unmarshal(m, b)
}
func (m *GetMconfigInternalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMconfigInternalRequest.Marshal(b, m, deterministic)
}
func (m *GetMconfigInternalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMconfigInternalRequest.Merge(m, src)
}
func (m *GetMconfigInternalRequest) XXX_Size() int {
	return xxx_messageInfo_GetMconfigInternalRequest.Size(m)
}
func (m *GetMconfigInternalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMconfigInternalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMconfigInternalRequest proto.InternalMessageInfo

func (m *GetMconfigInternalRequest) GetHardwareID() string {
	if m != nil {
		return m.HardwareID
	}
	return ""
}

type GetMconfigInternalResponse struct {
	// configs contains the mconfigs for the requested hardware ID
	// The contained configs_by_key should be str->any.Any, where the any.Any
	// is a BytesValue wrapper containing the the config.
	// Each config is (1) marshaled to an any.Any then (2) JSON-serialized
	// before being placed into the BytesValue wrapper.
	// TODO(#2310): revert configs.configs_by_key to containing each config just marshaled to any.Any (not additionally serialized to JSON)
	Configs *protos.GatewayConfigs `protobuf:"bytes,1,opt,name=configs,proto3" json:"configs,omitempty"`
	// logicalID is the entity ID of the gateway in the configurator graph
	LogicalID            string   `protobuf:"bytes,2,opt,name=logicalID,proto3" json:"logicalID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMconfigInternalResponse) Reset()         { *m = GetMconfigInternalResponse{} }
func (m *GetMconfigInternalResponse) String() string { return proto.CompactTextString(m) }
func (*GetMconfigInternalResponse) ProtoMessage()    {}
func (*GetMconfigInternalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_185819ac40d93694, []int{1}
}

func (m *GetMconfigInternalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMconfigInternalResponse.Unmarshal(m, b)
}
func (m *GetMconfigInternalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMconfigInternalResponse.Marshal(b, m, deterministic)
}
func (m *GetMconfigInternalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMconfigInternalResponse.Merge(m, src)
}
func (m *GetMconfigInternalResponse) XXX_Size() int {
	return xxx_messageInfo_GetMconfigInternalResponse.Size(m)
}
func (m *GetMconfigInternalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMconfigInternalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMconfigInternalResponse proto.InternalMessageInfo

func (m *GetMconfigInternalResponse) GetConfigs() *protos.GatewayConfigs {
	if m != nil {
		return m.Configs
	}
	return nil
}

func (m *GetMconfigInternalResponse) GetLogicalID() string {
	if m != nil {
		return m.LogicalID
	}
	return ""
}

func init() {
	proto.RegisterType((*GetMconfigInternalRequest)(nil), "magma.orc8r.configurator.GetMconfigInternalRequest")
	proto.RegisterType((*GetMconfigInternalResponse)(nil), "magma.orc8r.configurator.GetMconfigInternalResponse")
}

func init() {
	proto.RegisterFile("orc8r/cloud/go/services/configurator/protos/southbound.proto", fileDescriptor_185819ac40d93694)
}

var fileDescriptor_185819ac40d93694 = []byte{
	// 275 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0x31, 0x4f, 0xfb, 0x30,
	0x10, 0xc5, 0xff, 0xf9, 0x0f, 0xa0, 0x9a, 0xcd, 0x53, 0x6a, 0x50, 0x85, 0x32, 0x31, 0xd9, 0xa2,
	0x01, 0x09, 0x09, 0x26, 0x5a, 0xa9, 0xca, 0xc0, 0x12, 0x36, 0x36, 0xd7, 0x31, 0x69, 0xa4, 0xd8,
	0xd7, 0x9e, 0x6d, 0x2a, 0x46, 0xbe, 0x0b, 0x1f, 0x14, 0xc9, 0xa6, 0x10, 0x04, 0x1d, 0x3a, 0x45,
	0x7a, 0xef, 0xfd, 0xee, 0x2e, 0xcf, 0xe4, 0x0e, 0x50, 0xdd, 0xa0, 0x50, 0x3d, 0x84, 0x46, 0xb4,
	0x20, 0x9c, 0xc6, 0x97, 0x4e, 0x69, 0x27, 0x14, 0xd8, 0xe7, 0xae, 0x0d, 0x28, 0x3d, 0xa0, 0x58,
	0x23, 0x78, 0x70, 0xc2, 0x41, 0xf0, 0xab, 0x25, 0x04, 0xdb, 0xf0, 0xa8, 0xd0, 0xdc, 0xc8, 0xd6,
	0x48, 0x1e, 0x67, 0xf0, 0x21, 0xc1, 0x58, 0x9a, 0xfb, 0x09, 0x9a, 0xe4, 0x25, 0x8a, 0x8d, 0x7f,
	0x78, 0x0a, 0x8c, 0x01, 0x9b, 0xac, 0xe2, 0x96, 0x8c, 0x17, 0xda, 0x3f, 0xa4, 0x78, 0x65, 0xbd,
	0x46, 0x2b, 0xfb, 0x5a, 0x6f, 0x82, 0x76, 0x9e, 0x4e, 0x08, 0x59, 0x49, 0x6c, 0xb6, 0x12, 0x75,
	0x35, 0xcf, 0xb3, 0xf3, 0xec, 0x62, 0x54, 0x0f, 0x94, 0x62, 0x43, 0xd8, 0x5f, 0xb0, 0x5b, 0x83,
	0x75, 0x9a, 0x5e, 0x93, 0xe3, 0xe4, 0xb8, 0x88, 0x9e, 0x4c, 0x4f, 0xf9, 0xf0, 0xfa, 0x85, 0xf4,
	0x7a, 0x2b, 0x5f, 0x67, 0x29, 0x52, 0xef, 0xb2, 0xf4, 0x8c, 0x8c, 0x7a, 0x68, 0x3b, 0x25, 0xfb,
	0x6a, 0x9e, 0xff, 0x8f, 0x3b, 0xbf, 0x85, 0xe9, 0x7b, 0x46, 0x26, 0x8f, 0x5f, 0xad, 0xec, 0x76,
	0xce, 0x06, 0x4d, 0xd0, 0xb7, 0x8c, 0xd0, 0xdf, 0x67, 0xd1, 0x92, 0xef, 0xeb, 0x8e, 0xef, 0x6d,
	0x80, 0x5d, 0x1d, 0x06, 0xa5, 0x3f, 0x2f, 0xfe, 0xdd, 0x97, 0x4f, 0x97, 0x11, 0x14, 0x07, 0xbc,
	0xf6, 0xf2, 0x28, 0x7e, 0xcb, 0x8f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe2, 0xf5, 0x7d, 0x30, 0x23,
	0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SouthboundInternalConfiguratorClient is the client API for SouthboundInternalConfigurator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SouthboundInternalConfiguratorClient interface {
	// GetMconfigInternal exists to support the existing streamer mconfig
	// policy. This should be removed when we migrate gateway mconfig updates
	// from streamer to this southbound configurator servicer.
	GetMconfigInternal(ctx context.Context, in *GetMconfigInternalRequest, opts ...grpc.CallOption) (*GetMconfigInternalResponse, error)
}

type southboundInternalConfiguratorClient struct {
	cc grpc.ClientConnInterface
}

func NewSouthboundInternalConfiguratorClient(cc grpc.ClientConnInterface) SouthboundInternalConfiguratorClient {
	return &southboundInternalConfiguratorClient{cc}
}

func (c *southboundInternalConfiguratorClient) GetMconfigInternal(ctx context.Context, in *GetMconfigInternalRequest, opts ...grpc.CallOption) (*GetMconfigInternalResponse, error) {
	out := new(GetMconfigInternalResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.SouthboundInternalConfigurator/GetMconfigInternal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SouthboundInternalConfiguratorServer is the server API for SouthboundInternalConfigurator service.
type SouthboundInternalConfiguratorServer interface {
	// GetMconfigInternal exists to support the existing streamer mconfig
	// policy. This should be removed when we migrate gateway mconfig updates
	// from streamer to this southbound configurator servicer.
	GetMconfigInternal(context.Context, *GetMconfigInternalRequest) (*GetMconfigInternalResponse, error)
}

// UnimplementedSouthboundInternalConfiguratorServer can be embedded to have forward compatible implementations.
type UnimplementedSouthboundInternalConfiguratorServer struct {
}

func (*UnimplementedSouthboundInternalConfiguratorServer) GetMconfigInternal(ctx context.Context, req *GetMconfigInternalRequest) (*GetMconfigInternalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMconfigInternal not implemented")
}

func RegisterSouthboundInternalConfiguratorServer(s *grpc.Server, srv SouthboundInternalConfiguratorServer) {
	s.RegisterService(&_SouthboundInternalConfigurator_serviceDesc, srv)
}

func _SouthboundInternalConfigurator_GetMconfigInternal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMconfigInternalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SouthboundInternalConfiguratorServer).GetMconfigInternal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.SouthboundInternalConfigurator/GetMconfigInternal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SouthboundInternalConfiguratorServer).GetMconfigInternal(ctx, req.(*GetMconfigInternalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SouthboundInternalConfigurator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.orc8r.configurator.SouthboundInternalConfigurator",
	HandlerType: (*SouthboundInternalConfiguratorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMconfigInternal",
			Handler:    _SouthboundInternalConfigurator_GetMconfigInternal_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orc8r/cloud/go/services/configurator/protos/southbound.proto",
}
