// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package protos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	storage "magma/orc8r/cloud/go/services/configurator/storage"
	protos "magma/orc8r/lib/go/protos"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// NorthboundConfiguratorClient is the client API for NorthboundConfigurator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type NorthboundConfiguratorClient interface {
	// ListNetworkIDs fetches the list of networkIDs registered
	ListNetworkIDs(ctx context.Context, in *protos.Void, opts ...grpc.CallOption) (*ListNetworkIDsResponse, error)
	// CreateNetworks registers the given list of Networks and returns the created Networks
	CreateNetworks(ctx context.Context, in *CreateNetworksRequest, opts ...grpc.CallOption) (*CreateNetworksResponse, error)
	// UpdateNetworks updates the given list of registered Networks
	UpdateNetworks(ctx context.Context, in *UpdateNetworksRequest, opts ...grpc.CallOption) (*protos.Void, error)
	// DeleteNetworks deletes the given list of registered Networks
	DeleteNetworks(ctx context.Context, in *DeleteNetworksRequest, opts ...grpc.CallOption) (*protos.Void, error)
	// LoadNetworks fetches the set of Networks specified by the request
	LoadNetworks(ctx context.Context, in *LoadNetworksRequest, opts ...grpc.CallOption) (*storage.NetworkLoadResult, error)
	// Perform multiple operations (create/update/delete) in a single
	// transaction
	WriteEntities(ctx context.Context, in *WriteEntitiesRequest, opts ...grpc.CallOption) (*WriteEntitiesResponse, error)
	// CreateEntities registers the given list of Entities and returns the created Entities
	CreateEntities(ctx context.Context, in *CreateEntitiesRequest, opts ...grpc.CallOption) (*CreateEntitiesResponse, error)
	// UpdateEntities updates the given list of registered Entities and returns the updated Entities
	UpdateEntities(ctx context.Context, in *UpdateEntitiesRequest, opts ...grpc.CallOption) (*UpdateEntitiesResponse, error)
	// DeleteEntities deletes the set of Entities registered
	DeleteEntities(ctx context.Context, in *DeleteEntitiesRequest, opts ...grpc.CallOption) (*protos.Void, error)
	// LoadEntities fetches the set of Entities specified by the request
	LoadEntities(ctx context.Context, in *LoadEntitiesRequest, opts ...grpc.CallOption) (*storage.EntityLoadResult, error)
	// CountEntities counts the number of Entities specified by the request
	CountEntities(ctx context.Context, in *LoadEntitiesRequest, opts ...grpc.CallOption) (*storage.EntityCountResult, error)
}

type northboundConfiguratorClient struct {
	cc grpc.ClientConnInterface
}

func NewNorthboundConfiguratorClient(cc grpc.ClientConnInterface) NorthboundConfiguratorClient {
	return &northboundConfiguratorClient{cc}
}

func (c *northboundConfiguratorClient) ListNetworkIDs(ctx context.Context, in *protos.Void, opts ...grpc.CallOption) (*ListNetworkIDsResponse, error) {
	out := new(ListNetworkIDsResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.NorthboundConfigurator/ListNetworkIDs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *northboundConfiguratorClient) CreateNetworks(ctx context.Context, in *CreateNetworksRequest, opts ...grpc.CallOption) (*CreateNetworksResponse, error) {
	out := new(CreateNetworksResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.NorthboundConfigurator/CreateNetworks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *northboundConfiguratorClient) UpdateNetworks(ctx context.Context, in *UpdateNetworksRequest, opts ...grpc.CallOption) (*protos.Void, error) {
	out := new(protos.Void)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.NorthboundConfigurator/UpdateNetworks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *northboundConfiguratorClient) DeleteNetworks(ctx context.Context, in *DeleteNetworksRequest, opts ...grpc.CallOption) (*protos.Void, error) {
	out := new(protos.Void)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.NorthboundConfigurator/DeleteNetworks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *northboundConfiguratorClient) LoadNetworks(ctx context.Context, in *LoadNetworksRequest, opts ...grpc.CallOption) (*storage.NetworkLoadResult, error) {
	out := new(storage.NetworkLoadResult)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.NorthboundConfigurator/LoadNetworks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *northboundConfiguratorClient) WriteEntities(ctx context.Context, in *WriteEntitiesRequest, opts ...grpc.CallOption) (*WriteEntitiesResponse, error) {
	out := new(WriteEntitiesResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.NorthboundConfigurator/WriteEntities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *northboundConfiguratorClient) CreateEntities(ctx context.Context, in *CreateEntitiesRequest, opts ...grpc.CallOption) (*CreateEntitiesResponse, error) {
	out := new(CreateEntitiesResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.NorthboundConfigurator/CreateEntities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *northboundConfiguratorClient) UpdateEntities(ctx context.Context, in *UpdateEntitiesRequest, opts ...grpc.CallOption) (*UpdateEntitiesResponse, error) {
	out := new(UpdateEntitiesResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.NorthboundConfigurator/UpdateEntities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *northboundConfiguratorClient) DeleteEntities(ctx context.Context, in *DeleteEntitiesRequest, opts ...grpc.CallOption) (*protos.Void, error) {
	out := new(protos.Void)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.NorthboundConfigurator/DeleteEntities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *northboundConfiguratorClient) LoadEntities(ctx context.Context, in *LoadEntitiesRequest, opts ...grpc.CallOption) (*storage.EntityLoadResult, error) {
	out := new(storage.EntityLoadResult)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.NorthboundConfigurator/LoadEntities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *northboundConfiguratorClient) CountEntities(ctx context.Context, in *LoadEntitiesRequest, opts ...grpc.CallOption) (*storage.EntityCountResult, error) {
	out := new(storage.EntityCountResult)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.NorthboundConfigurator/CountEntities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NorthboundConfiguratorServer is the server API for NorthboundConfigurator service.
// All implementations should embed UnimplementedNorthboundConfiguratorServer
// for forward compatibility
type NorthboundConfiguratorServer interface {
	// ListNetworkIDs fetches the list of networkIDs registered
	ListNetworkIDs(context.Context, *protos.Void) (*ListNetworkIDsResponse, error)
	// CreateNetworks registers the given list of Networks and returns the created Networks
	CreateNetworks(context.Context, *CreateNetworksRequest) (*CreateNetworksResponse, error)
	// UpdateNetworks updates the given list of registered Networks
	UpdateNetworks(context.Context, *UpdateNetworksRequest) (*protos.Void, error)
	// DeleteNetworks deletes the given list of registered Networks
	DeleteNetworks(context.Context, *DeleteNetworksRequest) (*protos.Void, error)
	// LoadNetworks fetches the set of Networks specified by the request
	LoadNetworks(context.Context, *LoadNetworksRequest) (*storage.NetworkLoadResult, error)
	// Perform multiple operations (create/update/delete) in a single
	// transaction
	WriteEntities(context.Context, *WriteEntitiesRequest) (*WriteEntitiesResponse, error)
	// CreateEntities registers the given list of Entities and returns the created Entities
	CreateEntities(context.Context, *CreateEntitiesRequest) (*CreateEntitiesResponse, error)
	// UpdateEntities updates the given list of registered Entities and returns the updated Entities
	UpdateEntities(context.Context, *UpdateEntitiesRequest) (*UpdateEntitiesResponse, error)
	// DeleteEntities deletes the set of Entities registered
	DeleteEntities(context.Context, *DeleteEntitiesRequest) (*protos.Void, error)
	// LoadEntities fetches the set of Entities specified by the request
	LoadEntities(context.Context, *LoadEntitiesRequest) (*storage.EntityLoadResult, error)
	// CountEntities counts the number of Entities specified by the request
	CountEntities(context.Context, *LoadEntitiesRequest) (*storage.EntityCountResult, error)
}

// UnimplementedNorthboundConfiguratorServer should be embedded to have forward compatible implementations.
type UnimplementedNorthboundConfiguratorServer struct {
}

func (UnimplementedNorthboundConfiguratorServer) ListNetworkIDs(context.Context, *protos.Void) (*ListNetworkIDsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNetworkIDs not implemented")
}
func (UnimplementedNorthboundConfiguratorServer) CreateNetworks(context.Context, *CreateNetworksRequest) (*CreateNetworksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNetworks not implemented")
}
func (UnimplementedNorthboundConfiguratorServer) UpdateNetworks(context.Context, *UpdateNetworksRequest) (*protos.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNetworks not implemented")
}
func (UnimplementedNorthboundConfiguratorServer) DeleteNetworks(context.Context, *DeleteNetworksRequest) (*protos.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNetworks not implemented")
}
func (UnimplementedNorthboundConfiguratorServer) LoadNetworks(context.Context, *LoadNetworksRequest) (*storage.NetworkLoadResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadNetworks not implemented")
}
func (UnimplementedNorthboundConfiguratorServer) WriteEntities(context.Context, *WriteEntitiesRequest) (*WriteEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WriteEntities not implemented")
}
func (UnimplementedNorthboundConfiguratorServer) CreateEntities(context.Context, *CreateEntitiesRequest) (*CreateEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEntities not implemented")
}
func (UnimplementedNorthboundConfiguratorServer) UpdateEntities(context.Context, *UpdateEntitiesRequest) (*UpdateEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEntities not implemented")
}
func (UnimplementedNorthboundConfiguratorServer) DeleteEntities(context.Context, *DeleteEntitiesRequest) (*protos.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEntities not implemented")
}
func (UnimplementedNorthboundConfiguratorServer) LoadEntities(context.Context, *LoadEntitiesRequest) (*storage.EntityLoadResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadEntities not implemented")
}
func (UnimplementedNorthboundConfiguratorServer) CountEntities(context.Context, *LoadEntitiesRequest) (*storage.EntityCountResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountEntities not implemented")
}

// UnsafeNorthboundConfiguratorServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to NorthboundConfiguratorServer will
// result in compilation errors.
type UnsafeNorthboundConfiguratorServer interface {
	mustEmbedUnimplementedNorthboundConfiguratorServer()
}

func RegisterNorthboundConfiguratorServer(s grpc.ServiceRegistrar, srv NorthboundConfiguratorServer) {
	s.RegisterService(&NorthboundConfigurator_ServiceDesc, srv)
}

func _NorthboundConfigurator_ListNetworkIDs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(protos.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthboundConfiguratorServer).ListNetworkIDs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.NorthboundConfigurator/ListNetworkIDs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthboundConfiguratorServer).ListNetworkIDs(ctx, req.(*protos.Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _NorthboundConfigurator_CreateNetworks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNetworksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthboundConfiguratorServer).CreateNetworks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.NorthboundConfigurator/CreateNetworks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthboundConfiguratorServer).CreateNetworks(ctx, req.(*CreateNetworksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NorthboundConfigurator_UpdateNetworks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNetworksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthboundConfiguratorServer).UpdateNetworks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.NorthboundConfigurator/UpdateNetworks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthboundConfiguratorServer).UpdateNetworks(ctx, req.(*UpdateNetworksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NorthboundConfigurator_DeleteNetworks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNetworksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthboundConfiguratorServer).DeleteNetworks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.NorthboundConfigurator/DeleteNetworks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthboundConfiguratorServer).DeleteNetworks(ctx, req.(*DeleteNetworksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NorthboundConfigurator_LoadNetworks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadNetworksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthboundConfiguratorServer).LoadNetworks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.NorthboundConfigurator/LoadNetworks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthboundConfiguratorServer).LoadNetworks(ctx, req.(*LoadNetworksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NorthboundConfigurator_WriteEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteEntitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthboundConfiguratorServer).WriteEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.NorthboundConfigurator/WriteEntities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthboundConfiguratorServer).WriteEntities(ctx, req.(*WriteEntitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NorthboundConfigurator_CreateEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEntitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthboundConfiguratorServer).CreateEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.NorthboundConfigurator/CreateEntities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthboundConfiguratorServer).CreateEntities(ctx, req.(*CreateEntitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NorthboundConfigurator_UpdateEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEntitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthboundConfiguratorServer).UpdateEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.NorthboundConfigurator/UpdateEntities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthboundConfiguratorServer).UpdateEntities(ctx, req.(*UpdateEntitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NorthboundConfigurator_DeleteEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEntitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthboundConfiguratorServer).DeleteEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.NorthboundConfigurator/DeleteEntities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthboundConfiguratorServer).DeleteEntities(ctx, req.(*DeleteEntitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NorthboundConfigurator_LoadEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadEntitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthboundConfiguratorServer).LoadEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.NorthboundConfigurator/LoadEntities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthboundConfiguratorServer).LoadEntities(ctx, req.(*LoadEntitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NorthboundConfigurator_CountEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadEntitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthboundConfiguratorServer).CountEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.NorthboundConfigurator/CountEntities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthboundConfiguratorServer).CountEntities(ctx, req.(*LoadEntitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// NorthboundConfigurator_ServiceDesc is the grpc.ServiceDesc for NorthboundConfigurator service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var NorthboundConfigurator_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "magma.orc8r.configurator.NorthboundConfigurator",
	HandlerType: (*NorthboundConfiguratorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListNetworkIDs",
			Handler:    _NorthboundConfigurator_ListNetworkIDs_Handler,
		},
		{
			MethodName: "CreateNetworks",
			Handler:    _NorthboundConfigurator_CreateNetworks_Handler,
		},
		{
			MethodName: "UpdateNetworks",
			Handler:    _NorthboundConfigurator_UpdateNetworks_Handler,
		},
		{
			MethodName: "DeleteNetworks",
			Handler:    _NorthboundConfigurator_DeleteNetworks_Handler,
		},
		{
			MethodName: "LoadNetworks",
			Handler:    _NorthboundConfigurator_LoadNetworks_Handler,
		},
		{
			MethodName: "WriteEntities",
			Handler:    _NorthboundConfigurator_WriteEntities_Handler,
		},
		{
			MethodName: "CreateEntities",
			Handler:    _NorthboundConfigurator_CreateEntities_Handler,
		},
		{
			MethodName: "UpdateEntities",
			Handler:    _NorthboundConfigurator_UpdateEntities_Handler,
		},
		{
			MethodName: "DeleteEntities",
			Handler:    _NorthboundConfigurator_DeleteEntities_Handler,
		},
		{
			MethodName: "LoadEntities",
			Handler:    _NorthboundConfigurator_LoadEntities_Handler,
		},
		{
			MethodName: "CountEntities",
			Handler:    _NorthboundConfigurator_CountEntities_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orc8r/cloud/go/services/configurator/protos/northbound.proto",
}
