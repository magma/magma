//
//Copyright 2020 The Magma Authors.
//
//This source code is licensed under the BSD-style license found in the
//LICENSE file in the root directory of this source tree.
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.10.0
// source: orc8r/cloud/go/services/configurator/protos/northbound.proto

package protos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	storage "magma/orc8r/cloud/go/services/configurator/storage"
	protos "magma/orc8r/lib/go/protos"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListNetworkIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkIDs []string `protobuf:"bytes,1,rep,name=networkIDs,proto3" json:"networkIDs,omitempty"`
}

func (x *ListNetworkIDsResponse) Reset() {
	*x = ListNetworkIDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNetworkIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworkIDsResponse) ProtoMessage() {}

func (x *ListNetworkIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworkIDsResponse.ProtoReflect.Descriptor instead.
func (*ListNetworkIDsResponse) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDescGZIP(), []int{0}
}

func (x *ListNetworkIDsResponse) GetNetworkIDs() []string {
	if x != nil {
		return x.NetworkIDs
	}
	return nil
}

type LoadNetworksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Criteria *storage.NetworkLoadCriteria `protobuf:"bytes,2,opt,name=criteria,proto3" json:"criteria,omitempty"`
	Filter   *storage.NetworkLoadFilter   `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *LoadNetworksRequest) Reset() {
	*x = LoadNetworksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadNetworksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadNetworksRequest) ProtoMessage() {}

func (x *LoadNetworksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadNetworksRequest.ProtoReflect.Descriptor instead.
func (*LoadNetworksRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDescGZIP(), []int{1}
}

func (x *LoadNetworksRequest) GetCriteria() *storage.NetworkLoadCriteria {
	if x != nil {
		return x.Criteria
	}
	return nil
}

func (x *LoadNetworksRequest) GetFilter() *storage.NetworkLoadFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type CreateNetworksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Networks []*storage.Network `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
}

func (x *CreateNetworksRequest) Reset() {
	*x = CreateNetworksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNetworksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworksRequest) ProtoMessage() {}

func (x *CreateNetworksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNetworksRequest.ProtoReflect.Descriptor instead.
func (*CreateNetworksRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDescGZIP(), []int{2}
}

func (x *CreateNetworksRequest) GetNetworks() []*storage.Network {
	if x != nil {
		return x.Networks
	}
	return nil
}

type CreateNetworksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedNetworks []*storage.Network `protobuf:"bytes,1,rep,name=created_networks,json=createdNetworks,proto3" json:"created_networks,omitempty"`
}

func (x *CreateNetworksResponse) Reset() {
	*x = CreateNetworksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNetworksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworksResponse) ProtoMessage() {}

func (x *CreateNetworksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNetworksResponse.ProtoReflect.Descriptor instead.
func (*CreateNetworksResponse) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDescGZIP(), []int{3}
}

func (x *CreateNetworksResponse) GetCreatedNetworks() []*storage.Network {
	if x != nil {
		return x.CreatedNetworks
	}
	return nil
}

type UpdateNetworksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updates []*storage.NetworkUpdateCriteria `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
}

func (x *UpdateNetworksRequest) Reset() {
	*x = UpdateNetworksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNetworksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNetworksRequest) ProtoMessage() {}

func (x *UpdateNetworksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNetworksRequest.ProtoReflect.Descriptor instead.
func (*UpdateNetworksRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateNetworksRequest) GetUpdates() []*storage.NetworkUpdateCriteria {
	if x != nil {
		return x.Updates
	}
	return nil
}

type DeleteNetworksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkIDs []string `protobuf:"bytes,1,rep,name=networkIDs,proto3" json:"networkIDs,omitempty"`
}

func (x *DeleteNetworksRequest) Reset() {
	*x = DeleteNetworksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNetworksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNetworksRequest) ProtoMessage() {}

func (x *DeleteNetworksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNetworksRequest.ProtoReflect.Descriptor instead.
func (*DeleteNetworksRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteNetworksRequest) GetNetworkIDs() []string {
	if x != nil {
		return x.NetworkIDs
	}
	return nil
}

type LoadEntitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkID string                      `protobuf:"bytes,1,opt,name=networkID,proto3" json:"networkID,omitempty"`
	Filter    *storage.EntityLoadFilter   `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Criteria  *storage.EntityLoadCriteria `protobuf:"bytes,3,opt,name=criteria,proto3" json:"criteria,omitempty"`
}

func (x *LoadEntitiesRequest) Reset() {
	*x = LoadEntitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadEntitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadEntitiesRequest) ProtoMessage() {}

func (x *LoadEntitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadEntitiesRequest.ProtoReflect.Descriptor instead.
func (*LoadEntitiesRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDescGZIP(), []int{6}
}

func (x *LoadEntitiesRequest) GetNetworkID() string {
	if x != nil {
		return x.NetworkID
	}
	return ""
}

func (x *LoadEntitiesRequest) GetFilter() *storage.EntityLoadFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *LoadEntitiesRequest) GetCriteria() *storage.EntityLoadCriteria {
	if x != nil {
		return x.Criteria
	}
	return nil
}

type WriteEntitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkID string                `protobuf:"bytes,1,opt,name=networkID,proto3" json:"networkID,omitempty"`
	Writes    []*WriteEntityRequest `protobuf:"bytes,2,rep,name=writes,proto3" json:"writes,omitempty"`
}

func (x *WriteEntitiesRequest) Reset() {
	*x = WriteEntitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteEntitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteEntitiesRequest) ProtoMessage() {}

func (x *WriteEntitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteEntitiesRequest.ProtoReflect.Descriptor instead.
func (*WriteEntitiesRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDescGZIP(), []int{7}
}

func (x *WriteEntitiesRequest) GetNetworkID() string {
	if x != nil {
		return x.NetworkID
	}
	return ""
}

func (x *WriteEntitiesRequest) GetWrites() []*WriteEntityRequest {
	if x != nil {
		return x.Writes
	}
	return nil
}

type WriteEntityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//	*WriteEntityRequest_Create
	//	*WriteEntityRequest_Update
	Request isWriteEntityRequest_Request `protobuf_oneof:"request"`
}

func (x *WriteEntityRequest) Reset() {
	*x = WriteEntityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteEntityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteEntityRequest) ProtoMessage() {}

func (x *WriteEntityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteEntityRequest.ProtoReflect.Descriptor instead.
func (*WriteEntityRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDescGZIP(), []int{8}
}

func (m *WriteEntityRequest) GetRequest() isWriteEntityRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *WriteEntityRequest) GetCreate() *storage.NetworkEntity {
	if x, ok := x.GetRequest().(*WriteEntityRequest_Create); ok {
		return x.Create
	}
	return nil
}

func (x *WriteEntityRequest) GetUpdate() *storage.EntityUpdateCriteria {
	if x, ok := x.GetRequest().(*WriteEntityRequest_Update); ok {
		return x.Update
	}
	return nil
}

type isWriteEntityRequest_Request interface {
	isWriteEntityRequest_Request()
}

type WriteEntityRequest_Create struct {
	Create *storage.NetworkEntity `protobuf:"bytes,1,opt,name=create,proto3,oneof"`
}

type WriteEntityRequest_Update struct {
	Update *storage.EntityUpdateCriteria `protobuf:"bytes,2,opt,name=update,proto3,oneof"`
}

func (*WriteEntityRequest_Create) isWriteEntityRequest_Request() {}

func (*WriteEntityRequest_Update) isWriteEntityRequest_Request() {}

type WriteEntitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedEntities []*storage.NetworkEntity          `protobuf:"bytes,1,rep,name=created_entities,json=createdEntities,proto3" json:"created_entities,omitempty"`
	UpdatedEntities map[string]*storage.NetworkEntity `protobuf:"bytes,2,rep,name=updated_entities,json=updatedEntities,proto3" json:"updated_entities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WriteEntitiesResponse) Reset() {
	*x = WriteEntitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteEntitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteEntitiesResponse) ProtoMessage() {}

func (x *WriteEntitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteEntitiesResponse.ProtoReflect.Descriptor instead.
func (*WriteEntitiesResponse) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDescGZIP(), []int{9}
}

func (x *WriteEntitiesResponse) GetCreatedEntities() []*storage.NetworkEntity {
	if x != nil {
		return x.CreatedEntities
	}
	return nil
}

func (x *WriteEntitiesResponse) GetUpdatedEntities() map[string]*storage.NetworkEntity {
	if x != nil {
		return x.UpdatedEntities
	}
	return nil
}

type CreateEntitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkID string                   `protobuf:"bytes,1,opt,name=networkID,proto3" json:"networkID,omitempty"`
	Entities  []*storage.NetworkEntity `protobuf:"bytes,2,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *CreateEntitiesRequest) Reset() {
	*x = CreateEntitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEntitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEntitiesRequest) ProtoMessage() {}

func (x *CreateEntitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEntitiesRequest.ProtoReflect.Descriptor instead.
func (*CreateEntitiesRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDescGZIP(), []int{10}
}

func (x *CreateEntitiesRequest) GetNetworkID() string {
	if x != nil {
		return x.NetworkID
	}
	return ""
}

func (x *CreateEntitiesRequest) GetEntities() []*storage.NetworkEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

type CreateEntitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedEntities []*storage.NetworkEntity `protobuf:"bytes,1,rep,name=created_entities,json=createdEntities,proto3" json:"created_entities,omitempty"`
}

func (x *CreateEntitiesResponse) Reset() {
	*x = CreateEntitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEntitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEntitiesResponse) ProtoMessage() {}

func (x *CreateEntitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEntitiesResponse.ProtoReflect.Descriptor instead.
func (*CreateEntitiesResponse) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDescGZIP(), []int{11}
}

func (x *CreateEntitiesResponse) GetCreatedEntities() []*storage.NetworkEntity {
	if x != nil {
		return x.CreatedEntities
	}
	return nil
}

type UpdateEntitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkID string                          `protobuf:"bytes,1,opt,name=networkID,proto3" json:"networkID,omitempty"`
	Updates   []*storage.EntityUpdateCriteria `protobuf:"bytes,2,rep,name=updates,proto3" json:"updates,omitempty"`
}

func (x *UpdateEntitiesRequest) Reset() {
	*x = UpdateEntitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEntitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEntitiesRequest) ProtoMessage() {}

func (x *UpdateEntitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEntitiesRequest.ProtoReflect.Descriptor instead.
func (*UpdateEntitiesRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateEntitiesRequest) GetNetworkID() string {
	if x != nil {
		return x.NetworkID
	}
	return ""
}

func (x *UpdateEntitiesRequest) GetUpdates() []*storage.EntityUpdateCriteria {
	if x != nil {
		return x.Updates
	}
	return nil
}

type UpdateEntitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdatedEntities map[string]*storage.NetworkEntity `protobuf:"bytes,1,rep,name=updated_entities,json=updatedEntities,proto3" json:"updated_entities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateEntitiesResponse) Reset() {
	*x = UpdateEntitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEntitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEntitiesResponse) ProtoMessage() {}

func (x *UpdateEntitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEntitiesResponse.ProtoReflect.Descriptor instead.
func (*UpdateEntitiesResponse) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateEntitiesResponse) GetUpdatedEntities() map[string]*storage.NetworkEntity {
	if x != nil {
		return x.UpdatedEntities
	}
	return nil
}

type DeleteEntitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkID string              `protobuf:"bytes,1,opt,name=networkID,proto3" json:"networkID,omitempty"`
	ID        []*storage.EntityID `protobuf:"bytes,2,rep,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteEntitiesRequest) Reset() {
	*x = DeleteEntitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEntitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEntitiesRequest) ProtoMessage() {}

func (x *DeleteEntitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEntitiesRequest.ProtoReflect.Descriptor instead.
func (*DeleteEntitiesRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteEntitiesRequest) GetNetworkID() string {
	if x != nil {
		return x.NetworkID
	}
	return ""
}

func (x *DeleteEntitiesRequest) GetID() []*storage.EntityID {
	if x != nil {
		return x.ID
	}
	return nil
}

var File_orc8r_cloud_go_services_configurator_protos_northbound_proto protoreflect.FileDescriptor

var file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDesc = []byte{
	0x0a, 0x3c, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6e, 0x6f,
	0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18,
	0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x19, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x3a, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x38, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x13, 0x4c, 0x6f,
	0x61, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x51, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38,
	0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x6f,
	0x61, 0x64, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x12, 0x4b, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63,
	0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4c,
	0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x22, 0x5e, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x08, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d,
	0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x22, 0x6e, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x10, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72,
	0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x22, 0x6a, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6d, 0x61,
	0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x37, 0x0a,
	0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x49, 0x44, 0x73, 0x22, 0xd1, 0x01, 0x0a, 0x13, 0x4c, 0x6f, 0x61, 0x64, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x12, 0x4a, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6d,
	0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6d, 0x61, 0x67,
	0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x61, 0x64, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x22, 0x7a, 0x0a, 0x14, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44,
	0x12, 0x44, 0x0a, 0x06, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x12, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a,
	0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x48, 0x00,
	0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x50, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61,
	0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x48, 0x00, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd9, 0x02, 0x0a, 0x15, 0x57, 0x72, 0x69, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5a, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6d, 0x61, 0x67, 0x6d,
	0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x6f, 0x0a, 0x10, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72,
	0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x73, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x45, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72,
	0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x82, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x12, 0x4b, 0x0a, 0x08, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6d, 0x61,
	0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x74, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5a, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6d, 0x61, 0x67,
	0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x87, 0x01, 0x0a,
	0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x49, 0x44, 0x12, 0x50, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72,
	0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0xff, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x70, 0x0a, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x6d, 0x61,
	0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x1a, 0x73, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x45, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6d,
	0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x71, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x12,
	0x3a, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x61,
	0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x02, 0x49, 0x44, 0x32, 0xb4, 0x09, 0x0a, 0x16,
	0x4e, 0x6f, 0x72, 0x74, 0x68, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x57, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x73, 0x12, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61,
	0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x1a, 0x30, 0x2e, 0x6d, 0x61,
	0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x75, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x12, 0x2f, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x2f, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61,
	0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d,
	0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x56,
	0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x12, 0x2f, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e,
	0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x0c, 0x4c, 0x6f, 0x61, 0x64, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x2d, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f,
	0x72, 0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72,
	0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x0d,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x2e,
	0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x75, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x2f, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38,
	0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2f, 0x2e, 0x6d, 0x61, 0x67, 0x6d,
	0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6d, 0x61, 0x67,
	0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56,
	0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x2f, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e,
	0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x0c, 0x4c, 0x6f, 0x61, 0x64, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2d, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f,
	0x72, 0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72,
	0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x0d, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2d, 0x2e, 0x6d,
	0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6d, 0x61,
	0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x00, 0x42, 0x33, 0x5a, 0x31, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2f, 0x6f, 0x72, 0x63, 0x38,
	0x72, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDescOnce sync.Once
	file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDescData = file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDesc
)

func file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDescGZIP() []byte {
	file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDescOnce.Do(func() {
		file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDescData = protoimpl.X.CompressGZIP(file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDescData)
	})
	return file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDescData
}

var file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_orc8r_cloud_go_services_configurator_protos_northbound_proto_goTypes = []interface{}{
	(*ListNetworkIDsResponse)(nil),        // 0: magma.orc8r.configurator.ListNetworkIDsResponse
	(*LoadNetworksRequest)(nil),           // 1: magma.orc8r.configurator.LoadNetworksRequest
	(*CreateNetworksRequest)(nil),         // 2: magma.orc8r.configurator.CreateNetworksRequest
	(*CreateNetworksResponse)(nil),        // 3: magma.orc8r.configurator.CreateNetworksResponse
	(*UpdateNetworksRequest)(nil),         // 4: magma.orc8r.configurator.UpdateNetworksRequest
	(*DeleteNetworksRequest)(nil),         // 5: magma.orc8r.configurator.DeleteNetworksRequest
	(*LoadEntitiesRequest)(nil),           // 6: magma.orc8r.configurator.LoadEntitiesRequest
	(*WriteEntitiesRequest)(nil),          // 7: magma.orc8r.configurator.WriteEntitiesRequest
	(*WriteEntityRequest)(nil),            // 8: magma.orc8r.configurator.WriteEntityRequest
	(*WriteEntitiesResponse)(nil),         // 9: magma.orc8r.configurator.WriteEntitiesResponse
	(*CreateEntitiesRequest)(nil),         // 10: magma.orc8r.configurator.CreateEntitiesRequest
	(*CreateEntitiesResponse)(nil),        // 11: magma.orc8r.configurator.CreateEntitiesResponse
	(*UpdateEntitiesRequest)(nil),         // 12: magma.orc8r.configurator.UpdateEntitiesRequest
	(*UpdateEntitiesResponse)(nil),        // 13: magma.orc8r.configurator.UpdateEntitiesResponse
	(*DeleteEntitiesRequest)(nil),         // 14: magma.orc8r.configurator.DeleteEntitiesRequest
	nil,                                   // 15: magma.orc8r.configurator.WriteEntitiesResponse.UpdatedEntitiesEntry
	nil,                                   // 16: magma.orc8r.configurator.UpdateEntitiesResponse.UpdatedEntitiesEntry
	(*storage.NetworkLoadCriteria)(nil),   // 17: magma.orc8r.configurator.storage.NetworkLoadCriteria
	(*storage.NetworkLoadFilter)(nil),     // 18: magma.orc8r.configurator.storage.NetworkLoadFilter
	(*storage.Network)(nil),               // 19: magma.orc8r.configurator.storage.Network
	(*storage.NetworkUpdateCriteria)(nil), // 20: magma.orc8r.configurator.storage.NetworkUpdateCriteria
	(*storage.EntityLoadFilter)(nil),      // 21: magma.orc8r.configurator.storage.EntityLoadFilter
	(*storage.EntityLoadCriteria)(nil),    // 22: magma.orc8r.configurator.storage.EntityLoadCriteria
	(*storage.NetworkEntity)(nil),         // 23: magma.orc8r.configurator.storage.NetworkEntity
	(*storage.EntityUpdateCriteria)(nil),  // 24: magma.orc8r.configurator.storage.EntityUpdateCriteria
	(*storage.EntityID)(nil),              // 25: magma.orc8r.configurator.storage.EntityID
	(*protos.Void)(nil),                   // 26: magma.orc8r.Void
	(*storage.NetworkLoadResult)(nil),     // 27: magma.orc8r.configurator.storage.NetworkLoadResult
	(*storage.EntityLoadResult)(nil),      // 28: magma.orc8r.configurator.storage.EntityLoadResult
	(*storage.EntityCountResult)(nil),     // 29: magma.orc8r.configurator.storage.EntityCountResult
}
var file_orc8r_cloud_go_services_configurator_protos_northbound_proto_depIdxs = []int32{
	17, // 0: magma.orc8r.configurator.LoadNetworksRequest.criteria:type_name -> magma.orc8r.configurator.storage.NetworkLoadCriteria
	18, // 1: magma.orc8r.configurator.LoadNetworksRequest.filter:type_name -> magma.orc8r.configurator.storage.NetworkLoadFilter
	19, // 2: magma.orc8r.configurator.CreateNetworksRequest.networks:type_name -> magma.orc8r.configurator.storage.Network
	19, // 3: magma.orc8r.configurator.CreateNetworksResponse.created_networks:type_name -> magma.orc8r.configurator.storage.Network
	20, // 4: magma.orc8r.configurator.UpdateNetworksRequest.updates:type_name -> magma.orc8r.configurator.storage.NetworkUpdateCriteria
	21, // 5: magma.orc8r.configurator.LoadEntitiesRequest.filter:type_name -> magma.orc8r.configurator.storage.EntityLoadFilter
	22, // 6: magma.orc8r.configurator.LoadEntitiesRequest.criteria:type_name -> magma.orc8r.configurator.storage.EntityLoadCriteria
	8,  // 7: magma.orc8r.configurator.WriteEntitiesRequest.writes:type_name -> magma.orc8r.configurator.WriteEntityRequest
	23, // 8: magma.orc8r.configurator.WriteEntityRequest.create:type_name -> magma.orc8r.configurator.storage.NetworkEntity
	24, // 9: magma.orc8r.configurator.WriteEntityRequest.update:type_name -> magma.orc8r.configurator.storage.EntityUpdateCriteria
	23, // 10: magma.orc8r.configurator.WriteEntitiesResponse.created_entities:type_name -> magma.orc8r.configurator.storage.NetworkEntity
	15, // 11: magma.orc8r.configurator.WriteEntitiesResponse.updated_entities:type_name -> magma.orc8r.configurator.WriteEntitiesResponse.UpdatedEntitiesEntry
	23, // 12: magma.orc8r.configurator.CreateEntitiesRequest.entities:type_name -> magma.orc8r.configurator.storage.NetworkEntity
	23, // 13: magma.orc8r.configurator.CreateEntitiesResponse.created_entities:type_name -> magma.orc8r.configurator.storage.NetworkEntity
	24, // 14: magma.orc8r.configurator.UpdateEntitiesRequest.updates:type_name -> magma.orc8r.configurator.storage.EntityUpdateCriteria
	16, // 15: magma.orc8r.configurator.UpdateEntitiesResponse.updated_entities:type_name -> magma.orc8r.configurator.UpdateEntitiesResponse.UpdatedEntitiesEntry
	25, // 16: magma.orc8r.configurator.DeleteEntitiesRequest.ID:type_name -> magma.orc8r.configurator.storage.EntityID
	23, // 17: magma.orc8r.configurator.WriteEntitiesResponse.UpdatedEntitiesEntry.value:type_name -> magma.orc8r.configurator.storage.NetworkEntity
	23, // 18: magma.orc8r.configurator.UpdateEntitiesResponse.UpdatedEntitiesEntry.value:type_name -> magma.orc8r.configurator.storage.NetworkEntity
	26, // 19: magma.orc8r.configurator.NorthboundConfigurator.ListNetworkIDs:input_type -> magma.orc8r.Void
	2,  // 20: magma.orc8r.configurator.NorthboundConfigurator.CreateNetworks:input_type -> magma.orc8r.configurator.CreateNetworksRequest
	4,  // 21: magma.orc8r.configurator.NorthboundConfigurator.UpdateNetworks:input_type -> magma.orc8r.configurator.UpdateNetworksRequest
	5,  // 22: magma.orc8r.configurator.NorthboundConfigurator.DeleteNetworks:input_type -> magma.orc8r.configurator.DeleteNetworksRequest
	1,  // 23: magma.orc8r.configurator.NorthboundConfigurator.LoadNetworks:input_type -> magma.orc8r.configurator.LoadNetworksRequest
	7,  // 24: magma.orc8r.configurator.NorthboundConfigurator.WriteEntities:input_type -> magma.orc8r.configurator.WriteEntitiesRequest
	10, // 25: magma.orc8r.configurator.NorthboundConfigurator.CreateEntities:input_type -> magma.orc8r.configurator.CreateEntitiesRequest
	12, // 26: magma.orc8r.configurator.NorthboundConfigurator.UpdateEntities:input_type -> magma.orc8r.configurator.UpdateEntitiesRequest
	14, // 27: magma.orc8r.configurator.NorthboundConfigurator.DeleteEntities:input_type -> magma.orc8r.configurator.DeleteEntitiesRequest
	6,  // 28: magma.orc8r.configurator.NorthboundConfigurator.LoadEntities:input_type -> magma.orc8r.configurator.LoadEntitiesRequest
	6,  // 29: magma.orc8r.configurator.NorthboundConfigurator.CountEntities:input_type -> magma.orc8r.configurator.LoadEntitiesRequest
	0,  // 30: magma.orc8r.configurator.NorthboundConfigurator.ListNetworkIDs:output_type -> magma.orc8r.configurator.ListNetworkIDsResponse
	3,  // 31: magma.orc8r.configurator.NorthboundConfigurator.CreateNetworks:output_type -> magma.orc8r.configurator.CreateNetworksResponse
	26, // 32: magma.orc8r.configurator.NorthboundConfigurator.UpdateNetworks:output_type -> magma.orc8r.Void
	26, // 33: magma.orc8r.configurator.NorthboundConfigurator.DeleteNetworks:output_type -> magma.orc8r.Void
	27, // 34: magma.orc8r.configurator.NorthboundConfigurator.LoadNetworks:output_type -> magma.orc8r.configurator.storage.NetworkLoadResult
	9,  // 35: magma.orc8r.configurator.NorthboundConfigurator.WriteEntities:output_type -> magma.orc8r.configurator.WriteEntitiesResponse
	11, // 36: magma.orc8r.configurator.NorthboundConfigurator.CreateEntities:output_type -> magma.orc8r.configurator.CreateEntitiesResponse
	13, // 37: magma.orc8r.configurator.NorthboundConfigurator.UpdateEntities:output_type -> magma.orc8r.configurator.UpdateEntitiesResponse
	26, // 38: magma.orc8r.configurator.NorthboundConfigurator.DeleteEntities:output_type -> magma.orc8r.Void
	28, // 39: magma.orc8r.configurator.NorthboundConfigurator.LoadEntities:output_type -> magma.orc8r.configurator.storage.EntityLoadResult
	29, // 40: magma.orc8r.configurator.NorthboundConfigurator.CountEntities:output_type -> magma.orc8r.configurator.storage.EntityCountResult
	30, // [30:41] is the sub-list for method output_type
	19, // [19:30] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_orc8r_cloud_go_services_configurator_protos_northbound_proto_init() }
func file_orc8r_cloud_go_services_configurator_protos_northbound_proto_init() {
	if File_orc8r_cloud_go_services_configurator_protos_northbound_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNetworkIDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadNetworksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNetworksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNetworksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNetworksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNetworksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadEntitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteEntitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteEntityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteEntitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEntitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEntitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEntitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEntitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEntitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*WriteEntityRequest_Create)(nil),
		(*WriteEntityRequest_Update)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_orc8r_cloud_go_services_configurator_protos_northbound_proto_goTypes,
		DependencyIndexes: file_orc8r_cloud_go_services_configurator_protos_northbound_proto_depIdxs,
		MessageInfos:      file_orc8r_cloud_go_services_configurator_protos_northbound_proto_msgTypes,
	}.Build()
	File_orc8r_cloud_go_services_configurator_protos_northbound_proto = out.File
	file_orc8r_cloud_go_services_configurator_protos_northbound_proto_rawDesc = nil
	file_orc8r_cloud_go_services_configurator_protos_northbound_proto_goTypes = nil
	file_orc8r_cloud_go_services_configurator_protos_northbound_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NorthboundConfiguratorClient is the client API for NorthboundConfigurator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NorthboundConfiguratorClient interface {
	// ListNetworkIDs fetches the list of networkIDs registered
	ListNetworkIDs(ctx context.Context, in *protos.Void, opts ...grpc.CallOption) (*ListNetworkIDsResponse, error)
	// CreateNetworks registers the given list of Networks and returns the created Networks
	CreateNetworks(ctx context.Context, in *CreateNetworksRequest, opts ...grpc.CallOption) (*CreateNetworksResponse, error)
	// UpdateNetworks updates the given list of registered Networks
	UpdateNetworks(ctx context.Context, in *UpdateNetworksRequest, opts ...grpc.CallOption) (*protos.Void, error)
	// DeleteNetworks deletes the given list of registered Networks
	DeleteNetworks(ctx context.Context, in *DeleteNetworksRequest, opts ...grpc.CallOption) (*protos.Void, error)
	// LoadNetworks fetches the set of Networks specified by the request
	LoadNetworks(ctx context.Context, in *LoadNetworksRequest, opts ...grpc.CallOption) (*storage.NetworkLoadResult, error)
	// Perform multiple operations (create/update/delete) in a single
	// transaction
	WriteEntities(ctx context.Context, in *WriteEntitiesRequest, opts ...grpc.CallOption) (*WriteEntitiesResponse, error)
	// CreateEntities registers the given list of Entities and returns the created Entities
	CreateEntities(ctx context.Context, in *CreateEntitiesRequest, opts ...grpc.CallOption) (*CreateEntitiesResponse, error)
	// UpdateEntities updates the given list of registered Entities and returns the updated Entities
	UpdateEntities(ctx context.Context, in *UpdateEntitiesRequest, opts ...grpc.CallOption) (*UpdateEntitiesResponse, error)
	// DeleteEntities deletes the set of Entities registered
	DeleteEntities(ctx context.Context, in *DeleteEntitiesRequest, opts ...grpc.CallOption) (*protos.Void, error)
	// LoadEntities fetches the set of Entities specified by the request
	LoadEntities(ctx context.Context, in *LoadEntitiesRequest, opts ...grpc.CallOption) (*storage.EntityLoadResult, error)
	// CountEntities counts the number of Entities specified by the request
	CountEntities(ctx context.Context, in *LoadEntitiesRequest, opts ...grpc.CallOption) (*storage.EntityCountResult, error)
}

type northboundConfiguratorClient struct {
	cc grpc.ClientConnInterface
}

func NewNorthboundConfiguratorClient(cc grpc.ClientConnInterface) NorthboundConfiguratorClient {
	return &northboundConfiguratorClient{cc}
}

func (c *northboundConfiguratorClient) ListNetworkIDs(ctx context.Context, in *protos.Void, opts ...grpc.CallOption) (*ListNetworkIDsResponse, error) {
	out := new(ListNetworkIDsResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.NorthboundConfigurator/ListNetworkIDs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *northboundConfiguratorClient) CreateNetworks(ctx context.Context, in *CreateNetworksRequest, opts ...grpc.CallOption) (*CreateNetworksResponse, error) {
	out := new(CreateNetworksResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.NorthboundConfigurator/CreateNetworks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *northboundConfiguratorClient) UpdateNetworks(ctx context.Context, in *UpdateNetworksRequest, opts ...grpc.CallOption) (*protos.Void, error) {
	out := new(protos.Void)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.NorthboundConfigurator/UpdateNetworks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *northboundConfiguratorClient) DeleteNetworks(ctx context.Context, in *DeleteNetworksRequest, opts ...grpc.CallOption) (*protos.Void, error) {
	out := new(protos.Void)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.NorthboundConfigurator/DeleteNetworks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *northboundConfiguratorClient) LoadNetworks(ctx context.Context, in *LoadNetworksRequest, opts ...grpc.CallOption) (*storage.NetworkLoadResult, error) {
	out := new(storage.NetworkLoadResult)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.NorthboundConfigurator/LoadNetworks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *northboundConfiguratorClient) WriteEntities(ctx context.Context, in *WriteEntitiesRequest, opts ...grpc.CallOption) (*WriteEntitiesResponse, error) {
	out := new(WriteEntitiesResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.NorthboundConfigurator/WriteEntities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *northboundConfiguratorClient) CreateEntities(ctx context.Context, in *CreateEntitiesRequest, opts ...grpc.CallOption) (*CreateEntitiesResponse, error) {
	out := new(CreateEntitiesResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.NorthboundConfigurator/CreateEntities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *northboundConfiguratorClient) UpdateEntities(ctx context.Context, in *UpdateEntitiesRequest, opts ...grpc.CallOption) (*UpdateEntitiesResponse, error) {
	out := new(UpdateEntitiesResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.NorthboundConfigurator/UpdateEntities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *northboundConfiguratorClient) DeleteEntities(ctx context.Context, in *DeleteEntitiesRequest, opts ...grpc.CallOption) (*protos.Void, error) {
	out := new(protos.Void)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.NorthboundConfigurator/DeleteEntities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *northboundConfiguratorClient) LoadEntities(ctx context.Context, in *LoadEntitiesRequest, opts ...grpc.CallOption) (*storage.EntityLoadResult, error) {
	out := new(storage.EntityLoadResult)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.NorthboundConfigurator/LoadEntities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *northboundConfiguratorClient) CountEntities(ctx context.Context, in *LoadEntitiesRequest, opts ...grpc.CallOption) (*storage.EntityCountResult, error) {
	out := new(storage.EntityCountResult)
	err := c.cc.Invoke(ctx, "/magma.orc8r.configurator.NorthboundConfigurator/CountEntities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NorthboundConfiguratorServer is the server API for NorthboundConfigurator service.
type NorthboundConfiguratorServer interface {
	// ListNetworkIDs fetches the list of networkIDs registered
	ListNetworkIDs(context.Context, *protos.Void) (*ListNetworkIDsResponse, error)
	// CreateNetworks registers the given list of Networks and returns the created Networks
	CreateNetworks(context.Context, *CreateNetworksRequest) (*CreateNetworksResponse, error)
	// UpdateNetworks updates the given list of registered Networks
	UpdateNetworks(context.Context, *UpdateNetworksRequest) (*protos.Void, error)
	// DeleteNetworks deletes the given list of registered Networks
	DeleteNetworks(context.Context, *DeleteNetworksRequest) (*protos.Void, error)
	// LoadNetworks fetches the set of Networks specified by the request
	LoadNetworks(context.Context, *LoadNetworksRequest) (*storage.NetworkLoadResult, error)
	// Perform multiple operations (create/update/delete) in a single
	// transaction
	WriteEntities(context.Context, *WriteEntitiesRequest) (*WriteEntitiesResponse, error)
	// CreateEntities registers the given list of Entities and returns the created Entities
	CreateEntities(context.Context, *CreateEntitiesRequest) (*CreateEntitiesResponse, error)
	// UpdateEntities updates the given list of registered Entities and returns the updated Entities
	UpdateEntities(context.Context, *UpdateEntitiesRequest) (*UpdateEntitiesResponse, error)
	// DeleteEntities deletes the set of Entities registered
	DeleteEntities(context.Context, *DeleteEntitiesRequest) (*protos.Void, error)
	// LoadEntities fetches the set of Entities specified by the request
	LoadEntities(context.Context, *LoadEntitiesRequest) (*storage.EntityLoadResult, error)
	// CountEntities counts the number of Entities specified by the request
	CountEntities(context.Context, *LoadEntitiesRequest) (*storage.EntityCountResult, error)
}

// UnimplementedNorthboundConfiguratorServer can be embedded to have forward compatible implementations.
type UnimplementedNorthboundConfiguratorServer struct {
}

func (*UnimplementedNorthboundConfiguratorServer) ListNetworkIDs(context.Context, *protos.Void) (*ListNetworkIDsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNetworkIDs not implemented")
}
func (*UnimplementedNorthboundConfiguratorServer) CreateNetworks(context.Context, *CreateNetworksRequest) (*CreateNetworksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNetworks not implemented")
}
func (*UnimplementedNorthboundConfiguratorServer) UpdateNetworks(context.Context, *UpdateNetworksRequest) (*protos.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNetworks not implemented")
}
func (*UnimplementedNorthboundConfiguratorServer) DeleteNetworks(context.Context, *DeleteNetworksRequest) (*protos.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNetworks not implemented")
}
func (*UnimplementedNorthboundConfiguratorServer) LoadNetworks(context.Context, *LoadNetworksRequest) (*storage.NetworkLoadResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadNetworks not implemented")
}
func (*UnimplementedNorthboundConfiguratorServer) WriteEntities(context.Context, *WriteEntitiesRequest) (*WriteEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WriteEntities not implemented")
}
func (*UnimplementedNorthboundConfiguratorServer) CreateEntities(context.Context, *CreateEntitiesRequest) (*CreateEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEntities not implemented")
}
func (*UnimplementedNorthboundConfiguratorServer) UpdateEntities(context.Context, *UpdateEntitiesRequest) (*UpdateEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEntities not implemented")
}
func (*UnimplementedNorthboundConfiguratorServer) DeleteEntities(context.Context, *DeleteEntitiesRequest) (*protos.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEntities not implemented")
}
func (*UnimplementedNorthboundConfiguratorServer) LoadEntities(context.Context, *LoadEntitiesRequest) (*storage.EntityLoadResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadEntities not implemented")
}
func (*UnimplementedNorthboundConfiguratorServer) CountEntities(context.Context, *LoadEntitiesRequest) (*storage.EntityCountResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountEntities not implemented")
}

func RegisterNorthboundConfiguratorServer(s *grpc.Server, srv NorthboundConfiguratorServer) {
	s.RegisterService(&_NorthboundConfigurator_serviceDesc, srv)
}

func _NorthboundConfigurator_ListNetworkIDs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(protos.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthboundConfiguratorServer).ListNetworkIDs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.NorthboundConfigurator/ListNetworkIDs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthboundConfiguratorServer).ListNetworkIDs(ctx, req.(*protos.Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _NorthboundConfigurator_CreateNetworks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNetworksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthboundConfiguratorServer).CreateNetworks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.NorthboundConfigurator/CreateNetworks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthboundConfiguratorServer).CreateNetworks(ctx, req.(*CreateNetworksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NorthboundConfigurator_UpdateNetworks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNetworksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthboundConfiguratorServer).UpdateNetworks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.NorthboundConfigurator/UpdateNetworks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthboundConfiguratorServer).UpdateNetworks(ctx, req.(*UpdateNetworksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NorthboundConfigurator_DeleteNetworks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNetworksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthboundConfiguratorServer).DeleteNetworks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.NorthboundConfigurator/DeleteNetworks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthboundConfiguratorServer).DeleteNetworks(ctx, req.(*DeleteNetworksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NorthboundConfigurator_LoadNetworks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadNetworksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthboundConfiguratorServer).LoadNetworks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.NorthboundConfigurator/LoadNetworks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthboundConfiguratorServer).LoadNetworks(ctx, req.(*LoadNetworksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NorthboundConfigurator_WriteEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteEntitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthboundConfiguratorServer).WriteEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.NorthboundConfigurator/WriteEntities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthboundConfiguratorServer).WriteEntities(ctx, req.(*WriteEntitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NorthboundConfigurator_CreateEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEntitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthboundConfiguratorServer).CreateEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.NorthboundConfigurator/CreateEntities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthboundConfiguratorServer).CreateEntities(ctx, req.(*CreateEntitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NorthboundConfigurator_UpdateEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEntitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthboundConfiguratorServer).UpdateEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.NorthboundConfigurator/UpdateEntities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthboundConfiguratorServer).UpdateEntities(ctx, req.(*UpdateEntitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NorthboundConfigurator_DeleteEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEntitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthboundConfiguratorServer).DeleteEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.NorthboundConfigurator/DeleteEntities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthboundConfiguratorServer).DeleteEntities(ctx, req.(*DeleteEntitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NorthboundConfigurator_LoadEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadEntitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthboundConfiguratorServer).LoadEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.NorthboundConfigurator/LoadEntities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthboundConfiguratorServer).LoadEntities(ctx, req.(*LoadEntitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NorthboundConfigurator_CountEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadEntitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NorthboundConfiguratorServer).CountEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.configurator.NorthboundConfigurator/CountEntities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NorthboundConfiguratorServer).CountEntities(ctx, req.(*LoadEntitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NorthboundConfigurator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.orc8r.configurator.NorthboundConfigurator",
	HandlerType: (*NorthboundConfiguratorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListNetworkIDs",
			Handler:    _NorthboundConfigurator_ListNetworkIDs_Handler,
		},
		{
			MethodName: "CreateNetworks",
			Handler:    _NorthboundConfigurator_CreateNetworks_Handler,
		},
		{
			MethodName: "UpdateNetworks",
			Handler:    _NorthboundConfigurator_UpdateNetworks_Handler,
		},
		{
			MethodName: "DeleteNetworks",
			Handler:    _NorthboundConfigurator_DeleteNetworks_Handler,
		},
		{
			MethodName: "LoadNetworks",
			Handler:    _NorthboundConfigurator_LoadNetworks_Handler,
		},
		{
			MethodName: "WriteEntities",
			Handler:    _NorthboundConfigurator_WriteEntities_Handler,
		},
		{
			MethodName: "CreateEntities",
			Handler:    _NorthboundConfigurator_CreateEntities_Handler,
		},
		{
			MethodName: "UpdateEntities",
			Handler:    _NorthboundConfigurator_UpdateEntities_Handler,
		},
		{
			MethodName: "DeleteEntities",
			Handler:    _NorthboundConfigurator_DeleteEntities_Handler,
		},
		{
			MethodName: "LoadEntities",
			Handler:    _NorthboundConfigurator_LoadEntities_Handler,
		},
		{
			MethodName: "CountEntities",
			Handler:    _NorthboundConfigurator_CountEntities_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orc8r/cloud/go/services/configurator/protos/northbound.proto",
}
