//
//Copyright 2020 The Magma Authors.
//
//This source code is licensed under the BSD-style license found in the
//LICENSE file in the root directory of this source tree.
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.10.0
// source: orc8r/cloud/go/services/directoryd/protos/directoryd.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	protos "magma/orc8r/lib/go/protos"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetHostnameForHWIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hwid string `protobuf:"bytes,1,opt,name=hwid,proto3" json:"hwid,omitempty"`
}

func (x *GetHostnameForHWIDRequest) Reset() {
	*x = GetHostnameForHWIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHostnameForHWIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHostnameForHWIDRequest) ProtoMessage() {}

func (x *GetHostnameForHWIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHostnameForHWIDRequest.ProtoReflect.Descriptor instead.
func (*GetHostnameForHWIDRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescGZIP(), []int{0}
}

func (x *GetHostnameForHWIDRequest) GetHwid() string {
	if x != nil {
		return x.Hwid
	}
	return ""
}

type GetHostnameForHWIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
}

func (x *GetHostnameForHWIDResponse) Reset() {
	*x = GetHostnameForHWIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHostnameForHWIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHostnameForHWIDResponse) ProtoMessage() {}

func (x *GetHostnameForHWIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHostnameForHWIDResponse.ProtoReflect.Descriptor instead.
func (*GetHostnameForHWIDResponse) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescGZIP(), []int{1}
}

func (x *GetHostnameForHWIDResponse) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type MapHWIDToHostnameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HwidToHostname map[string]string `protobuf:"bytes,1,rep,name=hwidToHostname,proto3" json:"hwidToHostname,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MapHWIDToHostnameRequest) Reset() {
	*x = MapHWIDToHostnameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapHWIDToHostnameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapHWIDToHostnameRequest) ProtoMessage() {}

func (x *MapHWIDToHostnameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapHWIDToHostnameRequest.ProtoReflect.Descriptor instead.
func (*MapHWIDToHostnameRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescGZIP(), []int{2}
}

func (x *MapHWIDToHostnameRequest) GetHwidToHostname() map[string]string {
	if x != nil {
		return x.HwidToHostname
	}
	return nil
}

type UnmapHWIDToHostnameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hwids []string `protobuf:"bytes,1,rep,name=hwids,proto3" json:"hwids,omitempty"`
}

func (x *UnmapHWIDToHostnameRequest) Reset() {
	*x = UnmapHWIDToHostnameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnmapHWIDToHostnameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmapHWIDToHostnameRequest) ProtoMessage() {}

func (x *UnmapHWIDToHostnameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmapHWIDToHostnameRequest.ProtoReflect.Descriptor instead.
func (*UnmapHWIDToHostnameRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescGZIP(), []int{3}
}

func (x *UnmapHWIDToHostnameRequest) GetHwids() []string {
	if x != nil {
		return x.Hwids
	}
	return nil
}

type GetIMSIForSessionIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkID string `protobuf:"bytes,1,opt,name=networkID,proto3" json:"networkID,omitempty"`
	SessionID string `protobuf:"bytes,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *GetIMSIForSessionIDRequest) Reset() {
	*x = GetIMSIForSessionIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIMSIForSessionIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIMSIForSessionIDRequest) ProtoMessage() {}

func (x *GetIMSIForSessionIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIMSIForSessionIDRequest.ProtoReflect.Descriptor instead.
func (*GetIMSIForSessionIDRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescGZIP(), []int{4}
}

func (x *GetIMSIForSessionIDRequest) GetNetworkID() string {
	if x != nil {
		return x.NetworkID
	}
	return ""
}

func (x *GetIMSIForSessionIDRequest) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type GetIMSIForSessionIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
}

func (x *GetIMSIForSessionIDResponse) Reset() {
	*x = GetIMSIForSessionIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIMSIForSessionIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIMSIForSessionIDResponse) ProtoMessage() {}

func (x *GetIMSIForSessionIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIMSIForSessionIDResponse.ProtoReflect.Descriptor instead.
func (*GetIMSIForSessionIDResponse) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescGZIP(), []int{5}
}

func (x *GetIMSIForSessionIDResponse) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

type MapSessionIDToIMSIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkID       string            `protobuf:"bytes,1,opt,name=networkID,proto3" json:"networkID,omitempty"`
	SessionIDToIMSI map[string]string `protobuf:"bytes,2,rep,name=sessionIDToIMSI,proto3" json:"sessionIDToIMSI,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MapSessionIDToIMSIRequest) Reset() {
	*x = MapSessionIDToIMSIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapSessionIDToIMSIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapSessionIDToIMSIRequest) ProtoMessage() {}

func (x *MapSessionIDToIMSIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapSessionIDToIMSIRequest.ProtoReflect.Descriptor instead.
func (*MapSessionIDToIMSIRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescGZIP(), []int{6}
}

func (x *MapSessionIDToIMSIRequest) GetNetworkID() string {
	if x != nil {
		return x.NetworkID
	}
	return ""
}

func (x *MapSessionIDToIMSIRequest) GetSessionIDToIMSI() map[string]string {
	if x != nil {
		return x.SessionIDToIMSI
	}
	return nil
}

type UnmapSessionIDToIMSIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkID  string   `protobuf:"bytes,1,opt,name=networkID,proto3" json:"networkID,omitempty"`
	SessionIDs []string `protobuf:"bytes,2,rep,name=sessionIDs,proto3" json:"sessionIDs,omitempty"`
}

func (x *UnmapSessionIDToIMSIRequest) Reset() {
	*x = UnmapSessionIDToIMSIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnmapSessionIDToIMSIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmapSessionIDToIMSIRequest) ProtoMessage() {}

func (x *UnmapSessionIDToIMSIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmapSessionIDToIMSIRequest.ProtoReflect.Descriptor instead.
func (*UnmapSessionIDToIMSIRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescGZIP(), []int{7}
}

func (x *UnmapSessionIDToIMSIRequest) GetNetworkID() string {
	if x != nil {
		return x.NetworkID
	}
	return ""
}

func (x *UnmapSessionIDToIMSIRequest) GetSessionIDs() []string {
	if x != nil {
		return x.SessionIDs
	}
	return nil
}

// CTeid
type GetHWIDForSgwCTeidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkID string `protobuf:"bytes,1,opt,name=networkID,proto3" json:"networkID,omitempty"`
	Teid      string `protobuf:"bytes,2,opt,name=teid,proto3" json:"teid,omitempty"`
}

func (x *GetHWIDForSgwCTeidRequest) Reset() {
	*x = GetHWIDForSgwCTeidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHWIDForSgwCTeidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHWIDForSgwCTeidRequest) ProtoMessage() {}

func (x *GetHWIDForSgwCTeidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHWIDForSgwCTeidRequest.ProtoReflect.Descriptor instead.
func (*GetHWIDForSgwCTeidRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescGZIP(), []int{8}
}

func (x *GetHWIDForSgwCTeidRequest) GetNetworkID() string {
	if x != nil {
		return x.NetworkID
	}
	return ""
}

func (x *GetHWIDForSgwCTeidRequest) GetTeid() string {
	if x != nil {
		return x.Teid
	}
	return ""
}

type GetHWIDForSgwCTeidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hwid string `protobuf:"bytes,1,opt,name=hwid,proto3" json:"hwid,omitempty"`
}

func (x *GetHWIDForSgwCTeidResponse) Reset() {
	*x = GetHWIDForSgwCTeidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHWIDForSgwCTeidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHWIDForSgwCTeidResponse) ProtoMessage() {}

func (x *GetHWIDForSgwCTeidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHWIDForSgwCTeidResponse.ProtoReflect.Descriptor instead.
func (*GetHWIDForSgwCTeidResponse) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescGZIP(), []int{9}
}

func (x *GetHWIDForSgwCTeidResponse) GetHwid() string {
	if x != nil {
		return x.Hwid
	}
	return ""
}

type MapSgwCTeidToHWIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkID  string            `protobuf:"bytes,1,opt,name=networkID,proto3" json:"networkID,omitempty"`
	TeidToHwid map[string]string `protobuf:"bytes,2,rep,name=teidToHwid,proto3" json:"teidToHwid,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MapSgwCTeidToHWIDRequest) Reset() {
	*x = MapSgwCTeidToHWIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapSgwCTeidToHWIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapSgwCTeidToHWIDRequest) ProtoMessage() {}

func (x *MapSgwCTeidToHWIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapSgwCTeidToHWIDRequest.ProtoReflect.Descriptor instead.
func (*MapSgwCTeidToHWIDRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescGZIP(), []int{10}
}

func (x *MapSgwCTeidToHWIDRequest) GetNetworkID() string {
	if x != nil {
		return x.NetworkID
	}
	return ""
}

func (x *MapSgwCTeidToHWIDRequest) GetTeidToHwid() map[string]string {
	if x != nil {
		return x.TeidToHwid
	}
	return nil
}

type UnmapSgwCTeidToHWIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkID string   `protobuf:"bytes,1,opt,name=networkID,proto3" json:"networkID,omitempty"`
	Teids     []string `protobuf:"bytes,2,rep,name=teids,proto3" json:"teids,omitempty"`
}

func (x *UnmapSgwCTeidToHWIDRequest) Reset() {
	*x = UnmapSgwCTeidToHWIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnmapSgwCTeidToHWIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmapSgwCTeidToHWIDRequest) ProtoMessage() {}

func (x *UnmapSgwCTeidToHWIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmapSgwCTeidToHWIDRequest.ProtoReflect.Descriptor instead.
func (*UnmapSgwCTeidToHWIDRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescGZIP(), []int{11}
}

func (x *UnmapSgwCTeidToHWIDRequest) GetNetworkID() string {
	if x != nil {
		return x.NetworkID
	}
	return ""
}

func (x *UnmapSgwCTeidToHWIDRequest) GetTeids() []string {
	if x != nil {
		return x.Teids
	}
	return nil
}

type GetNewSgwCTeidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkID string `protobuf:"bytes,1,opt,name=networkID,proto3" json:"networkID,omitempty"`
}

func (x *GetNewSgwCTeidRequest) Reset() {
	*x = GetNewSgwCTeidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewSgwCTeidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewSgwCTeidRequest) ProtoMessage() {}

func (x *GetNewSgwCTeidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewSgwCTeidRequest.ProtoReflect.Descriptor instead.
func (*GetNewSgwCTeidRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescGZIP(), []int{12}
}

func (x *GetNewSgwCTeidRequest) GetNetworkID() string {
	if x != nil {
		return x.NetworkID
	}
	return ""
}

type GetNewSgwCTeidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teid string `protobuf:"bytes,1,opt,name=teid,proto3" json:"teid,omitempty"`
}

func (x *GetNewSgwCTeidResponse) Reset() {
	*x = GetNewSgwCTeidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewSgwCTeidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewSgwCTeidResponse) ProtoMessage() {}

func (x *GetNewSgwCTeidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewSgwCTeidResponse.ProtoReflect.Descriptor instead.
func (*GetNewSgwCTeidResponse) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescGZIP(), []int{13}
}

func (x *GetNewSgwCTeidResponse) GetTeid() string {
	if x != nil {
		return x.Teid
	}
	return ""
}

// UTeid
type GetHWIDForSgwUTeidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkID string `protobuf:"bytes,1,opt,name=networkID,proto3" json:"networkID,omitempty"`
	Teid      string `protobuf:"bytes,2,opt,name=teid,proto3" json:"teid,omitempty"`
}

func (x *GetHWIDForSgwUTeidRequest) Reset() {
	*x = GetHWIDForSgwUTeidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHWIDForSgwUTeidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHWIDForSgwUTeidRequest) ProtoMessage() {}

func (x *GetHWIDForSgwUTeidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHWIDForSgwUTeidRequest.ProtoReflect.Descriptor instead.
func (*GetHWIDForSgwUTeidRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescGZIP(), []int{14}
}

func (x *GetHWIDForSgwUTeidRequest) GetNetworkID() string {
	if x != nil {
		return x.NetworkID
	}
	return ""
}

func (x *GetHWIDForSgwUTeidRequest) GetTeid() string {
	if x != nil {
		return x.Teid
	}
	return ""
}

type GetHWIDForSgwUTeidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hwid string `protobuf:"bytes,1,opt,name=hwid,proto3" json:"hwid,omitempty"`
}

func (x *GetHWIDForSgwUTeidResponse) Reset() {
	*x = GetHWIDForSgwUTeidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHWIDForSgwUTeidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHWIDForSgwUTeidResponse) ProtoMessage() {}

func (x *GetHWIDForSgwUTeidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHWIDForSgwUTeidResponse.ProtoReflect.Descriptor instead.
func (*GetHWIDForSgwUTeidResponse) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescGZIP(), []int{15}
}

func (x *GetHWIDForSgwUTeidResponse) GetHwid() string {
	if x != nil {
		return x.Hwid
	}
	return ""
}

type MapSgwUTeidToHWIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkID  string            `protobuf:"bytes,1,opt,name=networkID,proto3" json:"networkID,omitempty"`
	TeidToHwid map[string]string `protobuf:"bytes,2,rep,name=teidToHwid,proto3" json:"teidToHwid,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MapSgwUTeidToHWIDRequest) Reset() {
	*x = MapSgwUTeidToHWIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapSgwUTeidToHWIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapSgwUTeidToHWIDRequest) ProtoMessage() {}

func (x *MapSgwUTeidToHWIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapSgwUTeidToHWIDRequest.ProtoReflect.Descriptor instead.
func (*MapSgwUTeidToHWIDRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescGZIP(), []int{16}
}

func (x *MapSgwUTeidToHWIDRequest) GetNetworkID() string {
	if x != nil {
		return x.NetworkID
	}
	return ""
}

func (x *MapSgwUTeidToHWIDRequest) GetTeidToHwid() map[string]string {
	if x != nil {
		return x.TeidToHwid
	}
	return nil
}

type UnmapSgwUTeidToHWIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkID string   `protobuf:"bytes,1,opt,name=networkID,proto3" json:"networkID,omitempty"`
	Teids     []string `protobuf:"bytes,2,rep,name=teids,proto3" json:"teids,omitempty"`
}

func (x *UnmapSgwUTeidToHWIDRequest) Reset() {
	*x = UnmapSgwUTeidToHWIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnmapSgwUTeidToHWIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmapSgwUTeidToHWIDRequest) ProtoMessage() {}

func (x *UnmapSgwUTeidToHWIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmapSgwUTeidToHWIDRequest.ProtoReflect.Descriptor instead.
func (*UnmapSgwUTeidToHWIDRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescGZIP(), []int{17}
}

func (x *UnmapSgwUTeidToHWIDRequest) GetNetworkID() string {
	if x != nil {
		return x.NetworkID
	}
	return ""
}

func (x *UnmapSgwUTeidToHWIDRequest) GetTeids() []string {
	if x != nil {
		return x.Teids
	}
	return nil
}

type GetNewSgwUTeidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkID string `protobuf:"bytes,1,opt,name=networkID,proto3" json:"networkID,omitempty"`
}

func (x *GetNewSgwUTeidRequest) Reset() {
	*x = GetNewSgwUTeidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewSgwUTeidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewSgwUTeidRequest) ProtoMessage() {}

func (x *GetNewSgwUTeidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewSgwUTeidRequest.ProtoReflect.Descriptor instead.
func (*GetNewSgwUTeidRequest) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescGZIP(), []int{18}
}

func (x *GetNewSgwUTeidRequest) GetNetworkID() string {
	if x != nil {
		return x.NetworkID
	}
	return ""
}

type GetNewSgwUTeidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teid string `protobuf:"bytes,1,opt,name=teid,proto3" json:"teid,omitempty"`
}

func (x *GetNewSgwUTeidResponse) Reset() {
	*x = GetNewSgwUTeidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewSgwUTeidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewSgwUTeidResponse) ProtoMessage() {}

func (x *GetNewSgwUTeidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewSgwUTeidResponse.ProtoReflect.Descriptor instead.
func (*GetNewSgwUTeidResponse) Descriptor() ([]byte, []int) {
	return file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescGZIP(), []int{19}
}

func (x *GetNewSgwUTeidResponse) GetTeid() string {
	if x != nil {
		return x.Teid
	}
	return ""
}

var File_orc8r_cloud_go_services_directoryd_protos_directoryd_proto protoreflect.FileDescriptor

var file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDesc = []byte{
	0x0a, 0x3a, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x6d, 0x61,
	0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x64, 0x1a, 0x19, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x2f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x6f,
	0x72, 0x48, 0x57, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x77, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x77, 0x69, 0x64,
	0x22, 0x38, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x46,
	0x6f, 0x72, 0x48, 0x57, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x18, 0x4d,
	0x61, 0x70, 0x48, 0x57, 0x49, 0x44, 0x54, 0x6f, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6c, 0x0a, 0x0e, 0x68, 0x77, 0x69, 0x64, 0x54,
	0x6f, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x44, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x64, 0x2e, 0x4d, 0x61, 0x70, 0x48, 0x57, 0x49, 0x44,
	0x54, 0x6f, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x48, 0x77, 0x69, 0x64, 0x54, 0x6f, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x68, 0x77, 0x69, 0x64, 0x54, 0x6f, 0x48, 0x6f, 0x73,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x41, 0x0a, 0x13, 0x48, 0x77, 0x69, 0x64, 0x54, 0x6f, 0x48,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x32, 0x0a, 0x1a, 0x55, 0x6e, 0x6d, 0x61,
	0x70, 0x48, 0x57, 0x49, 0x44, 0x54, 0x6f, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x77, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x68, 0x77, 0x69, 0x64, 0x73, 0x22, 0x58, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x49, 0x4d, 0x53, 0x49, 0x46, 0x6f, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x31, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x49, 0x4d, 0x53,
	0x49, 0x46, 0x6f, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x22, 0xef, 0x01, 0x0a, 0x19, 0x4d, 0x61,
	0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x54, 0x6f, 0x49, 0x4d, 0x53, 0x49,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x49, 0x44, 0x12, 0x70, 0x0a, 0x0f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x54, 0x6f, 0x49, 0x4d, 0x53, 0x49, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46,
	0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x64, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x54, 0x6f, 0x49, 0x4d, 0x53, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x54, 0x6f, 0x49, 0x4d, 0x53,
	0x49, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x54, 0x6f, 0x49, 0x4d, 0x53, 0x49, 0x1a, 0x42, 0x0a, 0x14, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x54, 0x6f, 0x49, 0x4d, 0x53, 0x49, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5b, 0x0a, 0x1b, 0x55,
	0x6e, 0x6d, 0x61, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x54, 0x6f, 0x49,
	0x4d, 0x53, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x22, 0x4d, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x48,
	0x57, 0x49, 0x44, 0x46, 0x6f, 0x72, 0x53, 0x67, 0x77, 0x43, 0x54, 0x65, 0x69, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x48, 0x57,
	0x49, 0x44, 0x46, 0x6f, 0x72, 0x53, 0x67, 0x77, 0x43, 0x54, 0x65, 0x69, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x77, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x77, 0x69, 0x64, 0x22, 0xd9, 0x01, 0x0a, 0x18, 0x4d, 0x61,
	0x70, 0x53, 0x67, 0x77, 0x43, 0x54, 0x65, 0x69, 0x64, 0x54, 0x6f, 0x48, 0x57, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x49, 0x44, 0x12, 0x60, 0x0a, 0x0a, 0x74, 0x65, 0x69, 0x64, 0x54, 0x6f, 0x48, 0x77,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61,
	0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x64, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x67, 0x77, 0x43, 0x54, 0x65, 0x69, 0x64, 0x54, 0x6f, 0x48,
	0x57, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x65, 0x69, 0x64, 0x54,
	0x6f, 0x48, 0x77, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x74, 0x65, 0x69, 0x64,
	0x54, 0x6f, 0x48, 0x77, 0x69, 0x64, 0x1a, 0x3d, 0x0a, 0x0f, 0x54, 0x65, 0x69, 0x64, 0x54, 0x6f,
	0x48, 0x77, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x50, 0x0a, 0x1a, 0x55, 0x6e, 0x6d, 0x61, 0x70, 0x53, 0x67,
	0x77, 0x43, 0x54, 0x65, 0x69, 0x64, 0x54, 0x6f, 0x48, 0x57, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x65, 0x69, 0x64, 0x73, 0x22, 0x35, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e, 0x65,
	0x77, 0x53, 0x67, 0x77, 0x43, 0x54, 0x65, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x22, 0x2c,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x53, 0x67, 0x77, 0x43, 0x54, 0x65, 0x69, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x48, 0x57, 0x49, 0x44, 0x46, 0x6f, 0x72, 0x53, 0x67, 0x77, 0x55, 0x54, 0x65,
	0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x48, 0x57, 0x49, 0x44, 0x46, 0x6f, 0x72, 0x53, 0x67, 0x77, 0x55, 0x54, 0x65, 0x69,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x77, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x77, 0x69, 0x64, 0x22, 0xd9, 0x01,
	0x0a, 0x18, 0x4d, 0x61, 0x70, 0x53, 0x67, 0x77, 0x55, 0x54, 0x65, 0x69, 0x64, 0x54, 0x6f, 0x48,
	0x57, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x12, 0x60, 0x0a, 0x0a, 0x74, 0x65, 0x69, 0x64,
	0x54, 0x6f, 0x48, 0x77, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x6d,
	0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x64, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x67, 0x77, 0x55, 0x54, 0x65, 0x69,
	0x64, 0x54, 0x6f, 0x48, 0x57, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54,
	0x65, 0x69, 0x64, 0x54, 0x6f, 0x48, 0x77, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a,
	0x74, 0x65, 0x69, 0x64, 0x54, 0x6f, 0x48, 0x77, 0x69, 0x64, 0x1a, 0x3d, 0x0a, 0x0f, 0x54, 0x65,
	0x69, 0x64, 0x54, 0x6f, 0x48, 0x77, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x50, 0x0a, 0x1a, 0x55, 0x6e, 0x6d,
	0x61, 0x70, 0x53, 0x67, 0x77, 0x55, 0x54, 0x65, 0x69, 0x64, 0x54, 0x6f, 0x48, 0x57, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x65, 0x69, 0x64, 0x73, 0x22, 0x35, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x4e, 0x65, 0x77, 0x53, 0x67, 0x77, 0x55, 0x54, 0x65, 0x69, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x49, 0x44, 0x22, 0x2c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x53, 0x67, 0x77, 0x55,
	0x54, 0x65, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x69, 0x64,
	0x32, 0xf3, 0x0b, 0x0a, 0x0f, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x12, 0x7d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x48, 0x57, 0x49, 0x44, 0x12, 0x31, 0x2e, 0x6d, 0x61, 0x67,
	0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x46,
	0x6f, 0x72, 0x48, 0x57, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e,
	0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x46, 0x6f, 0x72, 0x48, 0x57, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x13, 0x4d, 0x61, 0x70, 0x48, 0x57, 0x49, 0x44, 0x73, 0x54,
	0x6f, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x30, 0x2e, 0x6d, 0x61, 0x67,
	0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x64, 0x2e, 0x4d, 0x61, 0x70, 0x48, 0x57, 0x49, 0x44, 0x54, 0x6f, 0x48, 0x6f, 0x73,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6d,
	0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22,
	0x00, 0x12, 0x60, 0x0a, 0x15, 0x55, 0x6e, 0x6d, 0x61, 0x70, 0x48, 0x57, 0x49, 0x44, 0x73, 0x54,
	0x6f, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x32, 0x2e, 0x6d, 0x61, 0x67,
	0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x64, 0x2e, 0x55, 0x6e, 0x6d, 0x61, 0x70, 0x48, 0x57, 0x49, 0x44, 0x54, 0x6f, 0x48,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11,
	0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69,
	0x64, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x4d, 0x53, 0x49, 0x46,
	0x6f, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x32, 0x2e, 0x6d, 0x61,
	0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x4d, 0x53, 0x49, 0x46, 0x6f, 0x72, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x4d, 0x53, 0x49,
	0x46, 0x6f, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x14, 0x4d, 0x61, 0x70, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x54, 0x6f, 0x49, 0x4d, 0x53, 0x49, 0x73, 0x12, 0x31,
	0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x64, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x54, 0x6f, 0x49, 0x4d, 0x53, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e,
	0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x16, 0x55, 0x6e, 0x6d, 0x61, 0x70, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x54, 0x6f, 0x49, 0x4d, 0x53, 0x49, 0x73,
	0x12, 0x33, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x64, 0x2e, 0x55, 0x6e, 0x6d, 0x61, 0x70, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x54, 0x6f, 0x49, 0x4d, 0x53, 0x49, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72,
	0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x48, 0x57, 0x49, 0x44, 0x46, 0x6f, 0x72, 0x53, 0x67, 0x77, 0x43, 0x54, 0x65, 0x69, 0x64,
	0x12, 0x31, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x57, 0x49,
	0x44, 0x46, 0x6f, 0x72, 0x53, 0x67, 0x77, 0x43, 0x54, 0x65, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38,
	0x72, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x64, 0x2e, 0x47, 0x65, 0x74,
	0x48, 0x57, 0x49, 0x44, 0x46, 0x6f, 0x72, 0x53, 0x67, 0x77, 0x43, 0x54, 0x65, 0x69, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x11, 0x4d, 0x61, 0x70,
	0x53, 0x67, 0x77, 0x43, 0x54, 0x65, 0x69, 0x64, 0x54, 0x6f, 0x48, 0x57, 0x49, 0x44, 0x12, 0x30,
	0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x64, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x67, 0x77, 0x43, 0x54,
	0x65, 0x69, 0x64, 0x54, 0x6f, 0x48, 0x57, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x56,
	0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x13, 0x55, 0x6e, 0x6d, 0x61, 0x70, 0x53, 0x67,
	0x77, 0x43, 0x54, 0x65, 0x69, 0x64, 0x54, 0x6f, 0x48, 0x57, 0x49, 0x44, 0x12, 0x32, 0x2e, 0x6d,
	0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x64, 0x2e, 0x55, 0x6e, 0x6d, 0x61, 0x70, 0x53, 0x67, 0x77, 0x43, 0x54,
	0x65, 0x69, 0x64, 0x54, 0x6f, 0x48, 0x57, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x56,
	0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x53,
	0x67, 0x77, 0x43, 0x54, 0x65, 0x69, 0x64, 0x12, 0x2d, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e,
	0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x64,
	0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x53, 0x67, 0x77, 0x43, 0x54, 0x65, 0x69, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f,
	0x72, 0x63, 0x38, 0x72, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x64, 0x2e,
	0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x53, 0x67, 0x77, 0x43, 0x54, 0x65, 0x69, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x48,
	0x57, 0x49, 0x44, 0x46, 0x6f, 0x72, 0x53, 0x67, 0x77, 0x55, 0x54, 0x65, 0x69, 0x64, 0x12, 0x31,
	0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x57, 0x49, 0x44, 0x46,
	0x6f, 0x72, 0x53, 0x67, 0x77, 0x55, 0x54, 0x65, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x57,
	0x49, 0x44, 0x46, 0x6f, 0x72, 0x53, 0x67, 0x77, 0x55, 0x54, 0x65, 0x69, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x11, 0x4d, 0x61, 0x70, 0x53, 0x67,
	0x77, 0x55, 0x54, 0x65, 0x69, 0x64, 0x54, 0x6f, 0x48, 0x57, 0x49, 0x44, 0x12, 0x30, 0x2e, 0x6d,
	0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x64, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x67, 0x77, 0x55, 0x54, 0x65, 0x69,
	0x64, 0x54, 0x6f, 0x48, 0x57, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11,
	0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69,
	0x64, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x13, 0x55, 0x6e, 0x6d, 0x61, 0x70, 0x53, 0x67, 0x77, 0x55,
	0x54, 0x65, 0x69, 0x64, 0x54, 0x6f, 0x48, 0x57, 0x49, 0x44, 0x12, 0x32, 0x2e, 0x6d, 0x61, 0x67,
	0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x64, 0x2e, 0x55, 0x6e, 0x6d, 0x61, 0x70, 0x53, 0x67, 0x77, 0x55, 0x54, 0x65, 0x69,
	0x64, 0x54, 0x6f, 0x48, 0x57, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11,
	0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69,
	0x64, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x53, 0x67, 0x77,
	0x55, 0x54, 0x65, 0x69, 0x64, 0x12, 0x2d, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72,
	0x63, 0x38, 0x72, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x64, 0x2e, 0x47,
	0x65, 0x74, 0x4e, 0x65, 0x77, 0x53, 0x67, 0x77, 0x55, 0x54, 0x65, 0x69, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63,
	0x38, 0x72, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x64, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x65, 0x77, 0x53, 0x67, 0x77, 0x55, 0x54, 0x65, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x31, 0x5a, 0x2f, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2f,
	0x6f, 0x72, 0x63, 0x38, 0x72, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescOnce sync.Once
	file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescData = file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDesc
)

func file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescGZIP() []byte {
	file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescOnce.Do(func() {
		file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescData = protoimpl.X.CompressGZIP(file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescData)
	})
	return file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDescData
}

var file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_goTypes = []interface{}{
	(*GetHostnameForHWIDRequest)(nil),   // 0: magma.orc8r.directoryd.GetHostnameForHWIDRequest
	(*GetHostnameForHWIDResponse)(nil),  // 1: magma.orc8r.directoryd.GetHostnameForHWIDResponse
	(*MapHWIDToHostnameRequest)(nil),    // 2: magma.orc8r.directoryd.MapHWIDToHostnameRequest
	(*UnmapHWIDToHostnameRequest)(nil),  // 3: magma.orc8r.directoryd.UnmapHWIDToHostnameRequest
	(*GetIMSIForSessionIDRequest)(nil),  // 4: magma.orc8r.directoryd.GetIMSIForSessionIDRequest
	(*GetIMSIForSessionIDResponse)(nil), // 5: magma.orc8r.directoryd.GetIMSIForSessionIDResponse
	(*MapSessionIDToIMSIRequest)(nil),   // 6: magma.orc8r.directoryd.MapSessionIDToIMSIRequest
	(*UnmapSessionIDToIMSIRequest)(nil), // 7: magma.orc8r.directoryd.UnmapSessionIDToIMSIRequest
	(*GetHWIDForSgwCTeidRequest)(nil),   // 8: magma.orc8r.directoryd.GetHWIDForSgwCTeidRequest
	(*GetHWIDForSgwCTeidResponse)(nil),  // 9: magma.orc8r.directoryd.GetHWIDForSgwCTeidResponse
	(*MapSgwCTeidToHWIDRequest)(nil),    // 10: magma.orc8r.directoryd.MapSgwCTeidToHWIDRequest
	(*UnmapSgwCTeidToHWIDRequest)(nil),  // 11: magma.orc8r.directoryd.UnmapSgwCTeidToHWIDRequest
	(*GetNewSgwCTeidRequest)(nil),       // 12: magma.orc8r.directoryd.GetNewSgwCTeidRequest
	(*GetNewSgwCTeidResponse)(nil),      // 13: magma.orc8r.directoryd.GetNewSgwCTeidResponse
	(*GetHWIDForSgwUTeidRequest)(nil),   // 14: magma.orc8r.directoryd.GetHWIDForSgwUTeidRequest
	(*GetHWIDForSgwUTeidResponse)(nil),  // 15: magma.orc8r.directoryd.GetHWIDForSgwUTeidResponse
	(*MapSgwUTeidToHWIDRequest)(nil),    // 16: magma.orc8r.directoryd.MapSgwUTeidToHWIDRequest
	(*UnmapSgwUTeidToHWIDRequest)(nil),  // 17: magma.orc8r.directoryd.UnmapSgwUTeidToHWIDRequest
	(*GetNewSgwUTeidRequest)(nil),       // 18: magma.orc8r.directoryd.GetNewSgwUTeidRequest
	(*GetNewSgwUTeidResponse)(nil),      // 19: magma.orc8r.directoryd.GetNewSgwUTeidResponse
	nil,                                 // 20: magma.orc8r.directoryd.MapHWIDToHostnameRequest.HwidToHostnameEntry
	nil,                                 // 21: magma.orc8r.directoryd.MapSessionIDToIMSIRequest.SessionIDToIMSIEntry
	nil,                                 // 22: magma.orc8r.directoryd.MapSgwCTeidToHWIDRequest.TeidToHwidEntry
	nil,                                 // 23: magma.orc8r.directoryd.MapSgwUTeidToHWIDRequest.TeidToHwidEntry
	(*protos.Void)(nil),                 // 24: magma.orc8r.Void
}
var file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_depIdxs = []int32{
	20, // 0: magma.orc8r.directoryd.MapHWIDToHostnameRequest.hwidToHostname:type_name -> magma.orc8r.directoryd.MapHWIDToHostnameRequest.HwidToHostnameEntry
	21, // 1: magma.orc8r.directoryd.MapSessionIDToIMSIRequest.sessionIDToIMSI:type_name -> magma.orc8r.directoryd.MapSessionIDToIMSIRequest.SessionIDToIMSIEntry
	22, // 2: magma.orc8r.directoryd.MapSgwCTeidToHWIDRequest.teidToHwid:type_name -> magma.orc8r.directoryd.MapSgwCTeidToHWIDRequest.TeidToHwidEntry
	23, // 3: magma.orc8r.directoryd.MapSgwUTeidToHWIDRequest.teidToHwid:type_name -> magma.orc8r.directoryd.MapSgwUTeidToHWIDRequest.TeidToHwidEntry
	0,  // 4: magma.orc8r.directoryd.DirectoryLookup.GetHostnameForHWID:input_type -> magma.orc8r.directoryd.GetHostnameForHWIDRequest
	2,  // 5: magma.orc8r.directoryd.DirectoryLookup.MapHWIDsToHostnames:input_type -> magma.orc8r.directoryd.MapHWIDToHostnameRequest
	3,  // 6: magma.orc8r.directoryd.DirectoryLookup.UnmapHWIDsToHostnames:input_type -> magma.orc8r.directoryd.UnmapHWIDToHostnameRequest
	4,  // 7: magma.orc8r.directoryd.DirectoryLookup.GetIMSIForSessionID:input_type -> magma.orc8r.directoryd.GetIMSIForSessionIDRequest
	6,  // 8: magma.orc8r.directoryd.DirectoryLookup.MapSessionIDsToIMSIs:input_type -> magma.orc8r.directoryd.MapSessionIDToIMSIRequest
	7,  // 9: magma.orc8r.directoryd.DirectoryLookup.UnmapSessionIDsToIMSIs:input_type -> magma.orc8r.directoryd.UnmapSessionIDToIMSIRequest
	8,  // 10: magma.orc8r.directoryd.DirectoryLookup.GetHWIDForSgwCTeid:input_type -> magma.orc8r.directoryd.GetHWIDForSgwCTeidRequest
	10, // 11: magma.orc8r.directoryd.DirectoryLookup.MapSgwCTeidToHWID:input_type -> magma.orc8r.directoryd.MapSgwCTeidToHWIDRequest
	11, // 12: magma.orc8r.directoryd.DirectoryLookup.UnmapSgwCTeidToHWID:input_type -> magma.orc8r.directoryd.UnmapSgwCTeidToHWIDRequest
	12, // 13: magma.orc8r.directoryd.DirectoryLookup.GetNewSgwCTeid:input_type -> magma.orc8r.directoryd.GetNewSgwCTeidRequest
	14, // 14: magma.orc8r.directoryd.DirectoryLookup.GetHWIDForSgwUTeid:input_type -> magma.orc8r.directoryd.GetHWIDForSgwUTeidRequest
	16, // 15: magma.orc8r.directoryd.DirectoryLookup.MapSgwUTeidToHWID:input_type -> magma.orc8r.directoryd.MapSgwUTeidToHWIDRequest
	17, // 16: magma.orc8r.directoryd.DirectoryLookup.UnmapSgwUTeidToHWID:input_type -> magma.orc8r.directoryd.UnmapSgwUTeidToHWIDRequest
	18, // 17: magma.orc8r.directoryd.DirectoryLookup.GetNewSgwUTeid:input_type -> magma.orc8r.directoryd.GetNewSgwUTeidRequest
	1,  // 18: magma.orc8r.directoryd.DirectoryLookup.GetHostnameForHWID:output_type -> magma.orc8r.directoryd.GetHostnameForHWIDResponse
	24, // 19: magma.orc8r.directoryd.DirectoryLookup.MapHWIDsToHostnames:output_type -> magma.orc8r.Void
	24, // 20: magma.orc8r.directoryd.DirectoryLookup.UnmapHWIDsToHostnames:output_type -> magma.orc8r.Void
	5,  // 21: magma.orc8r.directoryd.DirectoryLookup.GetIMSIForSessionID:output_type -> magma.orc8r.directoryd.GetIMSIForSessionIDResponse
	24, // 22: magma.orc8r.directoryd.DirectoryLookup.MapSessionIDsToIMSIs:output_type -> magma.orc8r.Void
	24, // 23: magma.orc8r.directoryd.DirectoryLookup.UnmapSessionIDsToIMSIs:output_type -> magma.orc8r.Void
	9,  // 24: magma.orc8r.directoryd.DirectoryLookup.GetHWIDForSgwCTeid:output_type -> magma.orc8r.directoryd.GetHWIDForSgwCTeidResponse
	24, // 25: magma.orc8r.directoryd.DirectoryLookup.MapSgwCTeidToHWID:output_type -> magma.orc8r.Void
	24, // 26: magma.orc8r.directoryd.DirectoryLookup.UnmapSgwCTeidToHWID:output_type -> magma.orc8r.Void
	13, // 27: magma.orc8r.directoryd.DirectoryLookup.GetNewSgwCTeid:output_type -> magma.orc8r.directoryd.GetNewSgwCTeidResponse
	15, // 28: magma.orc8r.directoryd.DirectoryLookup.GetHWIDForSgwUTeid:output_type -> magma.orc8r.directoryd.GetHWIDForSgwUTeidResponse
	24, // 29: magma.orc8r.directoryd.DirectoryLookup.MapSgwUTeidToHWID:output_type -> magma.orc8r.Void
	24, // 30: magma.orc8r.directoryd.DirectoryLookup.UnmapSgwUTeidToHWID:output_type -> magma.orc8r.Void
	19, // 31: magma.orc8r.directoryd.DirectoryLookup.GetNewSgwUTeid:output_type -> magma.orc8r.directoryd.GetNewSgwUTeidResponse
	18, // [18:32] is the sub-list for method output_type
	4,  // [4:18] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_init() }
func file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_init() {
	if File_orc8r_cloud_go_services_directoryd_protos_directoryd_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHostnameForHWIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHostnameForHWIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapHWIDToHostnameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnmapHWIDToHostnameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIMSIForSessionIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIMSIForSessionIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapSessionIDToIMSIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnmapSessionIDToIMSIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHWIDForSgwCTeidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHWIDForSgwCTeidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapSgwCTeidToHWIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnmapSgwCTeidToHWIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewSgwCTeidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewSgwCTeidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHWIDForSgwUTeidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHWIDForSgwUTeidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapSgwUTeidToHWIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnmapSgwUTeidToHWIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewSgwUTeidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewSgwUTeidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_goTypes,
		DependencyIndexes: file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_depIdxs,
		MessageInfos:      file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_msgTypes,
	}.Build()
	File_orc8r_cloud_go_services_directoryd_protos_directoryd_proto = out.File
	file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_rawDesc = nil
	file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_goTypes = nil
	file_orc8r_cloud_go_services_directoryd_protos_directoryd_proto_depIdxs = nil
}
