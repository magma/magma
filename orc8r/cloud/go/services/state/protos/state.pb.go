// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orc8r/cloud/go/services/state/protos/state.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protos "magma/orc8r/lib/go/protos"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// GetStatesRequest functions in two modes
//  - ids is non-empty  -- normal Get
//  - ids empty         -- Search with filters and load criteria
type GetStatesRequest struct {
	// networkID of the network containing desired state.
	NetworkID string `protobuf:"bytes,1,opt,name=networkID,proto3" json:"networkID,omitempty"`
	// ids for which to return corresponding state.
	Ids []*protos.StateID `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	// typeFilter is an OR of all types specified.
	// The service will return all states matching any of the specified types.
	TypeFilter []string `protobuf:"bytes,10,rep,name=typeFilter,proto3" json:"typeFilter,omitempty"`
	// idFilter is an OR of all device IDs specified.
	// The service will return all states matching any of the specified IDs.
	IdFilter []string `protobuf:"bytes,11,rep,name=idFilter,proto3" json:"idFilter,omitempty"`
	// loadValues specifies whether state values should be loaded in
	// addition to metadata.
	LoadValues bool `protobuf:"varint,12,opt,name=loadValues,proto3" json:"loadValues,omitempty"`
	// If non-empty, the value of id_prefix will be used to do a prefix-match
	// on the keys of queried states. This argument supersedes any value for
	// idFilter.
	IdPrefix             string   `protobuf:"bytes,13,opt,name=id_prefix,json=idPrefix,proto3" json:"id_prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStatesRequest) Reset()         { *m = GetStatesRequest{} }
func (m *GetStatesRequest) String() string { return proto.CompactTextString(m) }
func (*GetStatesRequest) ProtoMessage()    {}
func (*GetStatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_691ba3dee6f8af85, []int{0}
}

func (m *GetStatesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatesRequest.Unmarshal(m, b)
}
func (m *GetStatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatesRequest.Marshal(b, m, deterministic)
}
func (m *GetStatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatesRequest.Merge(m, src)
}
func (m *GetStatesRequest) XXX_Size() int {
	return xxx_messageInfo_GetStatesRequest.Size(m)
}
func (m *GetStatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatesRequest proto.InternalMessageInfo

func (m *GetStatesRequest) GetNetworkID() string {
	if m != nil {
		return m.NetworkID
	}
	return ""
}

func (m *GetStatesRequest) GetIds() []*protos.StateID {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *GetStatesRequest) GetTypeFilter() []string {
	if m != nil {
		return m.TypeFilter
	}
	return nil
}

func (m *GetStatesRequest) GetIdFilter() []string {
	if m != nil {
		return m.IdFilter
	}
	return nil
}

func (m *GetStatesRequest) GetLoadValues() bool {
	if m != nil {
		return m.LoadValues
	}
	return false
}

func (m *GetStatesRequest) GetIdPrefix() string {
	if m != nil {
		return m.IdPrefix
	}
	return ""
}

type GetStatesResponse struct {
	States               []*protos.State `protobuf:"bytes,1,rep,name=states,proto3" json:"states,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetStatesResponse) Reset()         { *m = GetStatesResponse{} }
func (m *GetStatesResponse) String() string { return proto.CompactTextString(m) }
func (*GetStatesResponse) ProtoMessage()    {}
func (*GetStatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_691ba3dee6f8af85, []int{1}
}

func (m *GetStatesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatesResponse.Unmarshal(m, b)
}
func (m *GetStatesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatesResponse.Marshal(b, m, deterministic)
}
func (m *GetStatesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatesResponse.Merge(m, src)
}
func (m *GetStatesResponse) XXX_Size() int {
	return xxx_messageInfo_GetStatesResponse.Size(m)
}
func (m *GetStatesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatesResponse proto.InternalMessageInfo

func (m *GetStatesResponse) GetStates() []*protos.State {
	if m != nil {
		return m.States
	}
	return nil
}

func init() {
	proto.RegisterType((*GetStatesRequest)(nil), "magma.orc8r.state.GetStatesRequest")
	proto.RegisterType((*GetStatesResponse)(nil), "magma.orc8r.state.GetStatesResponse")
}

func init() {
	proto.RegisterFile("orc8r/cloud/go/services/state/protos/state.proto", fileDescriptor_691ba3dee6f8af85)
}

var fileDescriptor_691ba3dee6f8af85 = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x5b, 0x4b, 0xc3, 0x30,
	0x14, 0xb6, 0x0e, 0xc6, 0x7a, 0xa6, 0xe0, 0xc2, 0x1e, 0x42, 0xbd, 0x50, 0xa6, 0x48, 0x19, 0xd2,
	0x8e, 0xed, 0xc5, 0x37, 0x41, 0x86, 0xb2, 0x37, 0xc9, 0x40, 0xc4, 0x17, 0x89, 0xcb, 0x71, 0x04,
	0xbb, 0xa6, 0x26, 0x99, 0x97, 0x9f, 0xe9, 0x3f, 0x92, 0x25, 0x73, 0xab, 0x0e, 0xc4, 0xa7, 0xf2,
	0x5d, 0xce, 0xc7, 0x77, 0x4e, 0x03, 0x3d, 0xa5, 0x27, 0xe7, 0x3a, 0x9b, 0xe4, 0x6a, 0x2e, 0xb2,
	0xa9, 0xca, 0x0c, 0xea, 0x57, 0x39, 0x41, 0x93, 0x19, 0xcb, 0x2d, 0x66, 0xa5, 0x56, 0x56, 0x2d,
	0x41, 0xea, 0x00, 0x69, 0xcd, 0xf8, 0x74, 0xc6, 0x53, 0x37, 0x97, 0x3a, 0x21, 0x3a, 0xf4, 0x21,
	0xdf, 0x66, 0x1f, 0x31, 0xe8, 0x0d, 0xfc, 0x44, 0x44, 0x7f, 0xca, 0xeb, 0xac, 0xce, 0x67, 0x00,
	0x7b, 0xd7, 0x68, 0xc7, 0x0b, 0xca, 0x30, 0x7c, 0x99, 0xa3, 0xb1, 0xe4, 0x00, 0xc2, 0x02, 0xed,
	0x9b, 0xd2, 0xcf, 0xa3, 0x21, 0x0d, 0xe2, 0x20, 0x09, 0xd9, 0x9a, 0x20, 0xa7, 0x50, 0x93, 0xc2,
	0xd0, 0xed, 0xb8, 0x96, 0x34, 0xfb, 0xed, 0xb4, 0x5a, 0xc6, 0xc5, 0x8c, 0x86, 0x6c, 0x61, 0x20,
	0x47, 0x00, 0xf6, 0xa3, 0xc4, 0x2b, 0x99, 0x5b, 0xd4, 0x14, 0xe2, 0x5a, 0x12, 0xb2, 0x0a, 0x43,
	0x22, 0x68, 0x48, 0xb1, 0x54, 0x9b, 0x4e, 0x5d, 0xe1, 0xc5, 0x6c, 0xae, 0xb8, 0xb8, 0xe5, 0xf9,
	0x1c, 0x0d, 0xdd, 0x89, 0x83, 0xa4, 0xc1, 0x2a, 0x0c, 0xd9, 0x87, 0x50, 0x8a, 0x87, 0x52, 0xe3,
	0x93, 0x7c, 0xa7, 0xbb, 0xae, 0x61, 0x43, 0x8a, 0x1b, 0x87, 0x3b, 0x17, 0xd0, 0xaa, 0xac, 0x64,
	0x4a, 0x55, 0x18, 0x24, 0x5d, 0xa8, 0xbb, 0xbd, 0x0d, 0x0d, 0x5c, 0x71, 0xb2, 0x59, 0x9c, 0x2d,
	0x1d, 0xfd, 0x12, 0xda, 0x7e, 0x93, 0xc2, 0xa2, 0x2e, 0x78, 0x3e, 0xf6, 0xf7, 0x24, 0x77, 0x10,
	0xae, 0x82, 0xc9, 0x71, 0xba, 0xf1, 0x1b, 0xd2, 0xdf, 0x97, 0x8c, 0x4e, 0xfe, 0x36, 0xf9, 0x6e,
	0x9d, 0xad, 0xcb, 0xb3, 0xfb, 0xae, 0x33, 0x66, 0xff, 0x79, 0x0c, 0x8f, 0x75, 0xf7, 0x1d, 0x7c,
	0x05, 0x00, 0x00, 0xff, 0xff, 0x68, 0x9e, 0x51, 0xec, 0x3b, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StateInternalServiceClient is the client API for StateInternalService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StateInternalServiceClient interface {
	// GetStates retrieves states from blobstorage.
	GetStates(ctx context.Context, in *GetStatesRequest, opts ...grpc.CallOption) (*GetStatesResponse, error)
}

type stateInternalServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStateInternalServiceClient(cc grpc.ClientConnInterface) StateInternalServiceClient {
	return &stateInternalServiceClient{cc}
}

func (c *stateInternalServiceClient) GetStates(ctx context.Context, in *GetStatesRequest, opts ...grpc.CallOption) (*GetStatesResponse, error) {
	out := new(GetStatesResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.state.StateInternalService/GetStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StateInternalServiceServer is the server API for StateInternalService service.
type StateInternalServiceServer interface {
	// GetStates retrieves states from blobstorage.
	GetStates(context.Context, *GetStatesRequest) (*GetStatesResponse, error)
}

// UnimplementedStateInternalServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStateInternalServiceServer struct {
}

func (*UnimplementedStateInternalServiceServer) GetStates(ctx context.Context, req *GetStatesRequest) (*GetStatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStates not implemented")
}

func RegisterStateInternalServiceServer(s *grpc.Server, srv StateInternalServiceServer) {
	s.RegisterService(&_StateInternalService_serviceDesc, srv)
}

func _StateInternalService_GetStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StateInternalServiceServer).GetStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.state.StateInternalService/GetStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StateInternalServiceServer).GetStates(ctx, req.(*GetStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StateInternalService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.orc8r.state.StateInternalService",
	HandlerType: (*StateInternalServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStates",
			Handler:    _StateInternalService_GetStates_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orc8r/cloud/go/services/state/protos/state.proto",
}
