// Code generated by go-swagger; DO NOT EDIT.

package wifi_meshes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "magma/orc8r/cloud/api/v1/go/models"
)

// NewPostWifiNetworkIDMeshesParams creates a new PostWifiNetworkIDMeshesParams object
// with the default values initialized.
func NewPostWifiNetworkIDMeshesParams() *PostWifiNetworkIDMeshesParams {
	var ()
	return &PostWifiNetworkIDMeshesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostWifiNetworkIDMeshesParamsWithTimeout creates a new PostWifiNetworkIDMeshesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostWifiNetworkIDMeshesParamsWithTimeout(timeout time.Duration) *PostWifiNetworkIDMeshesParams {
	var ()
	return &PostWifiNetworkIDMeshesParams{

		timeout: timeout,
	}
}

// NewPostWifiNetworkIDMeshesParamsWithContext creates a new PostWifiNetworkIDMeshesParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostWifiNetworkIDMeshesParamsWithContext(ctx context.Context) *PostWifiNetworkIDMeshesParams {
	var ()
	return &PostWifiNetworkIDMeshesParams{

		Context: ctx,
	}
}

// NewPostWifiNetworkIDMeshesParamsWithHTTPClient creates a new PostWifiNetworkIDMeshesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostWifiNetworkIDMeshesParamsWithHTTPClient(client *http.Client) *PostWifiNetworkIDMeshesParams {
	var ()
	return &PostWifiNetworkIDMeshesParams{
		HTTPClient: client,
	}
}

/*PostWifiNetworkIDMeshesParams contains all the parameters to send to the API endpoint
for the post wifi network ID meshes operation typically these are written to a http.Request
*/
type PostWifiNetworkIDMeshesParams struct {

	/*NetworkID
	  Network ID

	*/
	NetworkID string
	/*WifiMesh
	  Mesh to add to the network

	*/
	WifiMesh *models.WifiMesh

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post wifi network ID meshes params
func (o *PostWifiNetworkIDMeshesParams) WithTimeout(timeout time.Duration) *PostWifiNetworkIDMeshesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post wifi network ID meshes params
func (o *PostWifiNetworkIDMeshesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post wifi network ID meshes params
func (o *PostWifiNetworkIDMeshesParams) WithContext(ctx context.Context) *PostWifiNetworkIDMeshesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post wifi network ID meshes params
func (o *PostWifiNetworkIDMeshesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post wifi network ID meshes params
func (o *PostWifiNetworkIDMeshesParams) WithHTTPClient(client *http.Client) *PostWifiNetworkIDMeshesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post wifi network ID meshes params
func (o *PostWifiNetworkIDMeshesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNetworkID adds the networkID to the post wifi network ID meshes params
func (o *PostWifiNetworkIDMeshesParams) WithNetworkID(networkID string) *PostWifiNetworkIDMeshesParams {
	o.SetNetworkID(networkID)
	return o
}

// SetNetworkID adds the networkId to the post wifi network ID meshes params
func (o *PostWifiNetworkIDMeshesParams) SetNetworkID(networkID string) {
	o.NetworkID = networkID
}

// WithWifiMesh adds the wifiMesh to the post wifi network ID meshes params
func (o *PostWifiNetworkIDMeshesParams) WithWifiMesh(wifiMesh *models.WifiMesh) *PostWifiNetworkIDMeshesParams {
	o.SetWifiMesh(wifiMesh)
	return o
}

// SetWifiMesh adds the wifiMesh to the post wifi network ID meshes params
func (o *PostWifiNetworkIDMeshesParams) SetWifiMesh(wifiMesh *models.WifiMesh) {
	o.WifiMesh = wifiMesh
}

// WriteToRequest writes these params to a swagger request
func (o *PostWifiNetworkIDMeshesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param network_id
	if err := r.SetPathParam("network_id", o.NetworkID); err != nil {
		return err
	}

	if o.WifiMesh != nil {
		if err := r.SetBodyParam(o.WifiMesh); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
