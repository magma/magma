// Code generated by go-swagger; DO NOT EDIT.

package tenants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"magma/orc8r/cloud/api/v1/go/models"
)

// NewPutTenantsTenantIDControlProxyParams creates a new PutTenantsTenantIDControlProxyParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPutTenantsTenantIDControlProxyParams() *PutTenantsTenantIDControlProxyParams {
	return &PutTenantsTenantIDControlProxyParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPutTenantsTenantIDControlProxyParamsWithTimeout creates a new PutTenantsTenantIDControlProxyParams object
// with the ability to set a timeout on a request.
func NewPutTenantsTenantIDControlProxyParamsWithTimeout(timeout time.Duration) *PutTenantsTenantIDControlProxyParams {
	return &PutTenantsTenantIDControlProxyParams{
		timeout: timeout,
	}
}

// NewPutTenantsTenantIDControlProxyParamsWithContext creates a new PutTenantsTenantIDControlProxyParams object
// with the ability to set a context for a request.
func NewPutTenantsTenantIDControlProxyParamsWithContext(ctx context.Context) *PutTenantsTenantIDControlProxyParams {
	return &PutTenantsTenantIDControlProxyParams{
		Context: ctx,
	}
}

// NewPutTenantsTenantIDControlProxyParamsWithHTTPClient creates a new PutTenantsTenantIDControlProxyParams object
// with the ability to set a custom HTTPClient for a request.
func NewPutTenantsTenantIDControlProxyParamsWithHTTPClient(client *http.Client) *PutTenantsTenantIDControlProxyParams {
	return &PutTenantsTenantIDControlProxyParams{
		HTTPClient: client,
	}
}

/*
PutTenantsTenantIDControlProxyParams contains all the parameters to send to the API endpoint

	for the put tenants tenant ID control proxy operation.

	Typically these are written to a http.Request.
*/
type PutTenantsTenantIDControlProxyParams struct {

	/* ControlProxy.

	   Control proxy content to be updated
	*/
	ControlProxy *models.ControlProxy

	/* TenantID.

	   Tenant ID
	*/
	TenantID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the put tenants tenant ID control proxy params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutTenantsTenantIDControlProxyParams) WithDefaults() *PutTenantsTenantIDControlProxyParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the put tenants tenant ID control proxy params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutTenantsTenantIDControlProxyParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the put tenants tenant ID control proxy params
func (o *PutTenantsTenantIDControlProxyParams) WithTimeout(timeout time.Duration) *PutTenantsTenantIDControlProxyParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put tenants tenant ID control proxy params
func (o *PutTenantsTenantIDControlProxyParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put tenants tenant ID control proxy params
func (o *PutTenantsTenantIDControlProxyParams) WithContext(ctx context.Context) *PutTenantsTenantIDControlProxyParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put tenants tenant ID control proxy params
func (o *PutTenantsTenantIDControlProxyParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put tenants tenant ID control proxy params
func (o *PutTenantsTenantIDControlProxyParams) WithHTTPClient(client *http.Client) *PutTenantsTenantIDControlProxyParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put tenants tenant ID control proxy params
func (o *PutTenantsTenantIDControlProxyParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithControlProxy adds the controlProxy to the put tenants tenant ID control proxy params
func (o *PutTenantsTenantIDControlProxyParams) WithControlProxy(controlProxy *models.ControlProxy) *PutTenantsTenantIDControlProxyParams {
	o.SetControlProxy(controlProxy)
	return o
}

// SetControlProxy adds the controlProxy to the put tenants tenant ID control proxy params
func (o *PutTenantsTenantIDControlProxyParams) SetControlProxy(controlProxy *models.ControlProxy) {
	o.ControlProxy = controlProxy
}

// WithTenantID adds the tenantID to the put tenants tenant ID control proxy params
func (o *PutTenantsTenantIDControlProxyParams) WithTenantID(tenantID int64) *PutTenantsTenantIDControlProxyParams {
	o.SetTenantID(tenantID)
	return o
}

// SetTenantID adds the tenantId to the put tenants tenant ID control proxy params
func (o *PutTenantsTenantIDControlProxyParams) SetTenantID(tenantID int64) {
	o.TenantID = tenantID
}

// WriteToRequest writes these params to a swagger request
func (o *PutTenantsTenantIDControlProxyParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.ControlProxy != nil {
		if err := r.SetBodyParam(o.ControlProxy); err != nil {
			return err
		}
	}

	// path param tenant_id
	if err := r.SetPathParam("tenant_id", swag.FormatInt64(o.TenantID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
