// Code generated by go-swagger; DO NOT EDIT.

package federation_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "magma/orc8r/cloud/api/v1/go/models"
)

// GetFegNetworkIDReader is a Reader for the GetFegNetworkID structure.
type GetFegNetworkIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFegNetworkIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFegNetworkIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetFegNetworkIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetFegNetworkIDOK creates a GetFegNetworkIDOK with default headers values
func NewGetFegNetworkIDOK() *GetFegNetworkIDOK {
	return &GetFegNetworkIDOK{}
}

/*GetFegNetworkIDOK handles this case with default header values.

Full description of a federated LTE network
*/
type GetFegNetworkIDOK struct {
	Payload *models.FegNetwork
}

func (o *GetFegNetworkIDOK) Error() string {
	return fmt.Sprintf("[GET /feg/{network_id}][%d] getFegNetworkIdOK  %+v", 200, o.Payload)
}

func (o *GetFegNetworkIDOK) GetPayload() *models.FegNetwork {
	return o.Payload
}

func (o *GetFegNetworkIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FegNetwork)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFegNetworkIDDefault creates a GetFegNetworkIDDefault with default headers values
func NewGetFegNetworkIDDefault(code int) *GetFegNetworkIDDefault {
	return &GetFegNetworkIDDefault{
		_statusCode: code,
	}
}

/*GetFegNetworkIDDefault handles this case with default header values.

Unexpected Error
*/
type GetFegNetworkIDDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get feg network ID default response
func (o *GetFegNetworkIDDefault) Code() int {
	return o._statusCode
}

func (o *GetFegNetworkIDDefault) Error() string {
	return fmt.Sprintf("[GET /feg/{network_id}][%d] GetFegNetworkID default  %+v", o._statusCode, o.Payload)
}

func (o *GetFegNetworkIDDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetFegNetworkIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
