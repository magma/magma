// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"magma/orc8r/cloud/api/v1/go/client/a_p_ns"
	"magma/orc8r/cloud/api/v1/go/client/about"
	"magma/orc8r/cloud/api/v1/go/client/alerts"
	"magma/orc8r/cloud/api/v1/go/client/call_tracing"
	"magma/orc8r/cloud/api/v1/go/client/carrier_wifi_gateways"
	"magma/orc8r/cloud/api/v1/go/client/carrier_wifi_networks"
	"magma/orc8r/cloud/api/v1/go/client/cbsds"
	"magma/orc8r/cloud/api/v1/go/client/commands"
	"magma/orc8r/cloud/api/v1/go/client/enode_bs"
	"magma/orc8r/cloud/api/v1/go/client/events"
	"magma/orc8r/cloud/api/v1/go/client/federated_lte_networks"
	"magma/orc8r/cloud/api/v1/go/client/federation_gateways"
	"magma/orc8r/cloud/api/v1/go/client/federation_networks"
	"magma/orc8r/cloud/api/v1/go/client/gateways"
	"magma/orc8r/cloud/api/v1/go/client/logs"
	"magma/orc8r/cloud/api/v1/go/client/lte_gateways"
	"magma/orc8r/cloud/api/v1/go/client/lte_networks"
	"magma/orc8r/cloud/api/v1/go/client/metrics"
	"magma/orc8r/cloud/api/v1/go/client/network_probes"
	"magma/orc8r/cloud/api/v1/go/client/networks"
	"magma/orc8r/cloud/api/v1/go/client/operations"
	"magma/orc8r/cloud/api/v1/go/client/policies"
	"magma/orc8r/cloud/api/v1/go/client/rating_groups"
	"magma/orc8r/cloud/api/v1/go/client/sms"
	"magma/orc8r/cloud/api/v1/go/client/subscribers"
	"magma/orc8r/cloud/api/v1/go/client/tenants"
	"magma/orc8r/cloud/api/v1/go/client/upgrades"
	"magma/orc8r/cloud/api/v1/go/client/user"
)

// Default magma HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "localhost"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/magma/v1"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"http", "https"}

// NewHTTPClient creates a new magma HTTP client.
func NewHTTPClient(formats strfmt.Registry) *Magma {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new magma HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *Magma {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new magma client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Magma {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(Magma)
	cli.Transport = transport
	cli.ApNs = a_p_ns.New(transport, formats)
	cli.About = about.New(transport, formats)
	cli.Alerts = alerts.New(transport, formats)
	cli.CallTracing = call_tracing.New(transport, formats)
	cli.CarrierWifiGateways = carrier_wifi_gateways.New(transport, formats)
	cli.CarrierWifiNetworks = carrier_wifi_networks.New(transport, formats)
	cli.Cbsds = cbsds.New(transport, formats)
	cli.Commands = commands.New(transport, formats)
	cli.EnodeBs = enode_bs.New(transport, formats)
	cli.Events = events.New(transport, formats)
	cli.FederatedLTENetworks = federated_lte_networks.New(transport, formats)
	cli.FederationGateways = federation_gateways.New(transport, formats)
	cli.FederationNetworks = federation_networks.New(transport, formats)
	cli.Gateways = gateways.New(transport, formats)
	cli.Logs = logs.New(transport, formats)
	cli.LTEGateways = lte_gateways.New(transport, formats)
	cli.LTENetworks = lte_networks.New(transport, formats)
	cli.Metrics = metrics.New(transport, formats)
	cli.NetworkProbes = network_probes.New(transport, formats)
	cli.Networks = networks.New(transport, formats)
	cli.Operations = operations.New(transport, formats)
	cli.Policies = policies.New(transport, formats)
	cli.RatingGroups = rating_groups.New(transport, formats)
	cli.SMS = sms.New(transport, formats)
	cli.Subscribers = subscribers.New(transport, formats)
	cli.Tenants = tenants.New(transport, formats)
	cli.Upgrades = upgrades.New(transport, formats)
	cli.User = user.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// Magma is a client for magma
type Magma struct {
	ApNs a_p_ns.ClientService

	About about.ClientService

	Alerts alerts.ClientService

	CallTracing call_tracing.ClientService

	CarrierWifiGateways carrier_wifi_gateways.ClientService

	CarrierWifiNetworks carrier_wifi_networks.ClientService

	Cbsds cbsds.ClientService

	Commands commands.ClientService

	EnodeBs enode_bs.ClientService

	Events events.ClientService

	FederatedLTENetworks federated_lte_networks.ClientService

	FederationGateways federation_gateways.ClientService

	FederationNetworks federation_networks.ClientService

	Gateways gateways.ClientService

	Logs logs.ClientService

	LTEGateways lte_gateways.ClientService

	LTENetworks lte_networks.ClientService

	Metrics metrics.ClientService

	NetworkProbes network_probes.ClientService

	Networks networks.ClientService

	Operations operations.ClientService

	Policies policies.ClientService

	RatingGroups rating_groups.ClientService

	SMS sms.ClientService

	Subscribers subscribers.ClientService

	Tenants tenants.ClientService

	Upgrades upgrades.ClientService

	User user.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *Magma) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.ApNs.SetTransport(transport)
	c.About.SetTransport(transport)
	c.Alerts.SetTransport(transport)
	c.CallTracing.SetTransport(transport)
	c.CarrierWifiGateways.SetTransport(transport)
	c.CarrierWifiNetworks.SetTransport(transport)
	c.Cbsds.SetTransport(transport)
	c.Commands.SetTransport(transport)
	c.EnodeBs.SetTransport(transport)
	c.Events.SetTransport(transport)
	c.FederatedLTENetworks.SetTransport(transport)
	c.FederationGateways.SetTransport(transport)
	c.FederationNetworks.SetTransport(transport)
	c.Gateways.SetTransport(transport)
	c.Logs.SetTransport(transport)
	c.LTEGateways.SetTransport(transport)
	c.LTENetworks.SetTransport(transport)
	c.Metrics.SetTransport(transport)
	c.NetworkProbes.SetTransport(transport)
	c.Networks.SetTransport(transport)
	c.Operations.SetTransport(transport)
	c.Policies.SetTransport(transport)
	c.RatingGroups.SetTransport(transport)
	c.SMS.SetTransport(transport)
	c.Subscribers.SetTransport(transport)
	c.Tenants.SetTransport(transport)
	c.Upgrades.SetTransport(transport)
	c.User.SetTransport(transport)
}
