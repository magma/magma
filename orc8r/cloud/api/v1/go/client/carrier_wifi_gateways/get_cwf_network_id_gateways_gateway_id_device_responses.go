// Code generated by go-swagger; DO NOT EDIT.

package carrier_wifi_gateways

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "magma/orc8r/cloud/api/v1/go/models"
)

// GetCwfNetworkIDGatewaysGatewayIDDeviceReader is a Reader for the GetCwfNetworkIDGatewaysGatewayIDDevice structure.
type GetCwfNetworkIDGatewaysGatewayIDDeviceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCwfNetworkIDGatewaysGatewayIDDeviceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCwfNetworkIDGatewaysGatewayIDDeviceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetCwfNetworkIDGatewaysGatewayIDDeviceDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetCwfNetworkIDGatewaysGatewayIDDeviceOK creates a GetCwfNetworkIDGatewaysGatewayIDDeviceOK with default headers values
func NewGetCwfNetworkIDGatewaysGatewayIDDeviceOK() *GetCwfNetworkIDGatewaysGatewayIDDeviceOK {
	return &GetCwfNetworkIDGatewaysGatewayIDDeviceOK{}
}

/*GetCwfNetworkIDGatewaysGatewayIDDeviceOK handles this case with default header values.

The physical device for the gateway
*/
type GetCwfNetworkIDGatewaysGatewayIDDeviceOK struct {
	Payload *models.GatewayDevice
}

func (o *GetCwfNetworkIDGatewaysGatewayIDDeviceOK) Error() string {
	return fmt.Sprintf("[GET /cwf/{network_id}/gateways/{gateway_id}/device][%d] getCwfNetworkIdGatewaysGatewayIdDeviceOK  %+v", 200, o.Payload)
}

func (o *GetCwfNetworkIDGatewaysGatewayIDDeviceOK) GetPayload() *models.GatewayDevice {
	return o.Payload
}

func (o *GetCwfNetworkIDGatewaysGatewayIDDeviceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayDevice)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCwfNetworkIDGatewaysGatewayIDDeviceDefault creates a GetCwfNetworkIDGatewaysGatewayIDDeviceDefault with default headers values
func NewGetCwfNetworkIDGatewaysGatewayIDDeviceDefault(code int) *GetCwfNetworkIDGatewaysGatewayIDDeviceDefault {
	return &GetCwfNetworkIDGatewaysGatewayIDDeviceDefault{
		_statusCode: code,
	}
}

/*GetCwfNetworkIDGatewaysGatewayIDDeviceDefault handles this case with default header values.

Unexpected Error
*/
type GetCwfNetworkIDGatewaysGatewayIDDeviceDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get cwf network ID gateways gateway ID device default response
func (o *GetCwfNetworkIDGatewaysGatewayIDDeviceDefault) Code() int {
	return o._statusCode
}

func (o *GetCwfNetworkIDGatewaysGatewayIDDeviceDefault) Error() string {
	return fmt.Sprintf("[GET /cwf/{network_id}/gateways/{gateway_id}/device][%d] GetCwfNetworkIDGatewaysGatewayIDDevice default  %+v", o._statusCode, o.Payload)
}

func (o *GetCwfNetworkIDGatewaysGatewayIDDeviceDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCwfNetworkIDGatewaysGatewayIDDeviceDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
