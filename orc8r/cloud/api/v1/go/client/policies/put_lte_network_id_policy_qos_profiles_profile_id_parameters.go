// Code generated by go-swagger; DO NOT EDIT.

package policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "magma/orc8r/cloud/api/v1/go/models"
)

// NewPutLTENetworkIDPolicyQosProfilesProfileIDParams creates a new PutLTENetworkIDPolicyQosProfilesProfileIDParams object
// with the default values initialized.
func NewPutLTENetworkIDPolicyQosProfilesProfileIDParams() *PutLTENetworkIDPolicyQosProfilesProfileIDParams {
	var ()
	return &PutLTENetworkIDPolicyQosProfilesProfileIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutLTENetworkIDPolicyQosProfilesProfileIDParamsWithTimeout creates a new PutLTENetworkIDPolicyQosProfilesProfileIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutLTENetworkIDPolicyQosProfilesProfileIDParamsWithTimeout(timeout time.Duration) *PutLTENetworkIDPolicyQosProfilesProfileIDParams {
	var ()
	return &PutLTENetworkIDPolicyQosProfilesProfileIDParams{

		timeout: timeout,
	}
}

// NewPutLTENetworkIDPolicyQosProfilesProfileIDParamsWithContext creates a new PutLTENetworkIDPolicyQosProfilesProfileIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutLTENetworkIDPolicyQosProfilesProfileIDParamsWithContext(ctx context.Context) *PutLTENetworkIDPolicyQosProfilesProfileIDParams {
	var ()
	return &PutLTENetworkIDPolicyQosProfilesProfileIDParams{

		Context: ctx,
	}
}

// NewPutLTENetworkIDPolicyQosProfilesProfileIDParamsWithHTTPClient creates a new PutLTENetworkIDPolicyQosProfilesProfileIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutLTENetworkIDPolicyQosProfilesProfileIDParamsWithHTTPClient(client *http.Client) *PutLTENetworkIDPolicyQosProfilesProfileIDParams {
	var ()
	return &PutLTENetworkIDPolicyQosProfilesProfileIDParams{
		HTTPClient: client,
	}
}

/*PutLTENetworkIDPolicyQosProfilesProfileIDParams contains all the parameters to send to the API endpoint
for the put LTE network ID policy qos profiles profile ID operation typically these are written to a http.Request
*/
type PutLTENetworkIDPolicyQosProfilesProfileIDParams struct {

	/*NetworkID
	  Network ID

	*/
	NetworkID string
	/*Profile
	  Policy QoS profile

	*/
	Profile *models.PolicyQosProfile
	/*ProfileID
	  Policy QoS profile

	*/
	ProfileID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put LTE network ID policy qos profiles profile ID params
func (o *PutLTENetworkIDPolicyQosProfilesProfileIDParams) WithTimeout(timeout time.Duration) *PutLTENetworkIDPolicyQosProfilesProfileIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put LTE network ID policy qos profiles profile ID params
func (o *PutLTENetworkIDPolicyQosProfilesProfileIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put LTE network ID policy qos profiles profile ID params
func (o *PutLTENetworkIDPolicyQosProfilesProfileIDParams) WithContext(ctx context.Context) *PutLTENetworkIDPolicyQosProfilesProfileIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put LTE network ID policy qos profiles profile ID params
func (o *PutLTENetworkIDPolicyQosProfilesProfileIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put LTE network ID policy qos profiles profile ID params
func (o *PutLTENetworkIDPolicyQosProfilesProfileIDParams) WithHTTPClient(client *http.Client) *PutLTENetworkIDPolicyQosProfilesProfileIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put LTE network ID policy qos profiles profile ID params
func (o *PutLTENetworkIDPolicyQosProfilesProfileIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNetworkID adds the networkID to the put LTE network ID policy qos profiles profile ID params
func (o *PutLTENetworkIDPolicyQosProfilesProfileIDParams) WithNetworkID(networkID string) *PutLTENetworkIDPolicyQosProfilesProfileIDParams {
	o.SetNetworkID(networkID)
	return o
}

// SetNetworkID adds the networkId to the put LTE network ID policy qos profiles profile ID params
func (o *PutLTENetworkIDPolicyQosProfilesProfileIDParams) SetNetworkID(networkID string) {
	o.NetworkID = networkID
}

// WithProfile adds the profile to the put LTE network ID policy qos profiles profile ID params
func (o *PutLTENetworkIDPolicyQosProfilesProfileIDParams) WithProfile(profile *models.PolicyQosProfile) *PutLTENetworkIDPolicyQosProfilesProfileIDParams {
	o.SetProfile(profile)
	return o
}

// SetProfile adds the profile to the put LTE network ID policy qos profiles profile ID params
func (o *PutLTENetworkIDPolicyQosProfilesProfileIDParams) SetProfile(profile *models.PolicyQosProfile) {
	o.Profile = profile
}

// WithProfileID adds the profileID to the put LTE network ID policy qos profiles profile ID params
func (o *PutLTENetworkIDPolicyQosProfilesProfileIDParams) WithProfileID(profileID string) *PutLTENetworkIDPolicyQosProfilesProfileIDParams {
	o.SetProfileID(profileID)
	return o
}

// SetProfileID adds the profileId to the put LTE network ID policy qos profiles profile ID params
func (o *PutLTENetworkIDPolicyQosProfilesProfileIDParams) SetProfileID(profileID string) {
	o.ProfileID = profileID
}

// WriteToRequest writes these params to a swagger request
func (o *PutLTENetworkIDPolicyQosProfilesProfileIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param network_id
	if err := r.SetPathParam("network_id", o.NetworkID); err != nil {
		return err
	}

	if o.Profile != nil {
		if err := r.SetBodyParam(o.Profile); err != nil {
			return err
		}
	}

	// path param profile_id
	if err := r.SetPathParam("profile_id", o.ProfileID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
