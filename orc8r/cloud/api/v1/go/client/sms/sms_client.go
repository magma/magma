// Code generated by go-swagger; DO NOT EDIT.

package sms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new sms API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for sms API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
DeleteLTENetworkIDSMSSMSPk deletes SMS message
*/
func (a *Client) DeleteLTENetworkIDSMSSMSPk(params *DeleteLTENetworkIDSMSSMSPkParams) (*DeleteLTENetworkIDSMSSMSPkNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteLTENetworkIDSMSSMSPkParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteLTENetworkIDSMSSMSPk",
		Method:             "DELETE",
		PathPattern:        "/lte/{network_id}/sms/{sms_pk}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &DeleteLTENetworkIDSMSSMSPkReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteLTENetworkIDSMSSMSPkNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*DeleteLTENetworkIDSMSSMSPkDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
GetLTENetworkIDSMS lists SMS messages
*/
func (a *Client) GetLTENetworkIDSMS(params *GetLTENetworkIDSMSParams) (*GetLTENetworkIDSMSOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLTENetworkIDSMSParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLTENetworkIDSMS",
		Method:             "GET",
		PathPattern:        "/lte/{network_id}/sms",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetLTENetworkIDSMSReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLTENetworkIDSMSOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetLTENetworkIDSMSDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
GetLTENetworkIDSMSSMSPk gets SMS message
*/
func (a *Client) GetLTENetworkIDSMSSMSPk(params *GetLTENetworkIDSMSSMSPkParams) (*GetLTENetworkIDSMSSMSPkOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLTENetworkIDSMSSMSPkParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLTENetworkIDSMSSMSPk",
		Method:             "GET",
		PathPattern:        "/lte/{network_id}/sms/{sms_pk}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetLTENetworkIDSMSSMSPkReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLTENetworkIDSMSSMSPkOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetLTENetworkIDSMSSMSPkDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PostLTENetworkIDSMS creates new SMS message
*/
func (a *Client) PostLTENetworkIDSMS(params *PostLTENetworkIDSMSParams) (*PostLTENetworkIDSMSCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostLTENetworkIDSMSParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostLTENetworkIDSMS",
		Method:             "POST",
		PathPattern:        "/lte/{network_id}/sms",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &PostLTENetworkIDSMSReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostLTENetworkIDSMSCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PostLTENetworkIDSMSDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
