// Code generated by go-swagger; DO NOT EDIT.

package lte_gateways

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"magma/orc8r/cloud/api/v1/go/models"
)

// GetLTENetworkIDGatewaysGatewayIDCellularNgcReader is a Reader for the GetLTENetworkIDGatewaysGatewayIDCellularNgc structure.
type GetLTENetworkIDGatewaysGatewayIDCellularNgcReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLTENetworkIDGatewaysGatewayIDCellularNgcReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewGetLTENetworkIDGatewaysGatewayIDCellularNgcNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetLTENetworkIDGatewaysGatewayIDCellularNgcDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetLTENetworkIDGatewaysGatewayIDCellularNgcNoContent creates a GetLTENetworkIDGatewaysGatewayIDCellularNgcNoContent with default headers values
func NewGetLTENetworkIDGatewaysGatewayIDCellularNgcNoContent() *GetLTENetworkIDGatewaysGatewayIDCellularNgcNoContent {
	return &GetLTENetworkIDGatewaysGatewayIDCellularNgcNoContent{}
}

/*
GetLTENetworkIDGatewaysGatewayIDCellularNgcNoContent describes a response with status code 204, with default header values.

NGC configuration
*/
type GetLTENetworkIDGatewaysGatewayIDCellularNgcNoContent struct {
	Payload *models.GatewayNgcConfigs
}

func (o *GetLTENetworkIDGatewaysGatewayIDCellularNgcNoContent) Error() string {
	return fmt.Sprintf("[GET /lte/{network_id}/gateways/{gateway_id}/cellular/ngc][%d] getLteNetworkIdGatewaysGatewayIdCellularNgcNoContent  %+v", 204, o.Payload)
}
func (o *GetLTENetworkIDGatewaysGatewayIDCellularNgcNoContent) GetPayload() *models.GatewayNgcConfigs {
	return o.Payload
}

func (o *GetLTENetworkIDGatewaysGatewayIDCellularNgcNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayNgcConfigs)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLTENetworkIDGatewaysGatewayIDCellularNgcDefault creates a GetLTENetworkIDGatewaysGatewayIDCellularNgcDefault with default headers values
func NewGetLTENetworkIDGatewaysGatewayIDCellularNgcDefault(code int) *GetLTENetworkIDGatewaysGatewayIDCellularNgcDefault {
	return &GetLTENetworkIDGatewaysGatewayIDCellularNgcDefault{
		_statusCode: code,
	}
}

/*
GetLTENetworkIDGatewaysGatewayIDCellularNgcDefault describes a response with status code -1, with default header values.

Unexpected Error
*/
type GetLTENetworkIDGatewaysGatewayIDCellularNgcDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get LTE network ID gateways gateway ID cellular ngc default response
func (o *GetLTENetworkIDGatewaysGatewayIDCellularNgcDefault) Code() int {
	return o._statusCode
}

func (o *GetLTENetworkIDGatewaysGatewayIDCellularNgcDefault) Error() string {
	return fmt.Sprintf("[GET /lte/{network_id}/gateways/{gateway_id}/cellular/ngc][%d] GetLTENetworkIDGatewaysGatewayIDCellularNgc default  %+v", o._statusCode, o.Payload)
}
func (o *GetLTENetworkIDGatewaysGatewayIDCellularNgcDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetLTENetworkIDGatewaysGatewayIDCellularNgcDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
