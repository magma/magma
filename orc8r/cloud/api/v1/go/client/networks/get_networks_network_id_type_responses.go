// Code generated by go-swagger; DO NOT EDIT.

package networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "magma/orc8r/cloud/api/v1/go/models"
)

// GetNetworksNetworkIDTypeReader is a Reader for the GetNetworksNetworkIDType structure.
type GetNetworksNetworkIDTypeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNetworksNetworkIDTypeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNetworksNetworkIDTypeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetNetworksNetworkIDTypeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetNetworksNetworkIDTypeOK creates a GetNetworksNetworkIDTypeOK with default headers values
func NewGetNetworksNetworkIDTypeOK() *GetNetworksNetworkIDTypeOK {
	return &GetNetworksNetworkIDTypeOK{}
}

/*GetNetworksNetworkIDTypeOK handles this case with default header values.

The type of the network
*/
type GetNetworksNetworkIDTypeOK struct {
	Payload string
}

func (o *GetNetworksNetworkIDTypeOK) Error() string {
	return fmt.Sprintf("[GET /networks/{network_id}/type][%d] getNetworksNetworkIdTypeOK  %+v", 200, o.Payload)
}

func (o *GetNetworksNetworkIDTypeOK) GetPayload() string {
	return o.Payload
}

func (o *GetNetworksNetworkIDTypeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworksNetworkIDTypeDefault creates a GetNetworksNetworkIDTypeDefault with default headers values
func NewGetNetworksNetworkIDTypeDefault(code int) *GetNetworksNetworkIDTypeDefault {
	return &GetNetworksNetworkIDTypeDefault{
		_statusCode: code,
	}
}

/*GetNetworksNetworkIDTypeDefault handles this case with default header values.

Unexpected Error
*/
type GetNetworksNetworkIDTypeDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get networks network ID type default response
func (o *GetNetworksNetworkIDTypeDefault) Code() int {
	return o._statusCode
}

func (o *GetNetworksNetworkIDTypeDefault) Error() string {
	return fmt.Sprintf("[GET /networks/{network_id}/type][%d] GetNetworksNetworkIDType default  %+v", o._statusCode, o.Payload)
}

func (o *GetNetworksNetworkIDTypeDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNetworksNetworkIDTypeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
