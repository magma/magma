// Code generated by go-swagger; DO NOT EDIT.

package subscribers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetLTENetworkIDSubscribersV2Params creates a new GetLTENetworkIDSubscribersV2Params object
// with the default values initialized.
func NewGetLTENetworkIDSubscribersV2Params() *GetLTENetworkIDSubscribersV2Params {
	var ()
	return &GetLTENetworkIDSubscribersV2Params{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetLTENetworkIDSubscribersV2ParamsWithTimeout creates a new GetLTENetworkIDSubscribersV2Params object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetLTENetworkIDSubscribersV2ParamsWithTimeout(timeout time.Duration) *GetLTENetworkIDSubscribersV2Params {
	var ()
	return &GetLTENetworkIDSubscribersV2Params{

		timeout: timeout,
	}
}

// NewGetLTENetworkIDSubscribersV2ParamsWithContext creates a new GetLTENetworkIDSubscribersV2Params object
// with the default values initialized, and the ability to set a context for a request
func NewGetLTENetworkIDSubscribersV2ParamsWithContext(ctx context.Context) *GetLTENetworkIDSubscribersV2Params {
	var ()
	return &GetLTENetworkIDSubscribersV2Params{

		Context: ctx,
	}
}

// NewGetLTENetworkIDSubscribersV2ParamsWithHTTPClient creates a new GetLTENetworkIDSubscribersV2Params object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetLTENetworkIDSubscribersV2ParamsWithHTTPClient(client *http.Client) *GetLTENetworkIDSubscribersV2Params {
	var ()
	return &GetLTENetworkIDSubscribersV2Params{
		HTTPClient: client,
	}
}

/*GetLTENetworkIDSubscribersV2Params contains all the parameters to send to the API endpoint
for the get LTE network ID subscribers v2 operation typically these are written to a http.Request
*/
type GetLTENetworkIDSubscribersV2Params struct {

	/*IP
	  Filter to subscribers assigned the passed IP address

	*/
	IP *string
	/*Msisdn
	  Filter to subscribers with the passed MSISDN

	*/
	Msisdn *string
	/*NetworkID
	  Network ID

	*/
	NetworkID string
	/*PageSize
	  Maximum number of entities to return

	*/
	PageSize *uint32
	/*PageToken
	  Opaque page token for paginated requests

	*/
	PageToken *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get LTE network ID subscribers v2 params
func (o *GetLTENetworkIDSubscribersV2Params) WithTimeout(timeout time.Duration) *GetLTENetworkIDSubscribersV2Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get LTE network ID subscribers v2 params
func (o *GetLTENetworkIDSubscribersV2Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get LTE network ID subscribers v2 params
func (o *GetLTENetworkIDSubscribersV2Params) WithContext(ctx context.Context) *GetLTENetworkIDSubscribersV2Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get LTE network ID subscribers v2 params
func (o *GetLTENetworkIDSubscribersV2Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get LTE network ID subscribers v2 params
func (o *GetLTENetworkIDSubscribersV2Params) WithHTTPClient(client *http.Client) *GetLTENetworkIDSubscribersV2Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get LTE network ID subscribers v2 params
func (o *GetLTENetworkIDSubscribersV2Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIP adds the ip to the get LTE network ID subscribers v2 params
func (o *GetLTENetworkIDSubscribersV2Params) WithIP(ip *string) *GetLTENetworkIDSubscribersV2Params {
	o.SetIP(ip)
	return o
}

// SetIP adds the ip to the get LTE network ID subscribers v2 params
func (o *GetLTENetworkIDSubscribersV2Params) SetIP(ip *string) {
	o.IP = ip
}

// WithMsisdn adds the msisdn to the get LTE network ID subscribers v2 params
func (o *GetLTENetworkIDSubscribersV2Params) WithMsisdn(msisdn *string) *GetLTENetworkIDSubscribersV2Params {
	o.SetMsisdn(msisdn)
	return o
}

// SetMsisdn adds the msisdn to the get LTE network ID subscribers v2 params
func (o *GetLTENetworkIDSubscribersV2Params) SetMsisdn(msisdn *string) {
	o.Msisdn = msisdn
}

// WithNetworkID adds the networkID to the get LTE network ID subscribers v2 params
func (o *GetLTENetworkIDSubscribersV2Params) WithNetworkID(networkID string) *GetLTENetworkIDSubscribersV2Params {
	o.SetNetworkID(networkID)
	return o
}

// SetNetworkID adds the networkId to the get LTE network ID subscribers v2 params
func (o *GetLTENetworkIDSubscribersV2Params) SetNetworkID(networkID string) {
	o.NetworkID = networkID
}

// WithPageSize adds the pageSize to the get LTE network ID subscribers v2 params
func (o *GetLTENetworkIDSubscribersV2Params) WithPageSize(pageSize *uint32) *GetLTENetworkIDSubscribersV2Params {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the get LTE network ID subscribers v2 params
func (o *GetLTENetworkIDSubscribersV2Params) SetPageSize(pageSize *uint32) {
	o.PageSize = pageSize
}

// WithPageToken adds the pageToken to the get LTE network ID subscribers v2 params
func (o *GetLTENetworkIDSubscribersV2Params) WithPageToken(pageToken *string) *GetLTENetworkIDSubscribersV2Params {
	o.SetPageToken(pageToken)
	return o
}

// SetPageToken adds the pageToken to the get LTE network ID subscribers v2 params
func (o *GetLTENetworkIDSubscribersV2Params) SetPageToken(pageToken *string) {
	o.PageToken = pageToken
}

// WriteToRequest writes these params to a swagger request
func (o *GetLTENetworkIDSubscribersV2Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IP != nil {

		// query param ip
		var qrIP string
		if o.IP != nil {
			qrIP = *o.IP
		}
		qIP := qrIP
		if qIP != "" {
			if err := r.SetQueryParam("ip", qIP); err != nil {
				return err
			}
		}

	}

	if o.Msisdn != nil {

		// query param msisdn
		var qrMsisdn string
		if o.Msisdn != nil {
			qrMsisdn = *o.Msisdn
		}
		qMsisdn := qrMsisdn
		if qMsisdn != "" {
			if err := r.SetQueryParam("msisdn", qMsisdn); err != nil {
				return err
			}
		}

	}

	// path param network_id
	if err := r.SetPathParam("network_id", o.NetworkID); err != nil {
		return err
	}

	if o.PageSize != nil {

		// query param page_size
		var qrPageSize uint32
		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatUint32(qrPageSize)
		if qPageSize != "" {
			if err := r.SetQueryParam("page_size", qPageSize); err != nil {
				return err
			}
		}

	}

	if o.PageToken != nil {

		// query param page_token
		var qrPageToken string
		if o.PageToken != nil {
			qrPageToken = *o.PageToken
		}
		qPageToken := qrPageToken
		if qPageToken != "" {
			if err := r.SetQueryParam("page_token", qPageToken); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
