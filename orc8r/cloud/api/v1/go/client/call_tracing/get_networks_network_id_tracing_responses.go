// Code generated by go-swagger; DO NOT EDIT.

package call_tracing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "magma/orc8r/cloud/api/v1/go/models"
)

// GetNetworksNetworkIDTracingReader is a Reader for the GetNetworksNetworkIDTracing structure.
type GetNetworksNetworkIDTracingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNetworksNetworkIDTracingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNetworksNetworkIDTracingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetNetworksNetworkIDTracingDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetNetworksNetworkIDTracingOK creates a GetNetworksNetworkIDTracingOK with default headers values
func NewGetNetworksNetworkIDTracingOK() *GetNetworksNetworkIDTracingOK {
	return &GetNetworksNetworkIDTracingOK{}
}

/*GetNetworksNetworkIDTracingOK handles this case with default header values.

Success
*/
type GetNetworksNetworkIDTracingOK struct {
	Payload *GetNetworksNetworkIDTracingOKBodyTuple0
}

func (o *GetNetworksNetworkIDTracingOK) Error() string {
	return fmt.Sprintf("[GET /networks/{network_id}/tracing][%d] getNetworksNetworkIdTracingOK  %+v", 200, o.Payload)
}

func (o *GetNetworksNetworkIDTracingOK) GetPayload() *GetNetworksNetworkIDTracingOKBodyTuple0 {
	return o.Payload
}

func (o *GetNetworksNetworkIDTracingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetNetworksNetworkIDTracingOKBodyTuple0)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworksNetworkIDTracingDefault creates a GetNetworksNetworkIDTracingDefault with default headers values
func NewGetNetworksNetworkIDTracingDefault(code int) *GetNetworksNetworkIDTracingDefault {
	return &GetNetworksNetworkIDTracingDefault{
		_statusCode: code,
	}
}

/*GetNetworksNetworkIDTracingDefault handles this case with default header values.

Unexpected Error
*/
type GetNetworksNetworkIDTracingDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get networks network ID tracing default response
func (o *GetNetworksNetworkIDTracingDefault) Code() int {
	return o._statusCode
}

func (o *GetNetworksNetworkIDTracingDefault) Error() string {
	return fmt.Sprintf("[GET /networks/{network_id}/tracing][%d] GetNetworksNetworkIDTracing default  %+v", o._statusCode, o.Payload)
}

func (o *GetNetworksNetworkIDTracingDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNetworksNetworkIDTracingDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetNetworksNetworkIDTracingOKBodyTuple0 GetNetworksNetworkIDTracingOKBodyTuple0 a representation of an anonymous Tuple type
swagger:model GetNetworksNetworkIDTracingOKBodyTuple0
*/
type GetNetworksNetworkIDTracingOKBodyTuple0 struct {

	// p0
	// Required: true
	P0 *models.CallTrace `json:"-"` // custom serializer

}

// UnmarshalJSON unmarshals this tuple type from a JSON array
func (o *GetNetworksNetworkIDTracingOKBodyTuple0) UnmarshalJSON(raw []byte) error {
	// stage 1, get the array but just the array
	var stage1 []json.RawMessage
	buf := bytes.NewBuffer(raw)
	dec := json.NewDecoder(buf)
	dec.UseNumber()

	if err := dec.Decode(&stage1); err != nil {
		return err
	}

	// stage 2: hydrates struct members with tuple elements

	if len(stage1) > 0 {
		var dataP0 models.CallTrace
		buf = bytes.NewBuffer(stage1[0])
		dec := json.NewDecoder(buf)
		dec.UseNumber()
		if err := dec.Decode(&dataP0); err != nil {
			return err
		}
		o.P0 = &dataP0

	}

	return nil
}

// MarshalJSON marshals this tuple type into a JSON array
func (o GetNetworksNetworkIDTracingOKBodyTuple0) MarshalJSON() ([]byte, error) {
	data := []interface{}{
		o.P0,
	}

	return json.Marshal(data)
}

// Validate validates this get networks network ID tracing o k body tuple0
func (o *GetNetworksNetworkIDTracingOKBodyTuple0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateP0(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetNetworksNetworkIDTracingOKBodyTuple0) validateP0(formats strfmt.Registry) error {

	if err := validate.Required("P0", "body", o.P0); err != nil {
		return err
	}

	if o.P0 != nil {
		if err := o.P0.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("P0")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetNetworksNetworkIDTracingOKBodyTuple0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetNetworksNetworkIDTracingOKBodyTuple0) UnmarshalBinary(b []byte) error {
	var res GetNetworksNetworkIDTracingOKBodyTuple0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
