// Code generated by go-swagger; DO NOT EDIT.

package metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetNetworksNetworkIDPrometheusSeriesParams creates a new GetNetworksNetworkIDPrometheusSeriesParams object
// with the default values initialized.
func NewGetNetworksNetworkIDPrometheusSeriesParams() *GetNetworksNetworkIDPrometheusSeriesParams {
	var ()
	return &GetNetworksNetworkIDPrometheusSeriesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetNetworksNetworkIDPrometheusSeriesParamsWithTimeout creates a new GetNetworksNetworkIDPrometheusSeriesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetNetworksNetworkIDPrometheusSeriesParamsWithTimeout(timeout time.Duration) *GetNetworksNetworkIDPrometheusSeriesParams {
	var ()
	return &GetNetworksNetworkIDPrometheusSeriesParams{

		timeout: timeout,
	}
}

// NewGetNetworksNetworkIDPrometheusSeriesParamsWithContext creates a new GetNetworksNetworkIDPrometheusSeriesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetNetworksNetworkIDPrometheusSeriesParamsWithContext(ctx context.Context) *GetNetworksNetworkIDPrometheusSeriesParams {
	var ()
	return &GetNetworksNetworkIDPrometheusSeriesParams{

		Context: ctx,
	}
}

// NewGetNetworksNetworkIDPrometheusSeriesParamsWithHTTPClient creates a new GetNetworksNetworkIDPrometheusSeriesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetNetworksNetworkIDPrometheusSeriesParamsWithHTTPClient(client *http.Client) *GetNetworksNetworkIDPrometheusSeriesParams {
	var ()
	return &GetNetworksNetworkIDPrometheusSeriesParams{
		HTTPClient: client,
	}
}

/*GetNetworksNetworkIDPrometheusSeriesParams contains all the parameters to send to the API endpoint
for the get networks network ID prometheus series operation typically these are written to a http.Request
*/
type GetNetworksNetworkIDPrometheusSeriesParams struct {

	/*End
	  end time of the requested range (UnixTime or RFC3339)

	*/
	End *string
	/*Match
	  Matcher for metric series query

	*/
	Match []string
	/*NetworkID
	  Network ID

	*/
	NetworkID string
	/*Start
	  start time of the requested range (UnixTime or RFC3339)

	*/
	Start *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get networks network ID prometheus series params
func (o *GetNetworksNetworkIDPrometheusSeriesParams) WithTimeout(timeout time.Duration) *GetNetworksNetworkIDPrometheusSeriesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get networks network ID prometheus series params
func (o *GetNetworksNetworkIDPrometheusSeriesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get networks network ID prometheus series params
func (o *GetNetworksNetworkIDPrometheusSeriesParams) WithContext(ctx context.Context) *GetNetworksNetworkIDPrometheusSeriesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get networks network ID prometheus series params
func (o *GetNetworksNetworkIDPrometheusSeriesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get networks network ID prometheus series params
func (o *GetNetworksNetworkIDPrometheusSeriesParams) WithHTTPClient(client *http.Client) *GetNetworksNetworkIDPrometheusSeriesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get networks network ID prometheus series params
func (o *GetNetworksNetworkIDPrometheusSeriesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEnd adds the end to the get networks network ID prometheus series params
func (o *GetNetworksNetworkIDPrometheusSeriesParams) WithEnd(end *string) *GetNetworksNetworkIDPrometheusSeriesParams {
	o.SetEnd(end)
	return o
}

// SetEnd adds the end to the get networks network ID prometheus series params
func (o *GetNetworksNetworkIDPrometheusSeriesParams) SetEnd(end *string) {
	o.End = end
}

// WithMatch adds the match to the get networks network ID prometheus series params
func (o *GetNetworksNetworkIDPrometheusSeriesParams) WithMatch(match []string) *GetNetworksNetworkIDPrometheusSeriesParams {
	o.SetMatch(match)
	return o
}

// SetMatch adds the match to the get networks network ID prometheus series params
func (o *GetNetworksNetworkIDPrometheusSeriesParams) SetMatch(match []string) {
	o.Match = match
}

// WithNetworkID adds the networkID to the get networks network ID prometheus series params
func (o *GetNetworksNetworkIDPrometheusSeriesParams) WithNetworkID(networkID string) *GetNetworksNetworkIDPrometheusSeriesParams {
	o.SetNetworkID(networkID)
	return o
}

// SetNetworkID adds the networkId to the get networks network ID prometheus series params
func (o *GetNetworksNetworkIDPrometheusSeriesParams) SetNetworkID(networkID string) {
	o.NetworkID = networkID
}

// WithStart adds the start to the get networks network ID prometheus series params
func (o *GetNetworksNetworkIDPrometheusSeriesParams) WithStart(start *string) *GetNetworksNetworkIDPrometheusSeriesParams {
	o.SetStart(start)
	return o
}

// SetStart adds the start to the get networks network ID prometheus series params
func (o *GetNetworksNetworkIDPrometheusSeriesParams) SetStart(start *string) {
	o.Start = start
}

// WriteToRequest writes these params to a swagger request
func (o *GetNetworksNetworkIDPrometheusSeriesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.End != nil {

		// query param end
		var qrEnd string
		if o.End != nil {
			qrEnd = *o.End
		}
		qEnd := qrEnd
		if qEnd != "" {
			if err := r.SetQueryParam("end", qEnd); err != nil {
				return err
			}
		}

	}

	valuesMatch := o.Match

	joinedMatch := swag.JoinByFormat(valuesMatch, "ssv")
	// query array param match
	if err := r.SetQueryParam("match", joinedMatch...); err != nil {
		return err
	}

	// path param network_id
	if err := r.SetPathParam("network_id", o.NetworkID); err != nil {
		return err
	}

	if o.Start != nil {

		// query param start
		var qrStart string
		if o.Start != nil {
			qrStart = *o.Start
		}
		qStart := qrStart
		if qStart != "" {
			if err := r.SetQueryParam("start", qStart); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
