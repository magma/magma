// Code generated by go-swagger; DO NOT EDIT.

package metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetNetworksNetworkIDPrometheusQueryParams creates a new GetNetworksNetworkIDPrometheusQueryParams object
// with the default values initialized.
func NewGetNetworksNetworkIDPrometheusQueryParams() *GetNetworksNetworkIDPrometheusQueryParams {
	var ()
	return &GetNetworksNetworkIDPrometheusQueryParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetNetworksNetworkIDPrometheusQueryParamsWithTimeout creates a new GetNetworksNetworkIDPrometheusQueryParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetNetworksNetworkIDPrometheusQueryParamsWithTimeout(timeout time.Duration) *GetNetworksNetworkIDPrometheusQueryParams {
	var ()
	return &GetNetworksNetworkIDPrometheusQueryParams{

		timeout: timeout,
	}
}

// NewGetNetworksNetworkIDPrometheusQueryParamsWithContext creates a new GetNetworksNetworkIDPrometheusQueryParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetNetworksNetworkIDPrometheusQueryParamsWithContext(ctx context.Context) *GetNetworksNetworkIDPrometheusQueryParams {
	var ()
	return &GetNetworksNetworkIDPrometheusQueryParams{

		Context: ctx,
	}
}

// NewGetNetworksNetworkIDPrometheusQueryParamsWithHTTPClient creates a new GetNetworksNetworkIDPrometheusQueryParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetNetworksNetworkIDPrometheusQueryParamsWithHTTPClient(client *http.Client) *GetNetworksNetworkIDPrometheusQueryParams {
	var ()
	return &GetNetworksNetworkIDPrometheusQueryParams{
		HTTPClient: client,
	}
}

/*GetNetworksNetworkIDPrometheusQueryParams contains all the parameters to send to the API endpoint
for the get networks network ID prometheus query operation typically these are written to a http.Request
*/
type GetNetworksNetworkIDPrometheusQueryParams struct {

	/*NetworkID
	  Network ID

	*/
	NetworkID string
	/*Query
	  PromQL query to proxy to prometheus

	*/
	Query string
	/*Time
	  time for query (UnixTime or RFC3339)

	*/
	Time *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get networks network ID prometheus query params
func (o *GetNetworksNetworkIDPrometheusQueryParams) WithTimeout(timeout time.Duration) *GetNetworksNetworkIDPrometheusQueryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get networks network ID prometheus query params
func (o *GetNetworksNetworkIDPrometheusQueryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get networks network ID prometheus query params
func (o *GetNetworksNetworkIDPrometheusQueryParams) WithContext(ctx context.Context) *GetNetworksNetworkIDPrometheusQueryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get networks network ID prometheus query params
func (o *GetNetworksNetworkIDPrometheusQueryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get networks network ID prometheus query params
func (o *GetNetworksNetworkIDPrometheusQueryParams) WithHTTPClient(client *http.Client) *GetNetworksNetworkIDPrometheusQueryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get networks network ID prometheus query params
func (o *GetNetworksNetworkIDPrometheusQueryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNetworkID adds the networkID to the get networks network ID prometheus query params
func (o *GetNetworksNetworkIDPrometheusQueryParams) WithNetworkID(networkID string) *GetNetworksNetworkIDPrometheusQueryParams {
	o.SetNetworkID(networkID)
	return o
}

// SetNetworkID adds the networkId to the get networks network ID prometheus query params
func (o *GetNetworksNetworkIDPrometheusQueryParams) SetNetworkID(networkID string) {
	o.NetworkID = networkID
}

// WithQuery adds the query to the get networks network ID prometheus query params
func (o *GetNetworksNetworkIDPrometheusQueryParams) WithQuery(query string) *GetNetworksNetworkIDPrometheusQueryParams {
	o.SetQuery(query)
	return o
}

// SetQuery adds the query to the get networks network ID prometheus query params
func (o *GetNetworksNetworkIDPrometheusQueryParams) SetQuery(query string) {
	o.Query = query
}

// WithTime adds the time to the get networks network ID prometheus query params
func (o *GetNetworksNetworkIDPrometheusQueryParams) WithTime(time *string) *GetNetworksNetworkIDPrometheusQueryParams {
	o.SetTime(time)
	return o
}

// SetTime adds the time to the get networks network ID prometheus query params
func (o *GetNetworksNetworkIDPrometheusQueryParams) SetTime(time *string) {
	o.Time = time
}

// WriteToRequest writes these params to a swagger request
func (o *GetNetworksNetworkIDPrometheusQueryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param network_id
	if err := r.SetPathParam("network_id", o.NetworkID); err != nil {
		return err
	}

	// query param query
	qrQuery := o.Query
	qQuery := qrQuery
	if qQuery != "" {
		if err := r.SetQueryParam("query", qQuery); err != nil {
			return err
		}
	}

	if o.Time != nil {

		// query param time
		var qrTime string
		if o.Time != nil {
			qrTime = *o.Time
		}
		qTime := qrTime
		if qTime != "" {
			if err := r.SetQueryParam("time", qTime); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
