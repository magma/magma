// Code generated by go-swagger; DO NOT EDIT.

package alerts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "magma/orc8r/cloud/api/v1/go/models"
)

// GetNetworksNetworkIDAlertsReader is a Reader for the GetNetworksNetworkIDAlerts structure.
type GetNetworksNetworkIDAlertsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNetworksNetworkIDAlertsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNetworksNetworkIDAlertsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetNetworksNetworkIDAlertsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetNetworksNetworkIDAlertsOK creates a GetNetworksNetworkIDAlertsOK with default headers values
func NewGetNetworksNetworkIDAlertsOK() *GetNetworksNetworkIDAlertsOK {
	return &GetNetworksNetworkIDAlertsOK{}
}

/*GetNetworksNetworkIDAlertsOK handles this case with default header values.

List of currently firing alerts
*/
type GetNetworksNetworkIDAlertsOK struct {
	Payload []*models.PromFiringAlert
}

func (o *GetNetworksNetworkIDAlertsOK) Error() string {
	return fmt.Sprintf("[GET /networks/{network_id}/alerts][%d] getNetworksNetworkIdAlertsOK  %+v", 200, o.Payload)
}

func (o *GetNetworksNetworkIDAlertsOK) GetPayload() []*models.PromFiringAlert {
	return o.Payload
}

func (o *GetNetworksNetworkIDAlertsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworksNetworkIDAlertsDefault creates a GetNetworksNetworkIDAlertsDefault with default headers values
func NewGetNetworksNetworkIDAlertsDefault(code int) *GetNetworksNetworkIDAlertsDefault {
	return &GetNetworksNetworkIDAlertsDefault{
		_statusCode: code,
	}
}

/*GetNetworksNetworkIDAlertsDefault handles this case with default header values.

Unexpected Error
*/
type GetNetworksNetworkIDAlertsDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get networks network ID alerts default response
func (o *GetNetworksNetworkIDAlertsDefault) Code() int {
	return o._statusCode
}

func (o *GetNetworksNetworkIDAlertsDefault) Error() string {
	return fmt.Sprintf("[GET /networks/{network_id}/alerts][%d] GetNetworksNetworkIDAlerts default  %+v", o._statusCode, o.Payload)
}

func (o *GetNetworksNetworkIDAlertsDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNetworksNetworkIDAlertsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
