// Code generated by go-swagger; DO NOT EDIT.

package lte_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "magma/orc8r/cloud/api/v1/go/models"
)

// NewPutLTENetworkIDGatewayPoolsGatewayPoolIDParams creates a new PutLTENetworkIDGatewayPoolsGatewayPoolIDParams object
// with the default values initialized.
func NewPutLTENetworkIDGatewayPoolsGatewayPoolIDParams() *PutLTENetworkIDGatewayPoolsGatewayPoolIDParams {
	var ()
	return &PutLTENetworkIDGatewayPoolsGatewayPoolIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutLTENetworkIDGatewayPoolsGatewayPoolIDParamsWithTimeout creates a new PutLTENetworkIDGatewayPoolsGatewayPoolIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutLTENetworkIDGatewayPoolsGatewayPoolIDParamsWithTimeout(timeout time.Duration) *PutLTENetworkIDGatewayPoolsGatewayPoolIDParams {
	var ()
	return &PutLTENetworkIDGatewayPoolsGatewayPoolIDParams{

		timeout: timeout,
	}
}

// NewPutLTENetworkIDGatewayPoolsGatewayPoolIDParamsWithContext creates a new PutLTENetworkIDGatewayPoolsGatewayPoolIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutLTENetworkIDGatewayPoolsGatewayPoolIDParamsWithContext(ctx context.Context) *PutLTENetworkIDGatewayPoolsGatewayPoolIDParams {
	var ()
	return &PutLTENetworkIDGatewayPoolsGatewayPoolIDParams{

		Context: ctx,
	}
}

// NewPutLTENetworkIDGatewayPoolsGatewayPoolIDParamsWithHTTPClient creates a new PutLTENetworkIDGatewayPoolsGatewayPoolIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutLTENetworkIDGatewayPoolsGatewayPoolIDParamsWithHTTPClient(client *http.Client) *PutLTENetworkIDGatewayPoolsGatewayPoolIDParams {
	var ()
	return &PutLTENetworkIDGatewayPoolsGatewayPoolIDParams{
		HTTPClient: client,
	}
}

/*PutLTENetworkIDGatewayPoolsGatewayPoolIDParams contains all the parameters to send to the API endpoint
for the put LTE network ID gateway pools gateway pool ID operation typically these are written to a http.Request
*/
type PutLTENetworkIDGatewayPoolsGatewayPoolIDParams struct {

	/*HAGatewayPool
	  LTE HA gateway pool

	*/
	HAGatewayPool *models.MutableCellularGatewayPool
	/*GatewayPoolID
	  Gateway Pool ID

	*/
	GatewayPoolID string
	/*NetworkID
	  Network ID

	*/
	NetworkID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put LTE network ID gateway pools gateway pool ID params
func (o *PutLTENetworkIDGatewayPoolsGatewayPoolIDParams) WithTimeout(timeout time.Duration) *PutLTENetworkIDGatewayPoolsGatewayPoolIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put LTE network ID gateway pools gateway pool ID params
func (o *PutLTENetworkIDGatewayPoolsGatewayPoolIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put LTE network ID gateway pools gateway pool ID params
func (o *PutLTENetworkIDGatewayPoolsGatewayPoolIDParams) WithContext(ctx context.Context) *PutLTENetworkIDGatewayPoolsGatewayPoolIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put LTE network ID gateway pools gateway pool ID params
func (o *PutLTENetworkIDGatewayPoolsGatewayPoolIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put LTE network ID gateway pools gateway pool ID params
func (o *PutLTENetworkIDGatewayPoolsGatewayPoolIDParams) WithHTTPClient(client *http.Client) *PutLTENetworkIDGatewayPoolsGatewayPoolIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put LTE network ID gateway pools gateway pool ID params
func (o *PutLTENetworkIDGatewayPoolsGatewayPoolIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithHAGatewayPool adds the hAGatewayPool to the put LTE network ID gateway pools gateway pool ID params
func (o *PutLTENetworkIDGatewayPoolsGatewayPoolIDParams) WithHAGatewayPool(hAGatewayPool *models.MutableCellularGatewayPool) *PutLTENetworkIDGatewayPoolsGatewayPoolIDParams {
	o.SetHAGatewayPool(hAGatewayPool)
	return o
}

// SetHAGatewayPool adds the hAGatewayPool to the put LTE network ID gateway pools gateway pool ID params
func (o *PutLTENetworkIDGatewayPoolsGatewayPoolIDParams) SetHAGatewayPool(hAGatewayPool *models.MutableCellularGatewayPool) {
	o.HAGatewayPool = hAGatewayPool
}

// WithGatewayPoolID adds the gatewayPoolID to the put LTE network ID gateway pools gateway pool ID params
func (o *PutLTENetworkIDGatewayPoolsGatewayPoolIDParams) WithGatewayPoolID(gatewayPoolID string) *PutLTENetworkIDGatewayPoolsGatewayPoolIDParams {
	o.SetGatewayPoolID(gatewayPoolID)
	return o
}

// SetGatewayPoolID adds the gatewayPoolId to the put LTE network ID gateway pools gateway pool ID params
func (o *PutLTENetworkIDGatewayPoolsGatewayPoolIDParams) SetGatewayPoolID(gatewayPoolID string) {
	o.GatewayPoolID = gatewayPoolID
}

// WithNetworkID adds the networkID to the put LTE network ID gateway pools gateway pool ID params
func (o *PutLTENetworkIDGatewayPoolsGatewayPoolIDParams) WithNetworkID(networkID string) *PutLTENetworkIDGatewayPoolsGatewayPoolIDParams {
	o.SetNetworkID(networkID)
	return o
}

// SetNetworkID adds the networkId to the put LTE network ID gateway pools gateway pool ID params
func (o *PutLTENetworkIDGatewayPoolsGatewayPoolIDParams) SetNetworkID(networkID string) {
	o.NetworkID = networkID
}

// WriteToRequest writes these params to a swagger request
func (o *PutLTENetworkIDGatewayPoolsGatewayPoolIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.HAGatewayPool != nil {
		if err := r.SetBodyParam(o.HAGatewayPool); err != nil {
			return err
		}
	}

	// path param gateway_pool_id
	if err := r.SetPathParam("gateway_pool_id", o.GatewayPoolID); err != nil {
		return err
	}

	// path param network_id
	if err := r.SetPathParam("network_id", o.NetworkID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
