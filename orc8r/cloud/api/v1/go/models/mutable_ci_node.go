// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MutableCiNode Baremetal executor writable fields
// swagger:model mutable_ci_node
type MutableCiNode struct {

	// id
	// Required: true
	// Min Length: 1
	ID *string `json:"id"`

	// tag
	Tag string `json:"tag,omitempty"`

	// vpn ip
	// Required: true
	// Format: ipv4
	VpnIP *strfmt.IPv4 `json:"vpn_ip"`
}

// Validate validates this mutable ci node
func (m *MutableCiNode) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVpnIP(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MutableCiNode) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	if err := validate.MinLength("id", "body", string(*m.ID), 1); err != nil {
		return err
	}

	return nil
}

func (m *MutableCiNode) validateVpnIP(formats strfmt.Registry) error {

	if err := validate.Required("vpn_ip", "body", m.VpnIP); err != nil {
		return err
	}

	if err := validate.FormatOf("vpn_ip", "body", "ipv4", m.VpnIP.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MutableCiNode) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MutableCiNode) UnmarshalBinary(b []byte) error {
	var res MutableCiNode
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
