// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// AaaServer aaa server configuration
// swagger:model aaa_server
type AaaServer struct {

	// accounting enabled
	AccountingEnabled bool `json:"accounting_enabled,omitempty"`

	// acct reporting enabled
	AcctReportingEnabled bool `json:"acct_reporting_enabled,omitempty"`

	// create session on auth
	CreateSessionOnAuth bool `json:"create_session_on_auth,omitempty"`

	// event logging enabled
	EventLoggingEnabled bool `json:"event_logging_enabled,omitempty"`

	// idle session timeout ms
	IdleSessionTimeoutMs uint32 `json:"idle_session_timeout_ms,omitempty" magma_alt_name:"IdleSessionTimeoutMs"`

	// radius config
	RadiusConfig *RadiusConfig `json:"radius_config,omitempty"`
}

// Validate validates this aaa server
func (m *AaaServer) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRadiusConfig(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AaaServer) validateRadiusConfig(formats strfmt.Registry) error {

	if swag.IsZero(m.RadiusConfig) { // not required
		return nil
	}

	if m.RadiusConfig != nil {
		if err := m.RadiusConfig.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("radius_config")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AaaServer) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AaaServer) UnmarshalBinary(b []byte) error {
	var res AaaServer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
