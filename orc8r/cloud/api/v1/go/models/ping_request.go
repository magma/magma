// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PingRequest ping request
// swagger:model ping_request
type PingRequest struct {

	// hosts
	// Required: true
	Hosts []string `json:"hosts"`

	// packets
	// Minimum: 1
	Packets int32 `json:"packets,omitempty"`
}

// Validate validates this ping request
func (m *PingRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHosts(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePackets(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PingRequest) validateHosts(formats strfmt.Registry) error {

	if err := validate.Required("hosts", "body", m.Hosts); err != nil {
		return err
	}

	return nil
}

func (m *PingRequest) validatePackets(formats strfmt.Registry) error {

	if swag.IsZero(m.Packets) { // not required
		return nil
	}

	if err := validate.MinimumInt("packets", "body", int64(m.Packets), 1, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PingRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PingRequest) UnmarshalBinary(b []byte) error {
	var res PingRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
