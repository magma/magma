// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// QosProfile qos profile
// swagger:model qos_profile
type QosProfile struct {

	// class id
	// Maximum: 255
	// Minimum: 0
	ClassID *int32 `json:"class_id,omitempty" magma_alt_name:"QCI"`

	// preemption capability
	PreemptionCapability *bool `json:"preemption_capability,omitempty"`

	// preemption vulnerability
	PreemptionVulnerability *bool `json:"preemption_vulnerability,omitempty"`

	// priority level
	// Maximum: 15
	// Minimum: 0
	PriorityLevel *uint32 `json:"priority_level,omitempty"`
}

// Validate validates this qos profile
func (m *QosProfile) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClassID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePriorityLevel(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *QosProfile) validateClassID(formats strfmt.Registry) error {

	if swag.IsZero(m.ClassID) { // not required
		return nil
	}

	if err := validate.MinimumInt("class_id", "body", int64(*m.ClassID), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("class_id", "body", int64(*m.ClassID), 255, false); err != nil {
		return err
	}

	return nil
}

func (m *QosProfile) validatePriorityLevel(formats strfmt.Registry) error {

	if swag.IsZero(m.PriorityLevel) { // not required
		return nil
	}

	if err := validate.MinimumInt("priority_level", "body", int64(*m.PriorityLevel), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("priority_level", "body", int64(*m.PriorityLevel), 15, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *QosProfile) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *QosProfile) UnmarshalBinary(b []byte) error {
	var res QosProfile
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
