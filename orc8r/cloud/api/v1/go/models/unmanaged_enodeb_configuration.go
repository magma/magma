// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UnmanagedENODEBConfiguration Configuration for externally managed eNodeb devices.
// swagger:model unmanaged_enodeb_configuration
type UnmanagedENODEBConfiguration struct {

	// cell id
	// Required: true
	// Maximum: 2.68435455e+08
	CellID *uint32 `json:"cell_id"`

	// ip address
	// Required: true
	// Format: ipv4
	IPAddress *strfmt.IPv4 `json:"ip_address"`

	// tac
	// Required: true
	// Maximum: 65535
	// Minimum: 1
	Tac *uint32 `json:"tac"`
}

// Validate validates this unmanaged enodeb configuration
func (m *UnmanagedENODEBConfiguration) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCellID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIPAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTac(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UnmanagedENODEBConfiguration) validateCellID(formats strfmt.Registry) error {

	if err := validate.Required("cell_id", "body", m.CellID); err != nil {
		return err
	}

	if err := validate.MaximumInt("cell_id", "body", int64(*m.CellID), 2.68435455e+08, false); err != nil {
		return err
	}

	return nil
}

func (m *UnmanagedENODEBConfiguration) validateIPAddress(formats strfmt.Registry) error {

	if err := validate.Required("ip_address", "body", m.IPAddress); err != nil {
		return err
	}

	if err := validate.FormatOf("ip_address", "body", "ipv4", m.IPAddress.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *UnmanagedENODEBConfiguration) validateTac(formats strfmt.Registry) error {

	if err := validate.Required("tac", "body", m.Tac); err != nil {
		return err
	}

	if err := validate.MinimumInt("tac", "body", int64(*m.Tac), 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("tac", "body", int64(*m.Tac), 65535, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UnmanagedENODEBConfiguration) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UnmanagedENODEBConfiguration) UnmarshalBinary(b []byte) error {
	var res UnmanagedENODEBConfiguration
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
