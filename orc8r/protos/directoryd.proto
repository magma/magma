/*
Copyright 2020 The Magma Authors.

This source code is licensed under the BSD-style license found in the
LICENSE file in the root directory of this source tree.

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
syntax = "proto3";

import "orc8r/protos/common.proto";

package magma.orc8r;

option go_package = "magma/orc8r/lib/go/protos";

// --------------------------------------------------------------------------
// Directory service -- gateway
// --------------------------------------------------------------------------

message UpdateRecordRequest {
  string id = 1;
  string location = 2;
  map <string, string> fields = 3;
}

message DirectoryField {
  string key = 1;
  string value = 2;
}

message DeleteRecordRequest {
  string id = 1;
}

message GetDirectoryFieldRequest {
  string id = 1;
  string field_key = 2;
}

message DirectoryRecord {
  string id = 1;
  repeated string location_history = 2;
  map <string, string> fields = 3;
}

message AllDirectoryRecords {
  repeated DirectoryRecord records = 1;
}

// GatewayDirectoryService allows for associating various identities to a
// record. This service runs on the gateways.
service GatewayDirectoryService {

  // Update the directory record of an object in the directory service
  rpc UpdateRecord (UpdateRecordRequest) returns (Void) {};

  // Delete directory record of an object from the directory service
  // Throws UNKNOWN if object ID does not exist
  rpc DeleteRecord (DeleteRecordRequest) returns (Void) {};

  // Get directory field for a given id and key
  rpc GetDirectoryField (GetDirectoryFieldRequest) returns (DirectoryField) {};

  // Get all directory records
  rpc GetAllDirectoryRecords (Void) returns (AllDirectoryRecords) {};
}
