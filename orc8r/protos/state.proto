/*
Copyright 2020 The Magma Authors.

This source code is licensed under the BSD-style license found in the
LICENSE file in the root directory of this source tree.

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";
package magma.orc8r;

import "orc8r/protos/common.proto";
import "orc8r/protos/service303.proto";

option go_package = "magma/orc8r/lib/go/protos";

message StateID {
    string type = 1;
    string deviceID = 2;
}

message ReportStatesRequest {
    repeated State states = 1;
}

message ReportStatesResponse {
    repeated IDAndError unreportedStates = 1;
}

message IDAndError {
    string type = 1;
    string deviceID = 2;
    string error = 3;
}

message DeleteStatesRequest {
    string networkID = 1;
    repeated StateID ids = 2;
}

message SyncStatesRequest {
   repeated IDAndVersion states = 1;
}

message IDAndVersion {
    StateID id = 1;
    uint64 version = 2;
}

message SyncStatesResponse {
    repeated IDAndVersion unsyncedStates = 1;
}

service StateService {
    // ReportStates saves states into blobstorage.
    rpc ReportStates(ReportStatesRequest) returns (ReportStatesResponse) {}

    // DeleteStates deletes states from blobstorage.
    rpc DeleteStates(DeleteStatesRequest) returns (Void) {}

    // SyncStates retrieves states from blobstorage, compares their versions
    // to the states included in the request, and returns the IDAndVersions
    // that differ.
    rpc SyncStates(SyncStatesRequest) returns (SyncStatesResponse) {}
}
