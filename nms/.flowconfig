[ignore]

<PROJECT_ROOT>/node_modules/.*/node_modules/.*

; Ignore components that we dont care if they match our flow
.*/node_modules/bcryptjs/.*
.*/node_modules/config-chain/test/.*
.*/node_modules/cross-domain-safe-weakmap/.*
.*/node_modules/eslint.*
.*/node_modules/findup/.*
.*/node_modules/jsonlint-lines-primitives/.*
.*/node_modules/zalgo-promise/.*

; Huge libraries that we dont need flow for, just speed up because we dont care
.*/node_modules/@material-ui/.*
.*/node_modules/listr/.*
.*/node_modules/pondjs/.*
.*/node_modules/plotly.js/.*
.*/node_modules/react-icons/.*
.*/node_modules/react-timeseries-charts/.*
.*/node_modules/rxjs/.*
.*/node_modules/vis/.*

; Mapbox disables these because of flow errors
; See https://github.com/mapbox/mapbox-gl-js/blob/master/.flowconfig
.*/node_modules/jsonlint-lines/.*
.*/node_modules/@mapbox/jsonlint-lines-primitives/.*
.*/node_modules/stylelint/.*
.*/node_modules/unflowify/.*
.*/node_modules/flow-coverage-report/.*
.*/node_modules/babel-plugin-transform-react-remove-prop-types/.*
.*/node_modules/conventional-changelog-core/.*
.*/node_modules/htmltojsx/.*
.*/node_modules/documentation/.*
.*/node_modules/module-deps/.*
.*/node_modules/bcryptjs/.*
.*/node_modules/@mapbox/geojson-types/fixtures/.*
.*/test/unit/style-spec/fixture/invalidjson.input.json
.*/test/integration/render-tests/.*
.*/test/build/downstream-flow-fixture/.*
.*/_batfish_site/.*

[untyped]
// TODO - fix flow error in core packages
.*/node_modules/@fbcnms/ui/insights/Alarms/AlarmApi.js
.*/node_modules/@fbcnms/platform-server/network/routes.js
.*/node_modules/@fbcnms/babel-register

[options]
esproposal.optional_chaining=enable

[libs]
node_modules/mapbox-gl/flow-typed
node_modules/mapbox-gl/dist/mapbox-gl.js.flow

[declarations]
<PROJECT_ROOT>/node_modules/relay-runtime/.*
.*/flow-typed/npm/@material-ui/.*
.*/flow-typed/npm/@testing-library/.*
.*/node_modules/react-beautiful-dnd/.*
.*/node_modules/mapbox-gl/src/.*
.*/node_modules/@fbcnms/express-middleware/.*
.*/node_modules/@fbcnms/ui/.*
.*/node_modules/@fbcnms/util/.*

[lints]
all=warn

# There is an ESLint rule for this
unclear-type=off

sketchy-null=off
sketchy-null-number=warn
sketchy-null-mixed=warn

# This is noisy for now. We *do* still want to warn on importing types
# from untyped files, which is covered by untyped-type-import
untyped-import=off

[strict]
nonstrict-import
sketchy-null
unclear-type
unsafe-getters-setters
untyped-import
untyped-type-import

[version]
^0.132.0
