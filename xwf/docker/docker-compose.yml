version: '3.7'

x-logging: &logging_anchor
  driver: "json-file"
  options:
    max-size: "100m"
    max-file: "10"

services:
  httpserver:
    image: ${XWF_REGISTRY:-facebookconnectivity-openflow-xwfm-docker.jfrog.io}/httpserver:${TAG:-latest}
    container_name: httpserver
    ports:
      - "8080:80"
    networks:
      - control
    logging: *logging_anchor
  ofpradius:
    image: ${XWF_REGISTRY:-facebookconnectivity-openflow-xwfm-docker.jfrog.io}/ofpradius:${TAG:-latest}
    container_name: ofpradius
    environment:
      - RADIUSSERVERURL=radiusserver
      - AUTHPORT=1812
    networks:
      - control
    logging: *logging_anchor
  radiusserver:
    image: ${MAGMA_REGISTRY:-local}/goradius:${XWFM_TAG:-latest}
    container_name: radiusserver
    privileged: true
    environment:
      - AAA_ENDPOINT=${APPURL:-https://graph.expresswifi.com}/radius/authorization
      - AAA_ACCESS_TOKEN=${XWF_ACCESSTOKEN}
      - RADIUS_SECRET=${XWF_SECRET}
      - TEMPLATE_ENV=radius.ofpanalytics.config.json.template
      - PARTNER_SHORTNAME=${XWF_PARTNER_SHORT_NAME}
      - SCUBA_ACCESS_TOKEN=${XWF_SCUBA_ACCESS_TOKEN:-}
      - ODS_ACCESS_TOKEN=${XWF_ODS_ACCESS_TOKEN:-}
    command: >
      /bin/sh -c "./docker-entrypoint.sh"
    networks:
      - control
    ports:
      - "1812:1812/udp"
    logging: *logging_anchor
  xwfm:
    image: ${MAGMA_REGISTRY:-local}/xwfm-integ-tests:${XWFM_TAG:-latest}
    container_name: xwfm
    privileged: true
    tty: true
    stdin_open: true
    pid: "host"
    volumes:
      - cert:/var/opt/magma/certs
      - configs_override:/var/opt/magma/configs
      - configs_default:/etc/magma
      - configs_templates:/etc/magma/templates
      - openvswitch:/var/run/openvswitch
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - ACCESSTOKEN=${XWF_ACCESSTOKEN}
      - CONNECTION_MODE=ssl
    networks:
      - control
    logging: *logging_anchor
    cap_add:
      - ALL
  pipelined:
    image: ${MAGMA_REGISTRY:-local}/gateway_pipelined:${XWFM_TAG:-latest}
    container_name: pipelined
    privileged: true
    network_mode: service:xwfm
    depends_on:
      - xwfm
    volumes:
      - cert:/var/opt/magma/certs
      - configs_override:/var/opt/magma/configs
      - configs_default:/etc/magma
      - configs_templates:/etc/magma/templates
      - openvswitch:/var/run/openvswitch
    command: >
      sh -c "
        until ovs-vsctl get interface cwag_patch ofport; do echo "waiting"; sleep 1; done &&
        ifconfig cwag_br0 192.168.128.1 netmask 255.255.255.0 up &&
        set bridge cwag_br0 protocols=protocols=OpenFlow10,OpenFlow13,OpenFlow14 other-config:disable-in-band=true &&
        /usr/bin/ovs-vsctl set-controller cwag_br0 tcp:127.0.0.1:6633 &&
        /usr/bin/ovs-vsctl set-fail-mode cwag_br0 secure &&
        python3.8 -m magma.pipelined.main"
    logging: *logging_anchor
    cap_add:
      - ALL
  tests:
    image: ${XWF_REGISTRY:-facebookconnectivity-openflow-xwfm-docker.jfrog.io}/tests:${TAG:-latest}
    container_name: tests
    privileged: true
    tty: true
    stdin_open: true
    pid: "host"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - control
      - server
    environment:
      - ACCESSTOKEN=${XWF_ACCESSTOKEN}
      - BASE_URL=${APPURL:-https://graph.expresswifi.com}
      - TEST_TYPE=${TEST_TYPE:-basic}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}
      - AWS_DEFAULT_REGION=${XWF_AWS_DEFAULT_REGION:-}
      - AWS_ACCOUNT_ID=${XWF_AWS_ACCOUNT_ID:-}
      - PARTNERNAME=${XWF_PARTNER_SHORT_NAME}
      - CPURL=${XWF_CPURL}
      - VPCEndPointID=${XWF_VPCEndPointID}
      - BACKEND=${BACKEND:-WWW}
      - TEST_CONFIG=${TEST_CONFIG:-xwfm}
    logging: *logging_anchor
    depends_on:
      - xwf_client
      - xwfm
  xwf_client:
    image: ${XWF_REGISTRY:-facebookconnectivity-openflow-xwfm-docker.jfrog.io}/xwf_client:${TAG:-latest}
    container_name: xwf_client
    privileged: true
    network_mode: "none"
    dns:
      - 10.100.0.1
    logging: *logging_anchor
    cap_add:
      - NET_ADMIN

volumes:
  cert:
  configs_override:
  configs_default:
  configs_templates:
  openvswitch:
networks:
  server:
  control:
    ipam:
      config:
        - subnet: 10.0.12.0/24
