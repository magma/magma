# Copyright 2023 The Magma Authors.

# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

################################################################
# Builder Image (We are using a base image to speed up process)
################################################################
FROM magma-dev-mme:ci-base-image as magma-mme-builder

ENV FEATURES=mme_oai
ENV MAGMA_ROOT=/magma
ENV BUILD_TYPE=RelWithDebInfo
ENV C_BUILD=/build/c

# Remove any old CI artifact
RUN rm -Rf $MAGMA_ROOT $C_BUILD && mkdir -p $C_BUILD

# Copy Code to Test
COPY ./ $MAGMA_ROOT

# Build MME executables
RUN export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig/ && \
    # Remove entitlements
    rm -Rf $MAGMA_ROOT/etc-pki-entitlement $MAGMA_ROOT/rhsm-conf $MAGMA_ROOT/rhsm-ca && \
    cd $MAGMA_ROOT && \
    echo $FEATURES && \
    bazel build //lte/gateway/c/core:mme_oai --define=disable_sentry_native=1 && \
    bazel build //lte/gateway/c/sctpd/src:sctpd --define=disable_sentry_native=1 && \
    mv $MAGMA_ROOT/bazel-bin/lte/gateway/c/core/mme_oai $MAGMA_ROOT/bazel-bin/lte/gateway/c/core/oai_mme && \
    echo 'Shared libraries for oai_mme' && \
    ldd $MAGMA_ROOT/bazel-bin/lte/gateway/c/core/oai_mme && \
    echo 'Shared libraries for sctpd' && \
    ldd $MAGMA_ROOT/bazel-bin/lte/gateway/c/sctpd/src/sctpd

# Prepare config file
RUN cd $MAGMA_ROOT/lte/gateway/docker/mme/configs/ && \
    echo -e '{ \n' \
    '"realm": "magma.com",	 \n'\
    '"use_stateless": "", \n'\
    '"conf_dir": "/magma-mme/etc", \n'\
    '"hss_hostname": "hss", \n'\
    '"mcc": "001", \n'\
    '"mnc": "01", \n'\
    '"mmeGid": "1", \n'\
    '"mmeCode": "1", \n'\
    '"tac": "1", \n'\
    '"non_eps_service_control": "OFF", \n'\
    '"csfb_mcc": "001", \n'\
    '"csfb_mnc": "01", \n'\
    '"lac": "1", \n'\
    '"s1ap_iface_name": "eth0", \n'\
    '"s1ap_ip": "192.168.61.133/24", \n'\
    '"s11_iface_name": "eth0", \n'\
    '"mme_s11_ip": "192.168.61.133/24", \n'\
    '"oai_log_level": "INFO", \n'\
    '"remote_sgw_ip": "192.168.61.130", \n'\
    '"attachedEnodebTacs": [], \n'\
    '"attached_enodeb_tacs": [1] }' \
    > mme_vars.json && \
    jinja2 ../../../configs/templates/mme.conf.template mme_vars.json --format=json  > mme.conf

################################################################
# Target Image
################################################################
FROM registry.access.redhat.com/ubi8/ubi-minimal:latest as magma-mme
ENV MAGMA_ROOT=/magma
ENV C_BUILD=/build/c

# Copy RHEL certificates for builder image
COPY ./etc-pki-entitlement /etc/pki/entitlement
# Copy the subscription manager configurations
COPY ./rhsm-conf /etc/rhsm
COPY ./rhsm-ca /etc/rhsm/ca

# Install a few tools (may not be necessary later on)
ENV TZ=Europe/Paris
RUN microdnf update -y && \
    microdnf -y install \
      libubsan \
      libasan \
      liblsan \
      sqlite \
      psmisc \
      procps-ng \
      tcpdump \
      openssl \
      boost \
      libicu \
      libidn \
      libconfig \
      lksctp-tools \
      net-tools \
      tzdata && \
    microdnf clean all -y && \
    rm -rf /var/cache/yum /var/cache/dnf && \
    rm -f /etc/pki/entitlement/*pem /etc/rhsm/ca/*pem

# Copy runtime-used shared libraries from builder
WORKDIR /lib64
COPY --from=magma-mme-builder \
# From epel8, cannot be installed on minimal UBI
    /lib64/libyaml-cpp.so.0.6 \
    /lib64/libgflags.so.2.1 \
    /lib64/libglog.so.0 \
    /lib64/libdouble-conversion.so.3 \
    /lib64/libunwind.so.8 \
    /lib64/libzmq.so.5 \
    /lib64/libczmq.so.4 \
    /lib64/libsodium.so.23 \
    /lib64/libpgm-5.2.so.0 \
# From GRPC src build
    /usr/local/lib/libgrpc.so \
    /usr/local/lib/libgrpc++.so \
    /usr/local/lib/libgpr.so \
    /usr/local/lib/libaddress_sorting.so \
    /usr/local/lib/libcares.so.2 \
    /usr/local/lib/libprotobuf.so.17 \
# From Free Diameter src build
    /usr/local/lib/libfdcore.so.6 \
    /usr/local/lib/libfdproto.so.6 \
# From nettle/gnutls src build
    /lib64/libgnutls.so.28 \
    /lib/libnettle.so.4 \
    /lib/libhogweed.so.2 \
    /lib64/

# Copy all fdx files from freeDiameter installation
WORKDIR /usr/local/lib/freeDiameter
COPY --from=magma-mme-builder /usr/local/lib/freeDiameter/* ./

# Refresh library cache
RUN ldconfig

# Copy pre-built binaries for MME and SCTPD
WORKDIR /magma-mme/bin
COPY --from=magma-mme-builder \
    $MAGMA_ROOT/bazel-bin/lte/gateway/c/core/oai_mme \
    $MAGMA_ROOT/bazel-bin/lte/gateway/c/sctpd/src/sctpd \
    ./

# Copy the configuration file templates and mean to modify/generate certificates
WORKDIR /magma-mme/etc
COPY --from=magma-mme-builder \
    $MAGMA_ROOT/lte/gateway/docker/mme/configs/mme.conf \
    $MAGMA_ROOT/lte/gateway/docker/mme/configs/mme_fd.conf \
    /magma-mme/etc/

# Create running dirs
WORKDIR /var/opt/magma/configs
# Adding mme configuration for stateful run
RUN echo "use_stateless: false" > mme.yml && \
    openssl rand -out /root/.rnd 128 && \
    echo 'Shared libraries for oai_mme' && \
    ldd /magma-mme/bin/oai_mme && \
    echo 'Shared libraries for sctpd' && \
    ldd /magma-mme/bin/sctpd

WORKDIR /etc/magma
COPY --from=magma-mme-builder \
    $MAGMA_ROOT/lte/gateway/configs/control_proxy.yml \
    $MAGMA_ROOT/lte/gateway/configs/redis.yml \
    $MAGMA_ROOT/lte/gateway/configs/service_registry.yml \
    $MAGMA_ROOT/lte/gateway/configs/sctpd.yml \
    /etc/magma/

# Adding means to re-generate certificates
WORKDIR /magma-mme/scripts
COPY --from=magma-mme-builder $MAGMA_ROOT/lte/gateway/c/core/oai/test/check_mme_s6a_certificate .
RUN sed -i -e "s@^.*THIS_SCRIPT_PATH@#@" \
           -e "s@\$SUDO@@" \
           -e "s@echo_error@echo@" \
           -e "s@echo_success@echo@" \
           -e "s@echo_warning@echo@" check_mme_s6a_certificate

WORKDIR /magma-mme

# use this label for CI purpose
LABEL use-separate-hss-realm="true"

# expose ports
EXPOSE 3870/tcp 5870/tcp 2123/udp

# For the moment, let have a dummy command
CMD ["sleep", "infinity"]
