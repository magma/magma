---

name: CWF integ test

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
  workflow_run:
    workflows:
      - build-all
    branches:
      - master
      - 'v1.*'
    types:
      - completed
env:
  SHA: ${{ github.event.workflow_run.head_commit.id || github.sha }}

jobs:
  docker-build:
    if: github.repository_owner == 'magma' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ env.SHA }}
      - name: Run docker compose
        run: |
          cd cwf/gateway/docker
          docker-compose -f docker-compose.yml -f docker-compose.override.yml -f docker-compose.nginx.yml -f docker-compose.integ-test.yml build --force-rm  --parallel
      - name: Export docker images to deploy them
        run: |
          mkdir images
          cd images
          docker save cwf_gateway_sessiond:latest | gzip > cwf_gateway_sessiond.tar.gz
          docker save cwf_nginx:latest  | gzip > cwf_nginx.tar.gz
          docker save cwf_gateway_python:latest | gzip > cwf_gateway_python.tar.gz
          docker save cwf_cwag_go:latest  | gzip > cwf_cwag_go.tar.gz
          docker save cwf_gateway_go:latest | gzip > cwf_gateway_go.tar.gz
          docker save cwf_gateway_pipelined:latest | gzip > cwf_gateway_pipelined.tar.gz
      - uses: actions/upload-artifact@v2
        with:
          name: docker-images
          path: images
      - name: Extract commit title
        # yamllint enable
        if: failure()
        id: commit
        run: |
          str="$(jq '.head_commit.message' $GITHUB_EVENT_PATH)"    # get the head_commit message
          echo ::set-output name=title::${str%%\\n*} | tr -d '"'
      - name: Notify failure to slack
        if: failure() && github.event.workflow_run.event == 'push'
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: "CWF integ test"
          SLACK_AVATAR: ":boom:"
        uses: Ilshidur/action-slack@2.1.0
        with:
          args: 'CWF integration test: docker build step failed on [${{ env.SHA }}](${{github.event.repository.owner.html_url}}/magma/commits/${{ env.SHA }}): ${{ steps.commit.outputs.title}}'
  cwf-integ-test:
    if: github.repository_owner == 'magma' || github.event_name == 'workflow_dispatch'
    runs-on: macos-10.15
    needs: docker-build
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ env.SHA }}
      - name: Cache Vagrant Boxes
        uses: actions/cache@v3
        with:
          path: ~/.vagrant.d/boxes
          key: vagrant-boxes-cwf
      - name: Setup Python env
        uses: "gabrielfalcao/pyenv-action@v8"
        with:
          default: 3.8.5
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8.5'
      - name: Install pre requisites
        run: |
          pip3 install --upgrade pip
          pip3 install ansible fabric3 jsonpickle requests PyYAML firebase_admin
          vagrant plugin install vagrant-vbguest vagrant-disksize
      - uses: actions/download-artifact@v2
        with:
          name: docker-images
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: docker-images
      - name: Copy docker images into /tmp/cwf-images
        run: |
          for IMAGES in `ls -a1 *.gz`
          do
            gzip -d $IMAGES
          done
          mkdir -p /tmp/cwf-images
          cp cwf_*.tar /tmp/cwf-images
      - name: Open up network interfaces for VM
        run: |
          sudo mkdir -p /etc/vbox/
          sudo touch /etc/vbox/networks.conf
          sudo sh -c "echo '* 192.168.0.0/16' > /etc/vbox/networks.conf"
          sudo sh -c "echo '* 3001::/64' >> /etc/vbox/networks.conf"
      - name: Run the integ test
        run: |
          cd cwf/gateway
          fab integ_test:destroy_vm=True,transfer_images=True,test_result_xml=tests.xml,rerun_fails=3,skip_docker_load=True,tar_path="/tmp/cwf-images"
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: cwf/gateway/tests.xml
      - name: Publish Unit Test Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        with:
          check_run_annotations: all tests
          files: cwf/gateway/tests.xml
      - name: Fetch logs
        if: always()
        run: |
          cd cwf/gateway
          fab transfer_artifacts:services="sessiond session_proxy pcrf ocs pipelined ingress"
          mkdir -p logs
          cp *.log logs/
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-logs
          path: cwf/gateway/logs
      - name: Publish results to Firebase
        if: always() && github.event.workflow_run.event == 'push'
        env:
          FIREBASE_SERVICE_CONFIG: ${{ secrets.FIREBASE_SERVICE_CONFIG }}
          REPORT_FILENAME: "cwf_integ_test_${{ env.SHA }}.html"
        run: |
          npm install -g xunit-viewer
          [ -f "cwf/gateway/tests.xml" ] && { xunit-viewer -r cwf/gateway/tests.xml -o "$REPORT_FILENAME"; }
          [ -f "$REPORT_FILENAME" ] && { python ci-scripts/firebase_upload_file.py -f "$REPORT_FILENAME" -o out_url.txt; }
          [ -f "out_url.txt" ] && { URL=$(cat out_url.txt); }
          python ci-scripts/firebase_publish_report.py -id ${{ env.SHA }} --verdict ${{ job.status }} --run_id ${{ github.run_id }} cwf --url $URL
      - name: Notify failure to slack
        if: failure() && github.event.workflow_run.event == 'push'
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: "CWF integ test"
          SLACK_AVATAR: ":boom:"
        uses: Ilshidur/action-slack@2.1.0
        with:
          args: 'CWF integration test: tests failed on [${{ env.SHA }}](${{github.event.repository.owner.html_url}}/magma/commits/${{ env.SHA }}): ${{ steps.commit.outputs.title}}'
