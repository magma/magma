# Copyright 2022 The Magma Authors.
#
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Magma Check Helm Dependencies

on:
  push:
    branches:
      - master
      - 'v1.*'
  pull_request:
    branches:
      - master
      - 'v1.*'
    types:
      - opened
      - reopened
      - synchronize

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  check_helm_chart_dependencies:
    env:
      MAGMA_ROOT: "${{ github.workspace }}"
    runs-on: ubuntu-latest
    name: Check dependency of helm chart ${{ matrix.charts[0] }}
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # pin@v3.1.0
      - name: Check Orc8r
        run: |
          echo "DIGEST=$(cat $MAGMA_ROOT/orc8r/cloud/helm/orc8r/Chart.lock | grep digest | cut -d ":" -f 2-3 | xargs)" >> $GITHUB_ENV
          helm dependency update "$MAGMA_ROOT/orc8r/cloud/helm/orc8r/"
          echo "NEW_DIGEST=$(cat $MAGMA_ROOT/orc8r/cloud/helm/orc8r/Chart.lock | grep digest | cut -d ":" -f 2-3 | xargs)" >> $GITHUB_ENV
          if [ "$NEW_DIGEST" != "$NEW_DIGEST" ]; then
            exit 1
          fi
      - name: Check cwf-orc8r
        if: always()
        run: |
          echo "DIGEST=$(cat $MAGMA_ROOT/cwf/cloud/helm/cwf-orc8r//Chart.lock | grep digest | cut -d ":" -f 2-3 | xargs)" >> $GITHUB_ENV
          helm dependency update "$MAGMA_ROOT/cwf/cloud/helm/cwf-orc8r/"
          echo "NEW_DIGEST=$(cat $MAGMA_ROOT/cwf/cloud/helm/cwf-orc8r//Chart.lock | grep digest | cut -d ":" -f 2-3 | xargs)" >> $GITHUB_ENV
          if [ "$NEW_DIGEST" != "$NEW_DIGEST" ]; then
            exit 1
          fi
      - name: Check lte-orc8r
        if: always()
        run: |
          echo "DIGEST=$(cat $MAGMA_ROOT/lte/cloud/helm/lte-orc8r/Chart.lock | grep digest | cut -d ":" -f 2-3 | xargs)" >> $GITHUB_ENV
          helm dependency update "$MAGMA_ROOT/lte/cloud/helm/lte-orc8r/"
          echo "NEW_DIGEST=$(cat $MAGMA_ROOT/lte/cloud/helm/lte-orc8r/Chart.lock | grep digest | cut -d ":" -f 2-3 | xargs)" >> $GITHUB_ENV
          if [ "$NEW_DIGEST" != "$NEW_DIGEST" ]; then
            exit 1
          fi
      - name: Check feg-orc8r
        if: always()
        run: |
          echo "DIGEST=$(cat $MAGMA_ROOT/feg/cloud/helm/feg-orc8r/Chart.lock | grep digest | cut -d ":" -f 2-3 | xargs)" >> $GITHUB_ENV
          helm dependency update "$MAGMA_ROOT/feg/cloud/helm/feg-orc8r/"
          echo "NEW_DIGEST=$(cat $MAGMA_ROOT/feg/cloud/helm/feg-orc8r/Chart.lock | grep digest | cut -d ":" -f 2-3 | xargs)" >> $GITHUB_ENV
          if [ "$NEW_DIGEST" != "$NEW_DIGEST" ]; then
            exit 1
          fi
      - name: Extract commit title
        id: commit
        if: failure() && github.event_name == 'push'
        run: |
          str="$(jq '.head_commit.message' $GITHUB_EVENT_PATH)"    # get the head_commit message
          echo ::set-output name=title::${str%%\\n*} | tr -d '"'
      - name: "Set Slack channel #ci as default"
        run: echo "webhook=${{ secrets.SLACK_WEBHOOK }}" >> $GITHUB_ENV
      - name: "Set Slack channel #ci-info for failures"
        run: echo "webhook=${{ secrets.SLACK_WEBHOOK_CI }}" >> $GITHUB_ENV
        if: failure()
      - name: "Set Slack channel #ci-artifacts for successes"
        run: echo "webhook=${{ secrets.SLACK_WEBHOOK_OSS }}" >> $GITHUB_ENV
        if: success()
      - name: Notify Slack of job status
        uses: ./.github/workflows/composite/notify-slack
        with:
          webhook: ${{ env.webhook }}
          status: ${{ job.status }}
          message: ${{ github.event.head_commit.message || github.event.pull_request.title }}
