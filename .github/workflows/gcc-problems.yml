#######
# This pipeline runs various static analysis (e.g. GCC warnings) against the c / c++ pull requests.
#
# TODO: Move Docker container caching / storage to a repository
#
# TODO: Reduce workflow description duplication across jobs
#   - Option: by use of Workflow Templates per gcc-build-target (need to move docker build to another workflow and requires container repo)
#   - Option: by improving our build system and enabling faster build-all-targets
#######
name: "GCC Warnings & Errors"
on:
  push:
    branches:
      - master
      - 'v1.*'
  pull_request:
    branches:
      - master
      - 'v1.*'
    types:
      - opened
      - reopened
      - synchronize
env:
  BAZEL_BASE_IMAGE: "ghcr.io/magma/magma/bazel-base:latestv2"
  BAZEL_CACHE: bazel-cache
  BAZEL_CACHE_REPO: bazel-cache-repo
  CACHE_SUB_KEY: build-warnings

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

# See [Example Sharing Container Between Jobs](https://github.com/docker/build-push-action/issues/225)
jobs:
  path_filter:
    runs-on: ubuntu-latest
    outputs:
      should_not_skip: ${{ steps.changes.outputs.filesChanged }}
    steps:
      # Need to get git on push event
      - uses: actions/checkout@v2
        if: github.event_name == 'push'
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            filesChanged:
              - ".github/workflows/gcc-problems.yml"
              - "orc8r/gateway/c/**"
              - "lte/gateway/c/**"
              - "orc8r/protos/**"
              - "lte/protos/**"
  build_c:
    needs:
      - path_filter
    if: ${{ needs.path_filter.outputs.should_not_skip == 'true' }}
    name: Build all Bazelified C/C++ targets
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        shell: bash
        run: |
          echo "Available storage before:"
          df -h
          echo "Removing /usr/share/dotnet, /usr/local/lib/android, /opt/ghc"
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          echo "Available storage after:"
          df -h
      - name: Check Out Repo
        # This is necessary for overlays into the Docker container below.
        uses: actions/checkout@v2
      - name: Bazel Cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.${{ env.BAZEL_CACHE }}
          key: ${{ runner.os }}-${{ env.BAZEL_CACHE }}-${{ env.CACHE_SUB_KEY }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ env.BAZEL_CACHE }}-${{ env.CACHE_SUB_KEY }}-
      - name: Bazel Cache Repo
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.${{ env.BAZEL_CACHE_REPO }}
          key: ${{ runner.os }}-${{ env.BAZEL_CACHE_REPO }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ env.BAZEL_CACHE_REPO }}-
      - name: Ensure cache size (only on master)
        if: github.event_name == 'push'
        env:
          BAZEL_CACHE_DIR: .${{ env.BAZEL_CACHE }}
          BAZEL_CACHE_CUTOFF_MB: 5000
        run: |
          ./.github/workflows/check-bazel-cache-dir-size.sh "$BAZEL_CACHE_DIR" "$BAZEL_CACHE_CUTOFF_MB"
      - name: Setup Bazel Base Image
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ env.BAZEL_BASE_IMAGE }}
          options: --pull always
          # Run a simple echo command to pull down the image. This makes it a bit more clear how much time is spent on building Magma and not pulling down the image.
          run: |
            echo "Pulled the bazel base image!"
      - name: Fetch list of changed files
        # I am using mmagician fork of get-changed-files (forked from jitterbit/get-changed-files)
        #   Rationale: our workflow (merge branch into upstream master) is incompatible
        #   See long list of GH Issues on https://github.com/jitterbit/get-changed-files w.r.t. head ahead of base
        id: changed_files
        uses: mmagician/get-changed-files@v2
        with:
          format: 'csv'
      - name: Build and Apply GCC Problem Matcher
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ env.BAZEL_BASE_IMAGE }}
          # TODO: Remove work-around mount of Github workspace to /magma (https://github.com/addnab/docker-run-action/issues/11)
          options: -v ${{ github.workspace }}:/workspaces/magma
          run: |
            cd /workspaces/magma
            ./.github/workflows/generate-gcc-warnings.sh "${{ steps.changed_files.outputs.all }}"
      - name: Load problem matcher
        # If needed https://github.com/microsoft/vscode-cpptools/issues/2266 for path fixups
        #
        # Additional GH Issues regarding paths for monorepos without root build.
        # - https://github.com/actions/runner/issues/659
        # - https://github.com/actions/runner/issues/765
        #
        # Paths emitted on warnings must be relative to the repository (e.g. lte/gateway/...),
        # Therefore below I use `xo` to fixup our path emissions on gcc warnings.
        uses: electronjoe/gcc-problem-matcher@v1
      - name: Cat compilation log (filtered by file names)
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ env.BAZEL_BASE_IMAGE }}
          # TODO: Remove work-around mount of Github workspace to /magma (https://github.com/addnab/docker-run-action/issues/11)
          options: -v ${{ github.workspace }}:/workspaces/magma
          run: cat /workspaces/magma/filtered-compile.log
      - name: Store build_logs_c_full_log Artifact
        uses: actions/upload-artifact@v2
        with:
          name: build_logs_c_full_log
          path: ${{ github.workspace }}/compile.log
      - name: Store build_logs_c_filtered_log Artifact
        uses: actions/upload-artifact@v2
        with:
          name: build_logs_c_filtered_log
          path: ${{ github.workspace }}/filtered-compile.log
      - name: Build space left after run
        shell: bash
        run: |
          echo "Available storage:"
          df -h
