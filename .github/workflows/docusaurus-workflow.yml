# Copyright 2022 The Magma Authors.
#
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Docs Build & Deploy

on:
  push:
    branches:
      - master
jobs:
  docusaurus-build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # pin@v3.1.0
      - name: Export vars
        run: |
          echo "DOCUSAURUS_URL=https://magma.github.io" >> $GITHUB_ENV
          echo "DOCUSAURUS_BASE_URL=/magma/" >> $GITHUB_ENV
      - name: Setup docusaurus expected directory structure
        run: |
          mv docs/docusaurus website/
          mv docs/readmes readmes/
          rm -rf docs/
          mv readmes/ docs/
      - name: Deploying to GitHub Pages
        # yamllint disable rule:line-length
        run: |
          git config --global user.email "magma-docusaurus-bot@users.noreply.github.com"
          git config --global user.name "magma-docusaurus-bot"
          echo "machine github.com login magma-docusaurus-bot password ${{ secrets.DOCUSAURUS_GITHUB_TOKEN }}" > ~/.netrc
          cd website && yarn install
          CUSTOM_COMMIT_MESSAGE="[skip ci] Deploy website" GIT_USER=magma-docusaurus-bot yarn run publish-gh-pages
          # yamllint enable
      - name: Extract commit title
        id: commit
        if: failure() && github.ref == 'refs/heads/master'
        run: |
          str="$(jq '.head_commit.message' $GITHUB_EVENT_PATH)"    # get the head_commit message
          echo ::set-output name=title::${str%%\\n*} | tr -d '"'
      - name: "Set Slack channel #ci as default"
        run: echo "webhook=${{ secrets.SLACK_WEBHOOK }}" >> $GITHUB_ENV
      - name: "Set Slack channel #ci-info for failures"
        run: echo "webhook=${{ secrets.SLACK_WEBHOOK_CI }}" >> $GITHUB_ENV
        if: failure()
      - name: "Set Slack channel #ci-artifacts for successes"
        run: echo "webhook=${{ secrets.SLACK_WEBHOOK_OSS }}" >> $GITHUB_ENV
        if: success()
      - name: Notify Slack of job status
        uses: ./.github/workflows/composite/notify-slack
        with:
          webhook: ${{ env.webhook }}
          status: ${{ job.status }}
          message: ${{ github.event.head_commit.message || github.event.pull_request.title }}
