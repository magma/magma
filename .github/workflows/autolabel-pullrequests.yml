---
name: AutoLabel PR
on:  # yamllint disable-line rule:truthy
  # Use pull_request_target to gain write permissions.
  # Ref: https://github.blog/2020-08-03-github-actions-improvements-for-fork-and-pull-request-workflows/
  pull_request_target:
    types: [opened, reopened, synchronize]
    paths:
      - 'ci-scripts/**'
      - '.circleci/**'
      - 'circleci/**'
      - '.github/**'
      - 'cn/**'
      - 'cwf/**'
      - 'docs/**'
      - 'example/**'
      - 'experimental/**'
      - 'fbinternal/**'
      - 'feg/**'
      - 'lte/**'
      - 'nms/**'
      - 'openwrt/**'
      - 'orc8r/**'
      - 'protos/**'
      - 'scripts/**'
      - 'secrets/**'
      - 'show-tech/**'
      - 'third_party/**'
      - 'wifi/**'
      - 'xwf/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  AutoLabelPR:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/github-script@v3
        with:
          script: |
            let fs = require('fs');
            let codeownersBuf = fs.readFileSync('./CODEOWNERS', {encoding: 'utf8'});
            let path = "";
            let comp = "";
            let codeownersDict = {};
            const records = codeownersBuf.split(/[\r\n]+/);
            for( const rec of records )
            {
              if (! rec.startsWith("/")) { continue; }
              const tokens = rec.split(" ");
              for( const token of tokens )
              {
                if(token.startsWith("/")) {
                  path = token.substring(1);
                }
                if(token.startsWith("@magma/approvers-"))  {
                  comp = token.split('-')[1];
                }
                // console.log("PathX=" + path + " CompX=" + comp);
                if( path && comp ) {
                  codeownersDict[path] = comp;
                }
              } // End of for loop on tokens on each record of CODEOWNERS file
            } // End of for loop on record of CODEOWNERS file

            let newCompLbls = new Set(); // Set of new label strings

            // Fetch files modified in the PR
            const pulledFiles = await github.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            // Identify new component labels based on the files modified in the PR
            for (const f of pulledFiles['data']) {
              var fullPath = f.filename;
              for(var k in codeownersDict) {
                if( fullPath.startsWith(k) )  {
                  console.log("File=" + fullPath + " startsWith=" + k + " component=" + codeownersDict[k]);
                  newCompLbls.add("component: " + codeownersDict[k]);
                }
              } //end of for loop on codeowners dictionary object
            } // end of for loop on PR files

            const curLblObjs = await github.issues.listLabelsOnIssue({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            // Delete current component labels from PR that are no more valid
            for (const l of curLblObjs['data']) {
              //console.log("Current LabelName: " + l['name'] + " LabelDescription: " + l['description']);
              if(l['name'].startsWith("component: "))  {
                if(newCompLbls.has(l['name']))  {
                  newCompLbls.delete(l['name']);
                }
                else  {
                  github.issues.removeLabel({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    name: l['name'],
                  });
                }
              } // end of if block
            } // end of for loop

            if( newCompLbls.size == 0 )  {
              console.log("No new component files changed in this PR: " + context.issue.number);
            }
            else  {
              let uniqLbls = Array.from(newCompLbls);
              github.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: uniqLbls,
              });
            } // end of else block
