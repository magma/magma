# Copyright 2022 The Magma Authors.
#
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: LTE integ test bazel

on:
  workflow_dispatch: null
  workflow_run:
    workflows:
      - build-all
    branches:
      - master
    types:
      - completed

env:
  CACHE_KEY: magma-dev-vm
  REMOTE_DOWNLOAD_OPTIMIZATION: false

jobs:
  lte-integ-test-bazel:
    if: github.repository_owner == 'magma' || github.event_name == 'workflow_dispatch'
    runs-on: macos-12
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # pin@v3
      - name: Cache magma-dev-box
        uses: actions/cache@0865c47f36e68161719c5b124609996bb5c40129 # pin@v3
        with:
          path: ~/.vagrant.d/boxes/magmacore-VAGRANTSLASH-magma_dev
          key: vagrant-box-magma-dev-v1.2.20220801
      - name: Cache magma-test-box
        uses: actions/cache@0865c47f36e68161719c5b124609996bb5c40129 # pin@v3
        with:
          path: ~/.vagrant.d/boxes/magmacore-VAGRANTSLASH-magma_test
          key: vagrant-box-magma-test
      - name: Cache magma-trfserver-box
        uses: actions/cache@0865c47f36e68161719c5b124609996bb5c40129 # pin@v3
        with:
          path: ~/.vagrant.d/boxes/magmacore-VAGRANTSLASH-magma_trfserver
          key: vagrant-box-magma-trfserver-v20220722
      - name: Log in to vagrant cloud
        run: |
          if [[ -n "${{ secrets.VAGRANT_TOKEN }}" ]]
          then
            echo "Logging in to vagrant cloud to mitigate rate limiting."
            vagrant cloud auth login --token "${{ secrets.VAGRANT_TOKEN }}"
          else
            echo "Vagrant cloud token is not configured. Skipping login."
          fi
      - uses: actions/setup-python@7f80679172b057fc5e90d70d197929d454754a5a # pin@v2
        with:
          python-version: '3.8.10'
      - name: Install pre requisites
        run: |
          pip3 install --upgrade pip
          pip3 install ansible fabric3 jsonpickle requests PyYAML firebase_admin
          vagrant plugin install vagrant-vbguest vagrant-disksize vagrant-reload
      - name: Open up network interfaces for VM
        run: |
          sudo mkdir -p /etc/vbox/
          echo '* 192.168.0.0/16' | sudo tee /etc/vbox/networks.conf
          echo '* 3001::/64' | sudo tee -a /etc/vbox/networks.conf
      - name: Provision the magma-dev VM
        run: |
          cd lte/gateway
          export MAGMA_DEV_CPUS=3
          export MAGMA_DEV_MEMORY_MB=9216
          fab provision_magma_dev_vm
      - name: Build all services and scripts with bazel
        run: |
          cd lte/gateway
          vagrant ssh -c 'cd ~/magma; bazel/scripts/remote_cache_bazelrc_setup.sh "${{ env.CACHE_KEY }}" "${{ env.REMOTE_DOWNLOAD_OPTIMIZATION }}" "${{ secrets.BAZEL_REMOTE_PASSWORD }}";' magma
          vagrant ssh -c 'sudo sed -i "s@#precedence ::ffff:0:0/96  100@precedence ::ffff:0:0/96  100@" /etc/gai.conf;' magma
          vagrant ssh -c 'cd ~/magma; bazel build --profile=bazel_profile_lte_integ_tests `bazel query "kind(.*_binary, //orc8r/... union //lte/... union //feg/...)"`;' magma
          vagrant ssh -c 'sudo sed -i "s@precedence ::ffff:0:0/96  100@#precedence ::ffff:0:0/96  100@" /etc/gai.conf;' magma
      - name: Linking bazel-built script executables to '/usr/local/bin/'
        run: |
          cd lte/gateway
          vagrant ssh -c 'cd ~/magma; bazel/scripts/link_scripts_for_bazel_integ_tests.sh;' magma
      - name: Run the integ test
        run: |
          cd lte/gateway
          export MAGMA_DEV_CPUS=3
          export MAGMA_DEV_MEMORY_MB=9216
          fab bazel_integ_test_post_build
      - name: Get test logs
        if: always()
        run: |
          cd lte/gateway
          fab get_test_logs:dst_path=./logs.tar.gz
      - name: Upload test logs
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # pin@v3
        if: always()
        with:
          name: test-logs
          path: lte/gateway/logs.tar.gz
      - name: Publish bazel profile
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # pin@v3
        if: always()
        with:
          name: Bazel profile lte integ tests
          path: bazel_profile_lte_integ_tests
      - name: Notify failure to slack
        if: failure() && github.repository_owner == 'magma'
        uses: Ilshidur/action-slack@689ad44a9c9092315abd286d0e3a9a74d31ab78a # pin@2.1.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_BAZEL_CI }}
          SLACK_USERNAME: "LTE integ tests bazel"
          SLACK_AVATAR: ":boom:"
        with:
          args: "Bazel LTE integration test failed in run: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"
