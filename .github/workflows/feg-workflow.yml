---
name: feg-workflow

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - master
    paths:
      - 'orc8r/**'
      - 'lte/**'
      - 'feg/**'
  pull_request:
    branches:
      - master
    paths:
      - 'orc8r/**'
      - 'lte/**'
      - 'feg/**'
jobs:
  feg-lint:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on  # yamllint disable-line rule:truthy
      MAGMA_ROOT: "${{ github.workspace }}"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.15.7'
      - run: go version
      - name: Run golang_before_install.sh script
        run: |
              ./circleci/golang_before_install.sh
      - name: Run go mod download with retry
        uses: nick-invision/retry@v2
        with:
          command: cd ${MAGMA_ROOT}/cwf/gateway && go mod download
          timeout_minutes: 10
      - name: Go lint code
        run: |
              cd ${MAGMA_ROOT}/feg/gateway
              make -C ${MAGMA_ROOT}/feg/gateway lint
      - name: Generate test coverage
        run: |
              cd ${MAGMA_ROOT}/feg/gateway
              make -C ${MAGMA_ROOT}/feg/gateway cover
      - uses: codecov/codecov-action@v1
        with:
          files: '${{ env.MAGMA_ROOT}}/feg/gateway/coverage/feg.gocov'
          flags: feg-lint
      # Notify ci channel when failing
      # Plugin info: https://github.com/marketplace/actions/slack-notify
      - name: Notify failure to slack
        if: failure() && github.ref == 'refs/heads/master'
        uses: rtCamp/action-slack-notify@v2.0.2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_CI }}
          SLACK_TITLE: "Github action feg-lint update failed"
          SLACK_USERNAME: "Feg workflow"
          SLACK_ICON_EMOJI: ":boom:"
          SLACK_COLOR: "#FF0000"
  feg-precommit:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on  # yamllint disable-line rule:truthy
      MAGMA_ROOT: "${{ github.workspace }}"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.15.7'
      - run: go version
      - name: Run golang_before_install.sh script
        run: ./circleci/golang_before_install.sh
      - name: Run go mod download with retry
        uses: nick-invision/retry@v2
        with:
          command: cd ${MAGMA_ROOT}/cwf/gateway && go mod download
          timeout_minutes: 10
      - name: make feg precommit
        run: |
            go get gotest.tools/gotestsum
            cd ${MAGMA_ROOT}/feg/gateway
            make -C ${MAGMA_ROOT}/feg/gateway precommit
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results
          path: "/tmp/test-results"
      # Notify ci channel when failing
      # Plugin info: https://github.com/marketplace/actions/slack-notify
      - name: Notify failure to slack
        if: failure() && github.ref == 'refs/heads/master'
        uses: rtCamp/action-slack-notify@v2.0.2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_CI }}
          SLACK_TITLE: "Github action feg-precommit update failed"
          SLACK_USERNAME: "Feg workflow"
          SLACK_ICON_EMOJI: ":boom:"
          SLACK_COLOR: "#FF0000"
  feg-build:
    needs: feg-precommit
    runs-on: ubuntu-latest
    env:
      MAGMA_ROOT: "${{ github.workspace }}"
      DOCKER_REGISTRY: "${{ secrets.DOCKER_REGISTRY }}"
      DOCKER_USERNAME: "${{ secrets.DOCKER_USERNAME }}"
      DOCKER_PASSWORD: "${{ secrets.DOCKER_PASSWORD }}"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: generate test certs and snowflake
        run: |
            # TODO add rootCA.pem and snowflake files in the ubuntu-1604:201903-01 image
            # create directories
            cd ${MAGMA_ROOT} && mkdir -p .cache/test_certs/ && mkdir -p .cache/feg/
            # create test certs
            cd ${MAGMA_ROOT}/.cache/test_certs/
            openssl genrsa -out rootCA.key 2048
            openssl req -x509 -new -nodes -key rootCA.key -sha256 -days 365000 -out rootCA.pem -subj "/C=US/CN=rootca.magma.test"
            # create snowflake
            cd ${MAGMA_ROOT}/.cache/feg/ && touch snowflake
      - name: Build docker images
        env:
          DOCKER_REGISTRY: feg_
        run: |
            cd ${MAGMA_ROOT}/feg/gateway/docker
            python3 build.py
      - name: run docker containers and check health
        env:
          DOCKER_REGISTRY: feg_
        run: |
            cd ${MAGMA_ROOT}/feg/gateway/docker
            python3 build.py -e
      - name: Tag and push to Docker Registry
        if: github.ref == 'refs/heads/master'
        # yamllint disable rule:line-length
        run: |
            ./ci-scripts/tag-push-docker.sh --images 'gateway_go|gateway_python' --tag "${GITHUB_SHA:0:8}" --tag-latest true --project feg
      - name: Tag and push to Jfrog Registry
        if: github.ref == 'refs/heads/master'
        env:
          DOCKER_REGISTRY: "${{ secrets.JFROG_DOCKER_ORC8R_REGISTRY }}"
          DOCKER_USERNAME: "${{ secrets.JFROG_USERNAME }}"
          DOCKER_PASSWORD: "${{ secrets.JFROG_PASSWORD }}"
        run: |
            ./ci-scripts/tag-push-docker.sh --images 'gateway_go|gateway_python' --tag "${GITHUB_SHA:0:8}" --tag-latest true --project feg
      # Notify ci channel when failing
      # Plugin info: https://github.com/marketplace/actions/slack-notify
      # yamllint enable
      - name: Notify failure to slack
        if: failure() && github.ref == 'refs/heads/master'
        uses: rtCamp/action-slack-notify@v2.0.2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_CI }}
          SLACK_TITLE: "Github action feg-precommit update failed"
          SLACK_USERNAME: "Feg workflow"
          SLACK_ICON_EMOJI: ":boom:"
          SLACK_COLOR: "#FF0000"
      # Notify ci channel when push succeeds
      - name: Notify success to slack
        if: success() && github.ref == 'refs/heads/master'
        uses: rtCamp/action-slack-notify@v2.0.2
        env:
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL_ARTIFACTS }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_OSS }}
          SLACK_TITLE: "*FeG Artifact Has Been Published*"
          SLACK_USERNAME: "Feg workflow"
          SLACK_ICON_EMOJI: ":heavy_check_mark:"
          SLACK_COLOR: "#00FF00"
