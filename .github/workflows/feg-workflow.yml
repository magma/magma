---
name: feg-workflow

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - master
      - v1.*
  pull_request:
    branches:
      - master
      - v1.*
    types: [opened, reopened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  path_filter:
    runs-on: ubuntu-latest
    outputs:
      should_not_skip: ${{ steps.changes.outputs.filesChanged }}
    steps:
      # Need to get git on push event
      - uses: actions/checkout@629c2de402a417ea7690ca6ce3f33229e27606a5 # v2
        if: github.event_name == 'push'
      - uses: dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721 # v2
        id: changes
        with:
          filters: |
            filesChanged:
              - [".github/workflows/feg-workflow.yml", "orc8r/**", "lte/**", "feg/**"]
      - name: Save should_not_skip output
        if: always()
        run: |
          mkdir -p ./pr
          echo -n ${{ steps.changes.outputs.filesChanged == 'false' }} > ./pr/skipped
      - uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        if: always()
        with:
          name: pr
          path: pr/

  feg-lint-precommit:
    needs: path_filter
    if: ${{ needs.path_filter.outputs.should_not_skip == 'true' }}
    name: feg lint and precommit
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on  # yamllint disable-line rule:truthy
      MAGMA_ROOT: "${{ github.workspace }}"
    steps:
      - uses: actions/checkout@629c2de402a417ea7690ca6ce3f33229e27606a5 # v2
      - uses: actions/setup-go@bfdd3570ce990073878bf10f6b2d79082de49492 # v2
        with:
          go-version: '1.15.7'
      - run: go version
      - name: Run golang_before_install.sh script
        run: |
              ./circleci/golang_before_install.sh
      - name: Run go mod download with retry
        uses: nick-invision/retry@7f8f3d9f0f62fe5925341be21c2e8314fd4f7c7c # v2
        if: always()
        id: feg-lint-init
        with:
          command: cd ${MAGMA_ROOT}/cwf/gateway && go mod download
          timeout_minutes: 10
      - name: Go lint code
        if: always() && steps.feg-lint-init.outcome=='success'
        id: feg-lint
        run: |
              cd ${MAGMA_ROOT}/feg/gateway
              make -C ${MAGMA_ROOT}/feg/gateway lint
      - name: Generate test coverage
        if: always() && steps.feg-lint.outcome=='success'
        id: feg-lint-cov
        run: |
              cd ${MAGMA_ROOT}/feg/gateway
              make -C ${MAGMA_ROOT}/feg/gateway cover
      - uses: codecov/codecov-action@29386c70ef20e286228c72b668a06fd0e8399192 # v1
        if: always()
        id: feg-lint-codecov
        with:
          files: '${{ env.MAGMA_ROOT}}/feg/gateway/coverage/feg.gocov'
          flags: feg-lint
      - name: make feg precommit
        if: always()
        id: feg-precommit
        run: |
          go get gotest.tools/gotestsum
          cd ${MAGMA_ROOT}/feg/gateway
          make -C ${MAGMA_ROOT}/feg/gateway precommit
      - name: Upload Test Results
        id: feg-precommit-upload
        if: always()
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        with:
          name: Unit Test Results
          path: "/tmp/test-results"
      - name: Extract commit title
        if: failure() && github.event_name == 'push'
        id: commit
        run: |
          str="$(jq '.head_commit.message' $GITHUB_EVENT_PATH)"    # get the head_commit message
          echo ::set-output name=title::${str%%\\n*} | tr -d '"'
      # Notify ci channel when failing
      # Plugin info: https://github.com/marketplace/actions/slack-notify
      - name: Notify failure to slack
        if: ( steps.feg-lint-init.outcome=='failure' || steps.feg-lint.outcome=='failure' || steps.feg-lint-cov.outcome=='failure' || steps.feg-lint-codecov.outcome=='failure'  ) && github.event_name == 'push'
        uses: rtCamp/action-slack-notify@823e115f29172bd8a8bde6e4f7f9e49519504ff3 # v2.2.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_CI }}
          SLACK_MESSAGE: "${{ steps.commit.outputs.title}}"
          SLACK_TITLE: "FeG-lint tests failed"
          SLACK_USERNAME: "FeG workflow"
          SLACK_ICON_EMOJI: ":boom:"
          SLACK_COLOR: "#FF0000"
          SLACK_FOOTER: ' '
      # Notify ci channel when failing
      # Plugin info: https://github.com/marketplace/actions/slack-notify
      - name: Notify failure to slack
        if: ( steps.feg-precommit.outcome=='failure' || steps.feg-precommit-upload.outcome=='failure' ) && github.event_name == 'push'
        uses: rtCamp/action-slack-notify@823e115f29172bd8a8bde6e4f7f9e49519504ff3 # v2.2.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_CI }}
          SLACK_TITLE: "FeG-precommit tests failed"
          SLACK_MESSAGE: "${{ steps.commit.outputs.title}}"
          SLACK_USERNAME: "FeG workflow"
          SLACK_ICON_EMOJI: ":boom:"
          SLACK_COLOR: "#FF0000"
          SLACK_FOOTER: ' '
