---
name: "Bazel Build & Test"
on:
  # yamllint disable-line rule:truthy
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - master
    paths:
      - .github/workflows/bazel.yml
  schedule:
    # Run four times a day to build bazel cache
    - cron: '0 0,6,12,18 * * *'
env:
  BAZEL_BASE_IMAGE: "ghcr.io/magma/magma/bazel-base:latest"
  CACHE_KEY: bazel-base-image

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  path_filter:
    runs-on: ubuntu-latest
    outputs:
      files_changed: ${{ steps.changes.outputs.files_changed }}
    if: github.repository_owner == 'magma' || github.event_name == 'workflow_dispatch'
    steps:
      # Need to get git on push event
      - uses: dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721 # pin@v2
        if: github.event_name == 'pull_request'
        id: changes
        with:
          filters: |
            files_changed:
              - '.github/workflows/bazel.yml'
              - 'orc8r/gateway/**'
              - 'orc8r/protos/**'
              - 'lte/gateway/**'
              - 'lte/protos/**'
              - 'src/go/**'
              - '**/BUILD'
              - '**/*.BUILD'
              - '**/*.bazel'
              - '**/*.bzl'

  bazel_build_and_test:
    needs: path_filter
    # Only run workflow if this is a scheduled run on master branch,
    # or a pull_request that skip-duplicate-action wants to run again.
    if: |
      (github.event_name == `schedule` && github.ref == 'refs/heads/master')
        || ${{ needs.path_filter.outputs.files_changed == 'true' }}
    name: Bazel Build & Test Job
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        shell: bash
        run: |
          echo "Available storage before:"
          df -h
          echo "Removing /usr/share/dotnet, /usr/local/lib/android, /opt/ghc"
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          echo "Available storage after:"
          df -h
      - name: Check Out Repo
        # This is necessary for overlays into the Docker container below.
        uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e # pin@v2
      - name: Setup Bazel Base Image
        uses: addnab/docker-run-action@4f65fabd2431ebc8d299f8e5a018d79a769ae185 # pin@v3
        with:
          image: ${{ env.BAZEL_BASE_IMAGE }}
          options: --pull always
          # Run a simple echo command to pull down the image. This makes it a bit more clear how much time is spent on building Magma and not pulling down the image.
          run: |
            echo "Pulled the bazel base image!"
      - name: Run bazel build, test, starlark format check & python import check
        uses: addnab/docker-run-action@4f65fabd2431ebc8d299f8e5a018d79a769ae185 # pin@v3
        with:
          image: ${{ env.BAZEL_BASE_IMAGE }}
          # TODO: Remove work-around mount of Github workspace to /magma (https://github.com/addnab/docker-run-action/issues/11)
          options: -v ${{ github.workspace }}:/workspaces/magma/ -v ${{ github.workspace }}/lte/gateway/configs:/etc/magma
          run: |
            cd /workspaces/magma

            printf '\r%s\r' '###############################' 1>&2
            printf '\r%s\r' 'Configuring bazel remote cache.' 1>&2
            printf '\r%s\r\r' '###############################' 1>&2
            bazel/scripts/remote_cache_bazelrc_setup.sh "${{ env.CACHE_KEY }}" "${{ secrets.BAZEL_REMOTE_PASSWORD }}"

            printf '\r%s\r' '###############################' 1>&2
            printf '\r%s\r' 'Executing bazel build //...' 1>&2
            printf '\r%s\r' '###############################' 1>&2
            bazel build //... \
              --config=mme_unit_test \
              --profile=Bazel_build_all_profile &&

            printf '\r%s\r' '###############################' 1>&2 &&
            printf '\r%s\r' 'Executing bazel test //...' 1>&2 &&
            printf '\r%s\r' '###############################' 1>&2 &&
            bazel test //... \
              --test_output=errors \
              --profile=Bazel_test_all_profile &&

            printf '\r%s\r' '###############################' 1>&2 &&
            printf '\r%s\r' 'Executing starlark format check.' 1>&2 &&
            printf '\r%s\r' '###############################' 1>&2 &&
            bazel run //:check_starlark_format &&

            printf '\r%s\r' '###############################' 1>&2 &&
            printf '\r%s\r' 'Executing python import bazelification check.' 1>&2 &&
            printf '\r%s\r' '###############################' 1>&2 &&
            bazel/scripts/test_python_service_imports.sh
      - name: Publish bazel build profile
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # pin@v3
        if: always()
        with:
          name: Bazel build all profile
          path: Bazel_build_all_profile
      - name: Publish bazel test profile
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # pin@v3
        if: always()
        with:
          name: Bazel test all profile
          path: Bazel_test_all_profile
      - name: Build space left after run
        shell: bash
        run: |
          echo "Available storage:"
          df -h
      - name: Notify failure to slack
        if: failure() && github.event_name == 'push'
        uses: rtCamp/action-slack-notify@12e36fc18b0689399306c2e0b3e0f2978b7f1ee7 # pin@v2.2.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_BAZEL_CI }}
          SLACK_TITLE: "Bazel Build & Test Job `bazel build //...; bazel test //...`"
          SLACK_USERNAME: "Bazel Build & Test"
          SLACK_ICON_EMOJI: ":boom:"
          SLACK_COLOR: "#FF0000"
          SLACK_FOOTER: ' '
          MSG_MINIMAL: actions url,commit

  bazel_package:
    needs: path_filter
    # Only run workflow if this is a scheduled run on master branch,
    # or a pull_request that skip-duplicate-action wants to run again.
    if: |
      (github.event_name == `schedule` && github.ref == 'refs/heads/master')
        || ${{ needs.path_filter.outputs.files_changed == 'true' }}
    name: Bazel Package Job
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        shell: bash
        run: |
          echo "Available storage before:"
          df -h
          echo "Removing /usr/share/dotnet, /usr/local/lib/android, /opt/ghc"
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          echo "Available storage after:"
          df -h
      - name: Check Out Repo
        # This is necessary for overlays into the Docker container below.
        uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e # pin@v2
      - name: Setup Bazel Base Image
        uses: addnab/docker-run-action@4f65fabd2431ebc8d299f8e5a018d79a769ae185 # pin@v3
        with:
          image: ${{ env.BAZEL_BASE_IMAGE }}
          options: --pull always
          # Run a simple echo command to pull down the image. This makes it a bit more clear how much time is spent on building Magma and not pulling down the image.
          run: |
            echo "Pulled the bazel base image!"
      - name: Build .deb Packages
        uses: addnab/docker-run-action@4f65fabd2431ebc8d299f8e5a018d79a769ae185 # pin@v3
        with:
          image: ${{ env.BAZEL_BASE_IMAGE }}
          # TODO: Remove work-around mount of Github workspace to /magma (https://github.com/addnab/docker-run-action/issues/11)
          options: -v ${{ github.workspace }}:/workspaces/magma/ -v ${{ github.workspace }}/lte/gateway/configs:/etc/magma
          run: |
            cd /workspaces/magma
            bazel/scripts/remote_cache_bazelrc_setup.sh "${{ env.CACHE_KEY }}" "${{ secrets.BAZEL_REMOTE_PASSWORD }}"
            bazel build lte/gateway/release:sctpd_deb_pkg \
              --config=production \
              --profile=Bazel_build_package_profile
      - name: Publish bazel profile
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # pin@v3
        if: always()
        with:
          name: Bazel build package profile
          path: Bazel_build_package_profile
      - name: Build space left after run
        shell: bash
        run: |
          echo "Available storage:"
          df -h
      - name: Notify failure to slack
        if: failure() && github.event_name == 'push'
        uses: rtCamp/action-slack-notify@12e36fc18b0689399306c2e0b3e0f2978b7f1ee7 # pin@v2.2.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_BAZEL_CI }}
          SLACK_TITLE: "Bazel Package Job"
          SLACK_USERNAME: "Bazel Build & Test"
          SLACK_ICON_EMOJI: ":boom:"
          SLACK_COLOR: "#FF0000"
          SLACK_FOOTER: ' '
          MSG_MINIMAL: actions url,commit

  python_file_check:
    name: Check if there are not bazelified python files
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e # pin@v2
      - name: Execute check
        shell: bash
        run: |
          ./bazel/scripts/check_py_bazel.sh
      - name: Notify failure to slack
        if: failure() && github.event_name == 'push'
        uses: rtCamp/action-slack-notify@12e36fc18b0689399306c2e0b3e0f2978b7f1ee7 # pin@v2.2.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_BAZEL_CI }}
          SLACK_TITLE: "Bazel Python Check Job `./bazel/scripts/check_py_bazel.sh`"
          SLACK_USERNAME: "Bazel Build & Test"
          SLACK_ICON_EMOJI: ":boom:"
          SLACK_COLOR: "#FF0000"
          SLACK_FOOTER: ' '
          MSG_MINIMAL: actions url,commit

  c_cpp_file_check:
    name: Check if there are non-bazelified c or c++ files
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e # pin@v2
      - name: Execute check
        shell: bash
        run: |
          ./bazel/scripts/check_c_cpp_bazel.sh
      - name: Notify failure to slack
        if: failure() && github.event_name == 'push'
        uses: rtCamp/action-slack-notify@12e36fc18b0689399306c2e0b3e0f2978b7f1ee7 # pin@v2.2.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_BAZEL_CI }}
          SLACK_TITLE: "Bazel C/C++ Check Job `./bazel/scripts/check_c_cpp_bazel.sh`"
          SLACK_USERNAME: "Bazel Build & Test"
          SLACK_ICON_EMOJI: ":boom:"
          SLACK_COLOR: "#FF0000"
          SLACK_FOOTER: ' '
          MSG_MINIMAL: actions url,commit
