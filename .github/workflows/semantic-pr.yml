---
name: "Semantic PR"

on:
  # Semantic PR module only works with pull_request_target
  pull_request_target:
    types:
      - opened
      - edited
      - synchronize

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  reverted-pr-check:
    name: Reverted PR Check Job
    runs-on: ubuntu-latest
    env:
      PR_TITLE: "${{ github.event.pull_request.title }}"
    # Map a step output to a job output
    outputs:
      is_reverted_pr: ${{ steps.reverted_pr_check.outputs.is_reverted_pr }}
    steps:
      - name: Check if PR is a Reverted PR
        id: reverted_pr_check
        uses: actions/github-script@47f7cf65b5ced0830a325f705cad64f2f58dddf7 # pin@v3.1.0
        with:
          script: |
            if( process.env.PR_TITLE.startsWith('Revert') ) {
              core.setOutput('is_reverted_pr', 'true');
            }
            else  {
              core.setOutput('is_reverted_pr', 'false');
            }
      - name: Save Reverted PR output
        if: always()
        run: |
          mkdir -p ./pr
          echo -n ${{ steps.reverted_pr_check.outputs.is_reverted_pr }} > ./pr/is_reverted_pr
          echo -n "false" > ./pr/skipped
      - uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # pin@v3
        if: always()
        with:
          name: pr
          path: pr/

  semantic-pr:
    needs: reverted-pr-check
    if: ${{ needs.reverted-pr-check.outputs.is_reverted_pr == 'false' }}
    runs-on: ubuntu-latest
    steps:
      # Please look up the latest version from
      # https://github.com/amannn/action-semantic-pull-request/releases
      - uses: amannn/action-semantic-pull-request@db6e259b93f286e3416eef27aaae88935d16cf2e # pin@v3.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Configure which types are allowed.
          # Default: https://github.com/commitizen/conventional-commit-types
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          # Configure which scopes are allowed.
          scopes: |
            aaa_server
            agw
            amf
            ci
            cloud
            connectiond
            control_proxy
            csfb
            ctraced
            cwg
            deps
            deps-dev
            directoryd
            dp
            eap
            eap_aka
            eap_sim
            enodebd
            envoy_controller
            eventd
            feg
            feg_hello
            feg_relay
            health
            lte
            magmad
            mme
            mobilityd
            monitord
            nms
            orc8r
            pipelined
            policydb
            radiusd
            redirectd
            redis
            s6a_proxy
            s8_proxy
            sctpd
            session_proxy
            sessiond
            smf
            smsd
            state
            subscriberdb
            swx_proxy
            td-agent-bit
            upf
            xwf
          # Configure that a scope must always be provided.
          requireScope: false
          # For work-in-progress PRs you can typically use draft pull requests
          # from Github. However, private repositories on the free plan don't have
          # this option and therefore this action allows you to opt-in to using the
          # special "[WIP]" prefix to indicate this state. This will avoid the
          # validation of the PR title and the pull request checks remain pending.
          # Note that a second check will be reported if this is enabled.
          wip: true
          # When using "Squash and merge" on a PR with only one commit, GitHub
          # will suggest using that commit message instead of the PR title for the
          # merge commit, and it's easy to commit this by mistake. Enable this option
          # to also validate the commit message for one commit PRs.
          validateSingleCommit: true
      # Need to save PR number as Github action does not propagate it with workflow_run event
      - name: Save PR number
        if: always()
        run: |
          mkdir -p ./pr
          echo -n ${{ github.event.number }} > ./pr/pr_number
      - uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # pin@v3
        if: always()
        with:
          name: pr
          path: pr/
