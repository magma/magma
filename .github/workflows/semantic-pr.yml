# Copyright 2022 The Magma Authors.
#
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: PR Check Title Or Commit Message

on:
  # Semantic PR module only works with pull_request_target
  pull_request_target:
    types:
      - opened
      - reopened
      - edited
      - synchronize
      - ready_for_review

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  check-reverted-pr:
    runs-on: ubuntu-latest
    env:
      PR_TITLE: "${{ github.event.pull_request.title }}"
    outputs:
      is_reverted_pr: ${{ steps.reverted_pr_check.outputs.is_reverted_pr }}
    steps:
      - name: Check if PR is a Reverted PR
        id: reverted_pr_check
        uses: actions/github-script@d556feaca394842dc55e4734bf3bb9f685482fa0 # pin@v6.3.3
        with:
          script: |
            if( process.env.PR_TITLE.startsWith('Revert') ) {
              core.setOutput('is_reverted_pr', 'true');
            }
            else  {
              core.setOutput('is_reverted_pr', 'false');
            }

  check-semantic-pr:
    runs-on: ubuntu-latest
    needs: check-reverted-pr
    if: ${{ needs.check-reverted-pr.outputs.is_reverted_pr == 'false' }}
    steps:
      - uses: amannn/action-semantic-pull-request@01d5fd8a8ebb9aafe902c40c53f0f4744f7381eb # pin@v5.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Configure which types are allowed.
          # Default: https://github.com/commitizen/conventional-commit-types
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          # Configure which scopes are allowed.
          scopes: |
            aaa_server
            agw
            amf
            ci
            cloud
            connectiond
            control_proxy
            csfb
            ctraced
            cwg
            deps
            deps-dev
            directoryd
            dp
            eap
            eap_aka
            eap_sim
            enodebd
            envoy_controller
            eventd
            feg
            feg_hello
            feg_relay
            health
            lte
            magmad
            mme
            mobilityd
            monitord
            nms
            orc8r
            pipelined
            policydb
            radiusd
            redirectd
            redis
            s6a_proxy
            s8_proxy
            sctpd
            session_proxy
            sessiond
            smf
            smsd
            state
            subscriberdb
            swx_proxy
            td-agent-bit
            upf
          # Configure that a scope must always be provided.
          requireScope: false
          # For work-in-progress PRs you can typically use draft pull requests
          # from GitHub. However, private repositories on the free plan don't have
          # this option and therefore this action allows you to opt in to using the
          # special "[WIP]" prefix to indicate this state. This will avoid the
          # validation of the PR title and the pull request checks remain pending.
          # Note that a second check will be reported if this is enabled.
          wip: true
          # When using "Squash and merge" on a PR with only one commit, GitHub
          # will suggest using that commit message instead of the PR title for the
          # merge commit, and it's easy to commit this by mistake. Enable this option
          # to also validate the commit message for one commit PRs.
          validateSingleCommit: true

  comment-on-pr:
    runs-on: ubuntu-latest
    needs: check-semantic-pr
    if: always()
    env:
      STATUS: ':heavy_check_mark:'
      check-type: Semantic PR check
      check-documentation: See [instructions on formatting your commit and pull request titles](https://github.com/magma/magma/wiki/Contributing-Code#pull-request-and-commit-message-title-are-following-conventional-commits-format).
    steps:
      - if: needs.check-semantic-pr.result == 'failure'
        run: echo 'STATUS=:x:' >> $GITHUB_ENV
      - uses: peter-evans/find-comment@b657a70ff16d17651703a84bee1cb9ad9d2be2ea # pin@v2.0.1
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: ${{ env.check-type }}
      - uses: thollander/actions-comment-pull-request@686ab1cab89e0f715a44a0d04b9fdfdd4f33d751 # pin@v1.4.1
        if: >
          (needs.check-semantic-pr.result == 'failure')
          || (steps.fc.outputs.comment-id != '')
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          comment_includes: ${{ env.check-type }}
          message: |
            ${{ env.STATUS }} The **${{ env.check-type }}** ended with status **${{ needs.check-semantic-pr.result }}**. ${{ env.check-documentation }}
