# Copyright 2022 The Magma Authors.
#
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: AGW Test LTE Integration With Make Containerized Build

on:
  workflow_dispatch:
    inputs:
      digest_c:
        type: string
        required: true
      digest_python:
        type: string
        required: true
      digest_go:
        type: string
        required: true
      registry:
        type: string
        required: true
      test_targets:
        type: choice
        options: [ precommit, extended_tests ]
        required: true
  workflow_call:
    inputs:
      digest_c:
        type: string
        required: true
      digest_python:
        type: string
        required: true
      digest_go:
        type: string
        required: true
      registry:
        type: string
        required: true
      test_targets:
        type: string  # It seems we cannot define a choice with options in workflow_call
        required: true

jobs:
  lte-integ-test-containerized:
    runs-on: macos-12
    steps:
      - name: Show inputs
        run: |
          echo Docker image digest C      ${{ inputs.digest_c }}
          echo Docker image digest Python ${{ inputs.digest_python }}
          echo Docker image digest Go     ${{ inputs.digest_go }}
          echo Docker registry            ${{ inputs.registry }}
          echo test targets               ${{ inputs.test_targets }}
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # pin@v3.1.0
      - id: set-registry
        name: Set registry and image_prefix
        run: |
          echo ${{ inputs.registry }}
          echo registry=${{ inputs.registry }} >> $GITHUB_OUTPUT
          if [ ${{ inputs.registry }} = docker.io ]
          then
            echo image_prefix=${{ secrets.LF_JFROG_USERNAME }}/ >> $GITHUB_OUTPUT  # dockerhub image URLs have the form docker.io/<username>/image
          fi
      - name: Write image digest to docker-compose.yaml
        working-directory: lte/gateway/docker
        run: |
          sed -i '' "s#image:.*agw_gateway_c.*#image: ${{ inputs.registry }}/${{ steps.set-registry.outputs.image_prefix }}agw_gateway_c@${{ inputs.digest_c }}#" docker-compose.yaml
          sed -i '' "s#image:.*agw_gateway_python.*#image: ${{ inputs.registry }}/${{ steps.set-registry.outputs.image_prefix }}agw_gateway_python@${{ inputs.digest_python }}#" docker-compose.yaml
          sed -i '' "s#image:.*gateway_go.*#image: ${{ inputs.registry }}/${{ steps.set-registry.outputs.image_prefix }}gateway_go@${{ inputs.digest_go }}#" docker-compose.yaml
      - name: Show docker-compose yaml to verify correct docker images hashes
        run: cat lte/gateway/docker/docker-compose.yaml
      - name: Cache magma-dev-box
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # pin@v3.0.11
        with:
          path: ~/.vagrant.d/boxes/magmacore-VAGRANTSLASH-magma_dev
          key: vagrant-box-magma-dev-v1.2.20221012
      - name: Cache magma-test-box
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # pin@v3.0.11
        with:
          path: ~/.vagrant.d/boxes/magmacore-VAGRANTSLASH-magma_test
          key: vagrant-box-magma-test-v1.2.20221012
      - name: Cache magma-trfserver-box
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # pin@v3.0.11
        with:
          path: ~/.vagrant.d/boxes/magmacore-VAGRANTSLASH-magma_trfserver
          key: vagrant-box-magma-trfserver-v20220722
      - uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984 # pin@v4.3.0
        with:
          python-version: '3.8.10'
      - name: Install pre requisites
        run: |
          pip3 install --upgrade pip
          pip3 install ansible fabric3 jsonpickle requests PyYAML
          vagrant plugin install vagrant-vbguest vagrant-disksize vagrant-reload
      - name: Open up network interfaces for VM
        run: |
          sudo mkdir -p /etc/vbox/
          echo '* 192.168.0.0/16' | sudo tee /etc/vbox/networks.conf
          echo '* 3001::/64' | sudo tee -a /etc/vbox/networks.conf
      - name: Run the integration test
        env:
          MAGMA_DEV_CPUS: 3
          MAGMA_DEV_MEMORY_MB: 9216
        working-directory: lte/gateway
        # the image is directly concatenated to the registry, so we need the slash as delimiter
        run: fab --show=debug --set DOCKER_REGISTRY=${{ inputs.registry }}/ integ_test_containerized:test_mode=${{ inputs.test_targets }}
      - name: Get test results
        if: always()
        working-directory: lte/gateway
        run: |
          fab get_test_summaries:dst_path="test-results",sudo_tests=False,dev_vm_name="magma_deb"
      - name: Upload test results
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # pin@v3
        if: always()
        with:
          name: test-results-${{ matrix.test_targets }}
          path: lte/gateway/test-results/**/*.xml
