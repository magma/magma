# Copyright 2022 The Magma Authors.
#
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: AGW Test LTE Integration With Make Containerized Build

on:
  workflow_dispatch: null
  workflow_run:
    workflows:
      - AGW Build & Publish Container
    types:
      - completed

jobs:
  lte-integ-test-containerized:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: macos-12
    strategy:
      fail-fast: false
      matrix:
        test_targets: [ "precommit", "extended_tests" ]
    steps:
      - name: Cache magma-dev-box
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # pin@v3.0.11
        with:
          path: ~/.vagrant.d/boxes/magmacore-VAGRANTSLASH-magma_dev
          key: vagrant-box-magma-dev-v1.2.20221012
      - name: Cache magma-test-box
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # pin@v3.0.11
        with:
          path: ~/.vagrant.d/boxes/magmacore-VAGRANTSLASH-magma_test
          key: vagrant-box-magma-test-v1.2.20221012
      - name: Cache magma-trfserver-box
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # pin@v3.0.11
        with:
          path: ~/.vagrant.d/boxes/magmacore-VAGRANTSLASH-magma_trfserver
          key: vagrant-box-magma-trfserver-v20220722
      - uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984 # pin@v4.3.0
        with:
          python-version: '3.8.10'
      - name: Install pre requisites
        run: |
          pip3 install --upgrade pip
          pip3 install ansible fabric3 jsonpickle requests PyYAML
          vagrant plugin install vagrant-vbguest vagrant-disksize vagrant-reload
      - name: Open up network interfaces for VM
        run: |
          sudo mkdir -p /etc/vbox/
          echo '* 192.168.0.0/16' | sudo tee /etc/vbox/networks.conf
          echo '* 3001::/64' | sudo tee -a /etc/vbox/networks.conf
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # pin@v3.1.0
      - name: Get docker image hashes from builder workflow
        uses: dawidd6/action-download-artifact@e6e25ac3a2b93187502a8be1ef9e9603afc34925 # pin@2.24.2
        with:
          run_id: ${{ github.event.workflow_run.id }}
      - name: Save docker image hashes to environment variables
        run: |
          echo "digest-c=$(cat artifact/agw_gateway_c.digest)" >> $GITHUB_ENV
          echo "digest-python=$(cat artifact/agw_gateway_python.digest)" >> $GITHUB_ENV
          echo "digest-go=$(cat artifact/gateway_go.digest)" >> $GITHUB_ENV
      - name: Show docker images to be used
        run: |
          echo Docker image digest C      ${{ env.digest-c }}
          echo Docker image digest Python ${{ env.digest-python }}
          echo Docker image digest Go     ${{ env.digest-go }}
      - name: Write image digest to docker-compose.yaml
        working-directory: lte/gateway/docker
        run: |
          sed -i s/agw_gateway_c\${OPTIONAL_ARCH_POSTFIX}:\${IMAGE_VERSION}/agw_gateway_c:${{ env.digest-c }}/g docker-compose.yaml
          sed -i s/agw_gateway_python\${OPTIONAL_ARCH_POSTFIX}:\${IMAGE_VERSION}/agw_gateway_python:${{ env.digest-python }}/g docker-compose.yaml
          sed -i s/gateway_go\${OPTIONAL_ARCH_POSTFIX}:\${IMAGE_VERSION}/gateway_go:${{ env.digest-go }}/g docker-compose.yaml
      - name: Show docker-compose yaml to verify correct docker images hashes
        run: cat lte/gateway/docker/docker-compose.yaml
      - name: Run the integration test
        env:
          DOCKER_REGISTRY: docker-ci.artifactory.magmacore.org/
          MAGMA_DEV_CPUS: 3
          MAGMA_DEV_MEMORY_MB: 9216
        working-directory: lte/gateway
        run: |
          fab --show=debug --set DOCKER_REGISTRY=${DOCKER_REGISTRY} integ_test_containerized:test_mode=${{ matrix.test_targets }}
      - name: Get test results
        if: always()
        working-directory: lte/gateway
        run: |
          fab get_test_summaries:dst_path="test-results",sudo_tests=False,dev_vm_name="magma_deb"
      - name: Upload test results
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # pin@v3
        if: always()
        with:
          name: test-results-${{ matrix.test_targets }}
          path: lte/gateway/test-results/**/*.xml
