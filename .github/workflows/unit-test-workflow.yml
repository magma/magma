---
name: Cloud Unit Test Results
on:  # yamllint disable-line rule:truthy
  workflow_run:
    workflows:
      - unit-tests
    types:
      - completed

jobs:
  comment-on-pr-results:
    if: github.event.workflow_run.event == 'pull_request'
    name: Job to retrieve the value in pr/skipped file
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job: [ cloud, feg,  agw, golang-build, nms ]
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "{{matrix.job}}-pr"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/pr.zip', Buffer.from(download.data));
      - run: unzip pr.zip
      - name: Check if the workflow is skipped
        id: skip_check
        uses: actions/github-script@v3
        with:
          script: |
            var fs = require('fs');
            var skipFlag = fs.readFileSync('./skipped');
            if( skipFlag == 'true' ) {
              core.setOutput('should_skip', 'true');
            }
            else  {
              core.setOutput('should_skip', 'false');
            }
      - name: Download and Extract Artifacts
        if: steps.skip_check.outputs.should_skip == 'false'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name.startswith("{{matrix.job}}-tests")
            });
            var i =0;
            for (matchMetadataArtifact of matchArtifact) {
              if( matchMetadataArtifact.id == undefined || matchMetadataArtifact.id.length === 0){
                console.log(String(matchMetadataArtifact));
                continue;
              }
              var download = await github.actions.downloadArtifact({
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            artifact_id: matchMetadataArtifact.id,
                            archive_format: 'zip',
                         });
              fs.writeFileSync('${{github.workspace}}/artifact' + i + '.zip', Buffer.from(download.data));
              console.log('Downloaded ' + matchMetadataArtifact.name + ' and placed it there ${{github.workspace}}/artifact' + i + '.zip');
              github.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: matchMetadataArtifact.id
              });
              console.log(String(matchMetadataArtifact.id));
              i=i+1
            }
      - name: Unzip
        run: |
          for zipped_archive in `ls -a1 *.zip`
          do
            unzip $zipped_archive artifacts/
          done
      - name: Publish Unit Test Results
        if: steps.skip_check.outputs.should_skip == 'false'
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          check_name: ${{ matrix.job }}-tests
          commit: ${{ github.event.workflow_run.head_commit.id }}
          files: "artifacts/**/*.xml"
