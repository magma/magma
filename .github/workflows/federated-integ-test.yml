---

name: Federated integ test

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
  workflow_run:
    workflows:
      - build-all
    branches:
      - master
      - 'v1.*'
    types:
      - completed
  push:
    branches:
      - master
      - 'v1.*'
  pull_request:
    branches:
      - master
      - 'v1.*'
    types: [opened, reopened, synchronize]

jobs:
  federated-integ-test:
    if: github.repository_owner == 'magma' || github.event_name == 'workflow_dispatch'
    runs-on: macos-10.15
    env:
      SHA: ${{ github.event.workflow_run.head_commit.id || github.sha }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ env.SHA }}
      - name: setup pyenv
        uses: "gabrielfalcao/pyenv-action@v8"
        with:
          default: 3.8.5
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8.5'
      - name: Install pre requisites
        run: |
          pip3 install --upgrade pip
          pip3 install ansible fabric3 jsonpickle requests PyYAML firebase_admin
          vagrant plugin install vagrant-vbguest vagrant-disksize

      # Docker install
      - uses: docker-practice/actions-setup-docker@master
      - name: Check Docker install
        run: |
          set -x
          docker version
      - name: Install Docker Compose
        shell: bash
        run: |
          sudo curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-`uname -s`-`uname -m` -o /usr/lâ†’
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version


      - name: Open up network interfaces for VM
        run: |
          sudo mkdir -p /etc/vbox/
          sudo touch /etc/vbox/networks.conf
          sudo sh -c "echo '* 192.168.0.0/16' > /etc/vbox/networks.conf"
      - name: Run the integ test
        run: |
          cd lte/gateway
          export MAGMA_DEV_CPUS=3
          export MAGMA_DEV_MEMORY_MB=9216
          fab federated_integ_test:build_all=True
      - name: Get test results
        if: always()
        run: |
          cd lte/gateway
          fab get_test_summaries:dst_path="test-results"
          ls -R
      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: test-results
          path: lte/gateway/test-results/**/*.xml
      - name: Get test logs
        if: failure()
        run: |
          cd lte/gateway
          fab get_test_logs:dst_path=./logs.tar.gz
      - name: Upload test logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-logs
          path: lte/gateway/logs.tar.gz
      - name: Publish Unit Test Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        with:
          files: lte/gateway/test-results/**/*.xml
          check_run_annotations: all tests
      - name: Publish results to Firebase
        if: always() && github.event.workflow_run.event == 'push'
        env:
          FIREBASE_SERVICE_CONFIG: ${{ secrets.FIREBASE_SERVICE_CONFIG }}
          REPORT_FILENAME: "federated_integ_test_${{ env.SHA }}.html"
        run: |
          npm install -g xunit-viewer
          [ -d "lte/gateway/test-results/" ] && { xunit-viewer -r lte/gateway/test-results/ -o "$REPORT_FILENAME"; }
          [ -f "$REPORT_FILENAME" ] && { python ci-scripts/firebase_upload_file.py -f "$REPORT_FILENAME" -o out_url.txt; }
          [ -f "out_url.txt" ] && { URL=$(cat out_url.txt); }
          python ci-scripts/firebase_publish_report.py -id ${{ env.SHA }} --verdict ${{ job.status }} --run_id ${{ github.run_id }} lte --url $URL
      - name: Notify failure to slack
        if: failure() && github.event.workflow_run.event == 'push'
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: "LTE integ test"
          SLACK_AVATAR: ":boom:"
        uses: Ilshidur/action-slack@2.1.0
        with:
          args: "Federated integration test test failed on [${{ env.SHA }}](${{github.event.repository.owner.html_url}}/magma/commit/${{ env.SHA }}): ${{ steps.commit.outputs.title}}"
