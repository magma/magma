name: Protocol controller unit tests

#on: 
#  pull_request:
    #branches:
    #  - 'move_dp_to_magma'
    #paths:
    #  - "dp/cloud/python/protocol_controller/**"
    #  - ".github/workflows/protocol-controller.yml"
#  push:
    #branches:
    #  - 'move_dp_to_magma'
    #paths:
    #  - "dp/cloud/python/protocol_controller/**"
    #  - ".github/workflows/dp-protocol-controller.yml"
on:
  pull_request:
    branches:
      - "cl_develop"
  push:
    branches:
      - "!cl_develop"

jobs:
  configuration_controller_unit_tests:
    name: "Protocol controller unit tests"
    runs-on: ubuntu-latest
    env:
      COVERAGE_RCFILE: ${{ github.workspace }}/dp/.coveragerc
      PYTHONPATH: "${{ github.workspace }}:${{ github.workspace }}/build/gen"
      MAGMA_ROOT: "${{ github.workspace }}"
      PYTHON_BUILD: "${{ github.workspace }}/build"

    defaults:
      run:
        working-directory: dp/cloud/python/magma/protocol_controller

    strategy:
      matrix:
        python-version: [3.8]
    steps:

    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install python3-aioeventlet from the magma apt repo
      run: |
          cat ${{ env.MAGMA_ROOT }}/orc8r/tools/ansible/roles/pkgrepo/files/jfrog.pub | sudo -E apt-key add -
          echo "deb https://facebookconnectivity.jfrog.io/artifactory/list/dev-focal/ focal main" | sudo -E tee /etc/apt/sources.list.d/fbc.list
          sudo apt-get update -y
          sudo apt-get install -y python3-aioeventlet
          sudo rm -rf /var/lib/apt/lists/*
    - name: Setup protoc3
      working-directory: "${{ github.workspace }}"
      run: |
          pip3 install protobuf
          pip3 install setuptools==49.6.0
          curl -Lfs https://github.com/protocolbuffers/protobuf/releases/download/v3.18.0/protoc-3.18.0-linux-x86_64.zip -o protoc3.zip
          unzip protoc3.zip -d protoc3
          sudo -E mv protoc3/bin/protoc /bin/protoc
          sudo -E chmod a+rx /bin/protoc
          # Workaround: the include files need to be found
          mv ./protoc3/include/google .
          sudo -E rm -rf protoc3.zip protoc3

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f plugins/cbsd_sas/tests/requirements.txt ]; then pip install -r plugins/cbsd_sas/tests/requirements.txt; fi

    - name: Generate protobufs
      working-directory: "${{ github.workspace }}/dp"
      run: |
        mkdir -p ${PYTHON_BUILD}
        make protos

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      working-directory: "${{ github.workspace }}/dp/cloud/python"
      run: |
        coverage run --source=. -m pytest magma/protocol_controller/plugins/cbsd_sas/tests/unit
        coverage report

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        flags: unittests,protocol-controller
        name: codecov-protocol-controller
        fail_ci_if_error: false
        verbose: true
