# Copyright 2020 The Magma Authors.

# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default values for agw.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

release_group: null

# Reference to one or more secrets to be used when pulling images
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# - name: orc8r-secrets-registry

# Runtime type refere to k8s addon running to support VM as POD
# Example: virtlet or kubevirt

runtime_type: virtlet

# secrets sub-chart configuration.
secrets:
  create: false
#  secret:
#    enabled: true
#    gwinfo:
#      gw_challenge.key: |-
#        -----BEGIN EC PRIVATE KEY-----
#        MIGkAgEBBDDnfY3HT8joMBPrpDemifgvX2BiI0O0Y2UcwtosEoUAoU9HTN9tBxi9
#        ---------
#        ---------
#        -----END EC PRIVATE KEY-----
#      snowflake: |-
#        c108a923-2abe-4ca8-ad70-7a1177137cc3

# Define which secrets should be mounted by pods.
secret:
  certs: orc8r-secrets-certs
#  gwinfo: feg-secrets-gwinfo

## Key Values for docker inside VM
feg:
  type: feg
  image:
    docker_registry: ""
    tag: "latest"
    #username:
    #password:
  log_aggregation:
    enabled: false
    fluentd_address: fluentd.magma.svc.cluster.local
    fluentd_port: 24224
  proxy:
    local_port: 8443
    cloud_address: orc8r-proxy.magma.svc.cluster.local
    cloud_port: 9443
    bootstrap_address: bootstrap-legacy.magma.svc.cluster.local
    bootstrap_port: 443
  repo:
    url: https://github.com/magma/magma/
    branch: "master"

## Base image for VM used by virtlet and kubevirt runtime
## for Virtlet the image should be in qcwo2 format 
## for Kubevirt the image should be in docker format and need to be build as described in README.md#5. Build kubevirt base image
##
image:
  repository:
  pullPolicy:

# VMI/POD replication
replicas: 1

nameOverride: ""
fullnameOverride: ""

labels:
  node_selector_key: cmp
  node_selector_value: node

## When used runtime_type as KUBEVIRT use below syntax for multiple interfaces
#
#network:
#  interface:
#  - name: bridge-eth1
#    type: bridge
#  - name: sriov-eth2
#    type: sriov

## When used runtime_type as VIRTLET use below syntax for multiple interfaces
#
#network:
#  interface: "calico,bridge-eth1,sriov-eth2"

resources:
  requests:
    memory: "2048Mi"
    cpu: "2"
  limits:
    memory: "4096Mi"
    cpu: "2"

service:
  type: LoadBalancer
  ports:
    local:
      port: 8443
      targetport: 8443
      nodePort: ""
    cloud:
      port: 9443
      targetport: 9443
      nodePort: ""
    bootstrap:
      port: 9444
      targetport: 9444
      nodePort: ""
    ssh:
      port: 22
      targetport: 22
      nodePort: ""

tolerations: []

affinity: {}

gateway:
  vcpuCount: 2
  rootVolumeSize: 20Gi
  diskDriver: virtio
  sshKeys: |
    ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCaJEcFDXEK2ZbX0ZLS1EIYFZRbDAc
  ssh_pwauth: True
  user:
    users:
    - name: testuser
      gecos: User
      primary-group: testuser
      groups: users
      lock_passwd: false
      shell: /bin/bash
      # the password is "testuser"
      passwd: "$6$rounds=4096$wPs4Hz4tfs$a8ssMnlvH.3GX88yxXKF2cKMlVULsnydoOKgkuStTErTq2dzKZiIx9R/pPWWh5JLxzoZEx7lsSX5T2jW5WISi1"
      sudo: ALL=(ALL) NOPASSWD:ALL

manifests:
  deployment: true
  service: true
  configmap_env: true
  rbac: true
