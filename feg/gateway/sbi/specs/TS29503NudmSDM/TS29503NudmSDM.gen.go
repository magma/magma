// Package TS29503NudmSDM provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package TS29503NudmSDM

import (
	"encoding/json"
	"fmt"

	externalRef0 "magma/feg/gateway/sbi/specs/TS29509NausfSoRProtection"
	externalRef1 "magma/feg/gateway/sbi/specs/TS29509NausfUPUProtection"
	externalRef2 "magma/feg/gateway/sbi/specs/TS29510NnrfNFManagement"
	externalRef3 "magma/feg/gateway/sbi/specs/TS29571CommonData"
)

const (
	OAuth2ClientCredentialsScopes = "oAuth2ClientCredentials.Scopes"
)

// N3GppChargingCharacteristics defines model for 3GppChargingCharacteristics.
type N3GppChargingCharacteristics string

// AccessAndMobilitySubscriptionData defines model for AccessAndMobilitySubscriptionData.
type AccessAndMobilitySubscriptionData struct {
	ActiveTime                  *externalRef3.DurationSecRm          `json:"activeTime"`
	CoreNetworkTypeRestrictions *[]externalRef3.CoreNetworkType      `json:"coreNetworkTypeRestrictions,omitempty"`
	DlPacketCount               *DlPacketCount                       `json:"dlPacketCount,omitempty"`
	ForbiddenAreas              *[]externalRef3.Area                 `json:"forbiddenAreas,omitempty"`
	Gpsis                       *[]externalRef3.Gpsi                 `json:"gpsis,omitempty"`
	InternalGroupIds            *[]externalRef3.GroupId              `json:"internalGroupIds,omitempty"`
	McsPriority                 *McsPriorityIndicator                `json:"mcsPriority,omitempty"`
	MicoAllowed                 *MicoAllowed                         `json:"micoAllowed,omitempty"`
	MpsPriority                 *MpsPriorityIndicator                `json:"mpsPriority,omitempty"`
	Nssai                       *Nssai                               `json:"nssai"`
	NssaiInclusionAllowed       *bool                                `json:"nssaiInclusionAllowed,omitempty"`
	OdbPacketServices           *externalRef3.OdbPacketServices      `json:"odbPacketServices"`
	RatRestrictions             *[]externalRef3.RatType              `json:"ratRestrictions,omitempty"`
	RfspIndex                   *externalRef3.RfspIndexRm            `json:"rfspIndex"`
	ServiceAreaRestriction      *externalRef3.ServiceAreaRestriction `json:"serviceAreaRestriction,omitempty"`
	SharedAmDataIds             *[]SharedDataId                      `json:"sharedAmDataIds,omitempty"`
	SorInfo                     *SorInfo                             `json:"sorInfo,omitempty"`
	SubsRegTimer                *externalRef3.DurationSecRm          `json:"subsRegTimer"`
	SubscribedDnnList           *[]interface{}                       `json:"subscribedDnnList,omitempty"`
	SubscribedUeAmbr            *externalRef3.AmbrRm                 `json:"subscribedUeAmbr"`
	SupportedFeatures           *externalRef3.SupportedFeatures      `json:"supportedFeatures,omitempty"`
	UeUsageType                 *UeUsageType                         `json:"ueUsageType,omitempty"`
	UpuInfo                     *UpuInfo                             `json:"upuInfo,omitempty"`
}

// AcknowledgeInfo defines model for AcknowledgeInfo.
type AcknowledgeInfo struct {
	ProvisioningTime externalRef3.DateTime `json:"provisioningTime"`
	SecuredPacket    *SecuredPacket        `json:"securedPacket,omitempty"`
	SorMacIue        *externalRef0.SorMac  `json:"sorMacIue,omitempty"`
	UpuMacIue        *externalRef1.UpuMac  `json:"upuMacIue,omitempty"`
}

// DataSetName defines model for DataSetName.
type DataSetName interface{}

// DatasetNames defines model for DatasetNames.
type DatasetNames []DataSetName

// DlPacketCount defines model for DlPacketCount.
type DlPacketCount int

// DnnConfiguration defines model for DnnConfiguration.
type DnnConfiguration struct {
	N3gppChargingCharacteristics *N3GppChargingCharacteristics      `json:"3gppChargingCharacteristics,omitempty"`
	N5gQosProfile                *externalRef3.SubscribedDefaultQos `json:"5gQosProfile,omitempty"`
	IwkEpsInd                    *IwkEpsInd                         `json:"iwkEpsInd,omitempty"`
	PduSessionTypes              PduSessionTypes                    `json:"pduSessionTypes"`
	SessionAmbr                  *externalRef3.Ambr                 `json:"sessionAmbr,omitempty"`
	SscModes                     SscModes                           `json:"sscModes"`
	StaticIpAddress              *[]IpAddress                       `json:"staticIpAddress,omitempty"`
	UpSecurity                   *externalRef3.UpSecurity           `json:"upSecurity,omitempty"`
}

// DnnIndicator defines model for DnnIndicator.
type DnnIndicator bool

// DnnInfo defines model for DnnInfo.
type DnnInfo struct {
	DefaultDnnIndicator *DnnIndicator      `json:"defaultDnnIndicator,omitempty"`
	Dnn                 interface{}        `json:"dnn"`
	DnnBarred           *bool              `json:"dnnBarred,omitempty"`
	IwkEpsInd           *IwkEpsInd         `json:"iwkEpsInd,omitempty"`
	LboRoamingAllowed   *LboRoamingAllowed `json:"lboRoamingAllowed,omitempty"`
}

// EmergencyInfo defines model for EmergencyInfo.
type EmergencyInfo interface{}

// ExtGroupId defines model for ExtGroupId.
type ExtGroupId string

// GroupIdentifiers defines model for GroupIdentifiers.
type GroupIdentifiers struct {
	ExtGroupId *ExtGroupId           `json:"extGroupId,omitempty"`
	IntGroupId *externalRef3.GroupId `json:"intGroupId,omitempty"`
}

// IdTranslationResult defines model for IdTranslationResult.
type IdTranslationResult struct {
	Gpsi              *externalRef3.Gpsi              `json:"gpsi,omitempty"`
	Supi              externalRef3.Supi               `json:"supi"`
	SupportedFeatures *externalRef3.SupportedFeatures `json:"supportedFeatures,omitempty"`
}

// IpAddress defines model for IpAddress.
type IpAddress interface{}

// IwkEpsInd defines model for IwkEpsInd.
type IwkEpsInd bool

// LboRoamingAllowed defines model for LboRoamingAllowed.
type LboRoamingAllowed bool

// McsPriorityIndicator defines model for McsPriorityIndicator.
type McsPriorityIndicator bool

// MicoAllowed defines model for MicoAllowed.
type MicoAllowed bool

// ModificationNotification defines model for ModificationNotification.
type ModificationNotification struct {
	NotifyItems []externalRef3.NotifyItem `json:"notifyItems"`
}

// MpsPriorityIndicator defines model for MpsPriorityIndicator.
type MpsPriorityIndicator bool

// Nssai defines model for Nssai.
type Nssai struct {
	DefaultSingleNssais []externalRef3.Snssai           `json:"defaultSingleNssais"`
	ProvisioningTime    *externalRef3.DateTime          `json:"provisioningTime,omitempty"`
	SingleNssais        *[]externalRef3.Snssai          `json:"singleNssais,omitempty"`
	SupportedFeatures   *externalRef3.SupportedFeatures `json:"supportedFeatures,omitempty"`
}

// PduSession defines model for PduSession.
type PduSession struct {
	Dnn           externalRef3.Dnn          `json:"dnn"`
	PlmnId        externalRef3.PlmnId       `json:"plmnId"`
	SmfInstanceId externalRef3.NfInstanceId `json:"smfInstanceId"`
}

// PduSessionTypes defines model for PduSessionTypes.
type PduSessionTypes struct {
	AllowedSessionTypes *[]externalRef3.PduSessionType `json:"allowedSessionTypes,omitempty"`
	DefaultSessionType  externalRef3.PduSessionType    `json:"defaultSessionType"`
}

// PgwInfo defines model for PgwInfo.
type PgwInfo struct {
	Dnn     externalRef3.Dnn     `json:"dnn"`
	PgwFqdn string               `json:"pgwFqdn"`
	PlmnId  *externalRef3.PlmnId `json:"plmnId,omitempty"`
}

// SdmSubsModification defines model for SdmSubsModification.
type SdmSubsModification struct {
	Expires               *externalRef3.DateTime `json:"expires,omitempty"`
	MonitoredResourceUris *[]externalRef3.Uri    `json:"monitoredResourceUris,omitempty"`
}

// SdmSubscription defines model for SdmSubscription.
type SdmSubscription struct {
	AmfServiceName        *externalRef2.ServiceName `json:"amfServiceName,omitempty"`
	CallbackReference     externalRef3.Uri          `json:"callbackReference"`
	Dnn                   *externalRef3.Dnn         `json:"dnn,omitempty"`
	Expires               *externalRef3.DateTime    `json:"expires,omitempty"`
	ImplicitUnsubscribe   *bool                     `json:"implicitUnsubscribe,omitempty"`
	MonitoredResourceUris []externalRef3.Uri        `json:"monitoredResourceUris"`
	NfInstanceId          externalRef3.NfInstanceId `json:"nfInstanceId"`
	PlmnId                *externalRef3.PlmnId      `json:"plmnId,omitempty"`
	SingleNssai           *externalRef3.Snssai      `json:"singleNssai,omitempty"`
	SubscriptionId        *string                   `json:"subscriptionId,omitempty"`
}

// SecuredPacket defines model for SecuredPacket.
type SecuredPacket string

// SessionManagementSubscriptionData defines model for SessionManagementSubscriptionData.
type SessionManagementSubscriptionData struct {
	// A map (list of key-value pairs where Dnn, or optionally the Wildcard DNN, serves as key) of DnnConfigurations
	DnnConfigurations         *SessionManagementSubscriptionData_DnnConfigurations `json:"dnnConfigurations,omitempty"`
	InternalGroupIds          *[]externalRef3.GroupId                              `json:"internalGroupIds,omitempty"`
	OdbPacketServices         *externalRef3.OdbPacketServices                      `json:"odbPacketServices"`
	SharedDnnConfigurationsId *SharedDataId                                        `json:"sharedDnnConfigurationsId,omitempty"`
	SingleNssai               externalRef3.Snssai                                  `json:"singleNssai"`
}

// A map (list of key-value pairs where Dnn, or optionally the Wildcard DNN, serves as key) of DnnConfigurations
type SessionManagementSubscriptionData_DnnConfigurations struct {
	AdditionalProperties map[string]DnnConfiguration `json:"-"`
}

// SharedData defines model for SharedData.
type SharedData struct {
	SharedAmData            *AccessAndMobilitySubscriptionData  `json:"sharedAmData,omitempty"`
	SharedDataId            SharedDataId                        `json:"sharedDataId"`
	SharedDnnConfigurations *SharedData_SharedDnnConfigurations `json:"sharedDnnConfigurations,omitempty"`
	SharedSmsMngSubsData    *SmsManagementSubscriptionData      `json:"sharedSmsMngSubsData,omitempty"`
	SharedSmsSubsData       *SmsSubscriptionData                `json:"sharedSmsSubsData,omitempty"`
	SharedSnssaiInfos       *SharedData_SharedSnssaiInfos       `json:"sharedSnssaiInfos,omitempty"`
	SharedTraceData         *externalRef3.TraceData             `json:"sharedTraceData"`
}

// SharedData_SharedDnnConfigurations defines model for SharedData.SharedDnnConfigurations.
type SharedData_SharedDnnConfigurations struct {
	AdditionalProperties map[string]DnnConfiguration `json:"-"`
}

// SharedData_SharedSnssaiInfos defines model for SharedData.SharedSnssaiInfos.
type SharedData_SharedSnssaiInfos struct {
	AdditionalProperties map[string]SnssaiInfo `json:"-"`
}

// SharedDataId defines model for SharedDataId.
type SharedDataId string

// SharedDataIds defines model for SharedDataIds.
type SharedDataIds []SharedDataId

// SmfSelectionSubscriptionData defines model for SmfSelectionSubscriptionData.
type SmfSelectionSubscriptionData struct {
	SharedSnssaiInfosId   *SharedDataId                                       `json:"sharedSnssaiInfosId,omitempty"`
	SubscribedSnssaiInfos *SmfSelectionSubscriptionData_SubscribedSnssaiInfos `json:"subscribedSnssaiInfos,omitempty"`
	SupportedFeatures     *externalRef3.SupportedFeatures                     `json:"supportedFeatures,omitempty"`
}

// SmfSelectionSubscriptionData_SubscribedSnssaiInfos defines model for SmfSelectionSubscriptionData.SubscribedSnssaiInfos.
type SmfSelectionSubscriptionData_SubscribedSnssaiInfos struct {
	AdditionalProperties map[string]SnssaiInfo `json:"-"`
}

// SmsManagementSubscriptionData defines model for SmsManagementSubscriptionData.
type SmsManagementSubscriptionData struct {
	MoSmsBarringAll     *bool                           `json:"moSmsBarringAll,omitempty"`
	MoSmsBarringRoaming *bool                           `json:"moSmsBarringRoaming,omitempty"`
	MoSmsSubscribed     *bool                           `json:"moSmsSubscribed,omitempty"`
	MtSmsBarringAll     *bool                           `json:"mtSmsBarringAll,omitempty"`
	MtSmsBarringRoaming *bool                           `json:"mtSmsBarringRoaming,omitempty"`
	MtSmsSubscribed     *bool                           `json:"mtSmsSubscribed,omitempty"`
	SharedSmsMngDataIds *[]SharedDataId                 `json:"sharedSmsMngDataIds,omitempty"`
	SupportedFeatures   *externalRef3.SupportedFeatures `json:"supportedFeatures,omitempty"`
}

// SmsSubscribed defines model for SmsSubscribed.
type SmsSubscribed bool

// SmsSubscriptionData defines model for SmsSubscriptionData.
type SmsSubscriptionData struct {
	SharedSmsSubsDataId *SharedDataId  `json:"sharedSmsSubsDataId,omitempty"`
	SmsSubscribed       *SmsSubscribed `json:"smsSubscribed,omitempty"`
}

// SmsfInfo defines model for SmsfInfo.
type SmsfInfo struct {
	PlmnId         externalRef3.PlmnId       `json:"plmnId"`
	SmsfInstanceId externalRef3.NfInstanceId `json:"smsfInstanceId"`
}

// SnssaiInfo defines model for SnssaiInfo.
type SnssaiInfo struct {
	DnnInfos []DnnInfo `json:"dnnInfos"`
}

// SorInfo defines model for SorInfo.
type SorInfo struct {
	AckInd            externalRef0.AckInd      `json:"ackInd"`
	Countersor        *externalRef0.CounterSor `json:"countersor,omitempty"`
	ProvisioningTime  externalRef3.DateTime    `json:"provisioningTime"`
	SorMacIausf       *externalRef0.SorMac     `json:"sorMacIausf,omitempty"`
	SteeringContainer *SteeringContainer       `json:"steeringContainer,omitempty"`
}

// SscModes defines model for SscModes.
type SscModes struct {
	AllowedSscModes *[]externalRef3.SscMode `json:"allowedSscModes,omitempty"`
	DefaultSscMode  externalRef3.SscMode    `json:"defaultSscMode"`
}

// SteeringContainer defines model for SteeringContainer.
type SteeringContainer interface{}

// SubscriptionDataSets defines model for SubscriptionDataSets.
type SubscriptionDataSets struct {
	AmData      *AccessAndMobilitySubscriptionData   `json:"amData,omitempty"`
	SmData      *[]SessionManagementSubscriptionData `json:"smData,omitempty"`
	SmfSelData  *SmfSelectionSubscriptionData        `json:"smfSelData,omitempty"`
	SmsMngData  *SmsManagementSubscriptionData       `json:"smsMngData,omitempty"`
	SmsSubsData *SmsSubscriptionData                 `json:"smsSubsData,omitempty"`
	TraceData   *externalRef3.TraceData              `json:"traceData"`
	UecSmfData  *UeContextInSmfData                  `json:"uecSmfData,omitempty"`
	UecSmsfData *UeContextInSmsfData                 `json:"uecSmsfData,omitempty"`
}

// TraceDataResponse defines model for TraceDataResponse.
type TraceDataResponse struct {
	SharedTraceDataId *SharedDataId           `json:"sharedTraceDataId,omitempty"`
	TraceData         *externalRef3.TraceData `json:"traceData"`
}

// UeContextInSmfData defines model for UeContextInSmfData.
type UeContextInSmfData struct {
	EmergencyInfo *EmergencyInfo `json:"emergencyInfo,omitempty"`

	// A map (list of key-value pairs where PduSessionId serves as key) of PduSessions
	PduSessions *UeContextInSmfData_PduSessions `json:"pduSessions,omitempty"`
	PgwInfo     *[]PgwInfo                      `json:"pgwInfo,omitempty"`
}

// A map (list of key-value pairs where PduSessionId serves as key) of PduSessions
type UeContextInSmfData_PduSessions struct {
	AdditionalProperties map[string]PduSession `json:"-"`
}

// UeContextInSmsfData defines model for UeContextInSmsfData.
type UeContextInSmsfData struct {
	SmsfInfo3GppAccess    *SmsfInfo `json:"smsfInfo3GppAccess,omitempty"`
	SmsfInfoNon3GppAccess *SmsfInfo `json:"smsfInfoNon3GppAccess,omitempty"`
}

// UeUsageType defines model for UeUsageType.
type UeUsageType int

// UpuInfo defines model for UpuInfo.
type UpuInfo struct {
	CounterUpu       *externalRef1.CounterUpu `json:"counterUpu,omitempty"`
	ProvisioningTime externalRef3.DateTime    `json:"provisioningTime"`
	UpuAckInd        externalRef1.UpuAckInd   `json:"upuAckInd"`
	UpuDataList      []externalRef1.UpuData   `json:"upuDataList"`
	UpuMacIausf      *externalRef1.UpuMac     `json:"upuMacIausf,omitempty"`
	UpuRegInd        UpuRegInd                `json:"upuRegInd"`
}

// UpuRegInd defines model for UpuRegInd.
type UpuRegInd bool

// GetGroupIdentifiersParams defines parameters for GetGroupIdentifiers.
type GetGroupIdentifiersParams struct {
	// External Group Identifier
	ExtGroupId *ExtGroupId `json:"ext-group-id,omitempty"`

	// Internal Group Identifier
	IntGroupId *externalRef3.GroupId `json:"int-group-id,omitempty"`

	// Supported Features
	SupportedFeatures *externalRef3.SupportedFeatures `json:"supported-features,omitempty"`

	// Validator for conditional requests, as described in RFC 7232, 3.2
	IfNoneMatch *string `json:"If-None-Match,omitempty"`

	// Validator for conditional requests, as described in RFC 7232, 3.3
	IfModifiedSince *string `json:"If-Modified-Since,omitempty"`
}

// GetSharedDataParams defines parameters for GetSharedData.
type GetSharedDataParams struct {
	// List of shared data ids
	SharedDataIds SharedDataIds `json:"shared-data-ids"`

	// Supported Features
	SupportedFeatures *externalRef3.SupportedFeatures `json:"supportedFeatures,omitempty"`

	// Validator for conditional requests, as described in RFC 7232, 3.2
	IfNoneMatch *string `json:"If-None-Match,omitempty"`

	// Validator for conditional requests, as described in RFC 7232, 3.3
	IfModifiedSince *string `json:"If-Modified-Since,omitempty"`
}

// SubscribeToSharedDataJSONBody defines parameters for SubscribeToSharedData.
type SubscribeToSharedDataJSONBody SdmSubscription

// GetSupiParams defines parameters for GetSupi.
type GetSupiParams struct {
	// Supported Features
	SupportedFeatures *externalRef3.SupportedFeatures `json:"supported-features,omitempty"`

	// Validator for conditional requests, as described in RFC 7232, 3.2
	IfNoneMatch *string `json:"If-None-Match,omitempty"`

	// Validator for conditional requests, as described in RFC 7232, 3.3
	IfModifiedSince *string `json:"If-Modified-Since,omitempty"`
}

// GetDataSetsParams defines parameters for GetDataSets.
type GetDataSetsParams struct {
	// List of dataset names
	DatasetNames DatasetNames `json:"dataset-names"`

	// serving PLMN ID
	PlmnId *externalRef3.PlmnId `json:"plmn-id,omitempty"`

	// Supported Features
	SupportedFeatures *externalRef3.SupportedFeatures `json:"supported-features,omitempty"`

	// Validator for conditional requests, as described in RFC 7232, 3.2
	IfNoneMatch *string `json:"If-None-Match,omitempty"`

	// Validator for conditional requests, as described in RFC 7232, 3.3
	IfModifiedSince *string `json:"If-Modified-Since,omitempty"`
}

// GetAmDataParams defines parameters for GetAmData.
type GetAmDataParams struct {
	// Supported Features
	SupportedFeatures *externalRef3.SupportedFeatures `json:"supported-features,omitempty"`

	// serving PLMN ID
	PlmnId *externalRef3.PlmnId `json:"plmn-id,omitempty"`

	// Validator for conditional requests, as described in RFC 7232, 3.2
	IfNoneMatch *string `json:"If-None-Match,omitempty"`

	// Validator for conditional requests, as described in RFC 7232, 3.3
	IfModifiedSince *string `json:"If-Modified-Since,omitempty"`
}

// SorAckInfoJSONBody defines parameters for SorAckInfo.
type SorAckInfoJSONBody AcknowledgeInfo

// SNSSAIsAckJSONBody defines parameters for SNSSAIsAck.
type SNSSAIsAckJSONBody AcknowledgeInfo

// UpuAckJSONBody defines parameters for UpuAck.
type UpuAckJSONBody AcknowledgeInfo

// GetNSSAIParams defines parameters for GetNSSAI.
type GetNSSAIParams struct {
	// Supported Features
	SupportedFeatures *externalRef3.SupportedFeatures `json:"supported-features,omitempty"`

	// serving PLMN ID
	PlmnId *externalRef3.PlmnId `json:"plmn-id,omitempty"`

	// Validator for conditional requests, as described in RFC 7232, 3.2
	IfNoneMatch *string `json:"If-None-Match,omitempty"`

	// Validator for conditional requests, as described in RFC 7232, 3.3
	IfModifiedSince *string `json:"If-Modified-Since,omitempty"`
}

// SubscribeJSONBody defines parameters for Subscribe.
type SubscribeJSONBody SdmSubscription

// GetSmDataParams defines parameters for GetSmData.
type GetSmDataParams struct {
	// Supported Features
	SupportedFeatures *externalRef3.SupportedFeatures `json:"supported-features,omitempty"`
	SingleNssai       *externalRef3.Snssai            `json:"single-nssai,omitempty"`
	Dnn               *externalRef3.Dnn               `json:"dnn,omitempty"`
	PlmnId            *externalRef3.PlmnId            `json:"plmn-id,omitempty"`

	// Validator for conditional requests, as described in RFC 7232, 3.2
	IfNoneMatch *string `json:"If-None-Match,omitempty"`

	// Validator for conditional requests, as described in RFC 7232, 3.3
	IfModifiedSince *string `json:"If-Modified-Since,omitempty"`
}

// GetSmfSelDataParams defines parameters for GetSmfSelData.
type GetSmfSelDataParams struct {
	// Supported Features
	SupportedFeatures *externalRef3.SupportedFeatures `json:"supported-features,omitempty"`

	// serving PLMN ID
	PlmnId *externalRef3.PlmnId `json:"plmn-id,omitempty"`

	// Validator for conditional requests, as described in RFC 7232, 3.2
	IfNoneMatch *string `json:"If-None-Match,omitempty"`

	// Validator for conditional requests, as described in RFC 7232, 3.3
	IfModifiedSince *string `json:"If-Modified-Since,omitempty"`
}

// GetSmsDataParams defines parameters for GetSmsData.
type GetSmsDataParams struct {
	// Supported Features
	SupportedFeatures *externalRef3.SupportedFeatures `json:"supported-features,omitempty"`
	PlmnId            *externalRef3.PlmnId            `json:"plmn-id,omitempty"`

	// Validator for conditional requests, as described in RFC 7232, 3.2
	IfNoneMatch *string `json:"If-None-Match,omitempty"`

	// Validator for conditional requests, as described in RFC 7232, 3.3
	IfModifiedSince *string `json:"If-Modified-Since,omitempty"`
}

// GetSmsMngtDataParams defines parameters for GetSmsMngtData.
type GetSmsMngtDataParams struct {
	// Supported Features
	SupportedFeatures *externalRef3.SupportedFeatures `json:"supported-features,omitempty"`
	PlmnId            *externalRef3.PlmnId            `json:"plmn-id,omitempty"`

	// Validator for conditional requests, as described in RFC 7232, 3.2
	IfNoneMatch *string `json:"If-None-Match,omitempty"`

	// Validator for conditional requests, as described in RFC 7232, 3.3
	IfModifiedSince *string `json:"If-Modified-Since,omitempty"`
}

// GetTraceConfigDataParams defines parameters for GetTraceConfigData.
type GetTraceConfigDataParams struct {
	// Supported Features
	SupportedFeatures *externalRef3.SupportedFeatures `json:"supported-features,omitempty"`

	// serving PLMN ID
	PlmnId *externalRef3.PlmnId `json:"plmn-id,omitempty"`

	// Validator for conditional requests, as described in RFC 7232, 3.2
	IfNoneMatch *string `json:"If-None-Match,omitempty"`

	// Validator for conditional requests, as described in RFC 7232, 3.3
	IfModifiedSince *string `json:"If-Modified-Since,omitempty"`
}

// GetUeCtxInSmfDataParams defines parameters for GetUeCtxInSmfData.
type GetUeCtxInSmfDataParams struct {
	// Supported Features
	SupportedFeatures *externalRef3.SupportedFeatures `json:"supported-features,omitempty"`
}

// GetUeCtxInSmsfDataParams defines parameters for GetUeCtxInSmsfData.
type GetUeCtxInSmsfDataParams struct {
	// Supported Features
	SupportedFeatures *externalRef3.SupportedFeatures `json:"supported-features,omitempty"`
}

// SubscribeToSharedDataJSONRequestBody defines body for SubscribeToSharedData for application/json ContentType.
type SubscribeToSharedDataJSONRequestBody SubscribeToSharedDataJSONBody

// SorAckInfoJSONRequestBody defines body for SorAckInfo for application/json ContentType.
type SorAckInfoJSONRequestBody SorAckInfoJSONBody

// SNSSAIsAckJSONRequestBody defines body for SNSSAIsAck for application/json ContentType.
type SNSSAIsAckJSONRequestBody SNSSAIsAckJSONBody

// UpuAckJSONRequestBody defines body for UpuAck for application/json ContentType.
type UpuAckJSONRequestBody UpuAckJSONBody

// SubscribeJSONRequestBody defines body for Subscribe for application/json ContentType.
type SubscribeJSONRequestBody SubscribeJSONBody

// Getter for additional properties for SessionManagementSubscriptionData_DnnConfigurations. Returns the specified
// element and whether it was found
func (a SessionManagementSubscriptionData_DnnConfigurations) Get(fieldName string) (value DnnConfiguration, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for SessionManagementSubscriptionData_DnnConfigurations
func (a *SessionManagementSubscriptionData_DnnConfigurations) Set(fieldName string, value DnnConfiguration) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]DnnConfiguration)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for SessionManagementSubscriptionData_DnnConfigurations to handle AdditionalProperties
func (a *SessionManagementSubscriptionData_DnnConfigurations) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]DnnConfiguration)
		for fieldName, fieldBuf := range object {
			var fieldVal DnnConfiguration
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for SessionManagementSubscriptionData_DnnConfigurations to handle AdditionalProperties
func (a SessionManagementSubscriptionData_DnnConfigurations) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for SharedData_SharedDnnConfigurations. Returns the specified
// element and whether it was found
func (a SharedData_SharedDnnConfigurations) Get(fieldName string) (value DnnConfiguration, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for SharedData_SharedDnnConfigurations
func (a *SharedData_SharedDnnConfigurations) Set(fieldName string, value DnnConfiguration) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]DnnConfiguration)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for SharedData_SharedDnnConfigurations to handle AdditionalProperties
func (a *SharedData_SharedDnnConfigurations) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]DnnConfiguration)
		for fieldName, fieldBuf := range object {
			var fieldVal DnnConfiguration
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for SharedData_SharedDnnConfigurations to handle AdditionalProperties
func (a SharedData_SharedDnnConfigurations) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for SharedData_SharedSnssaiInfos. Returns the specified
// element and whether it was found
func (a SharedData_SharedSnssaiInfos) Get(fieldName string) (value SnssaiInfo, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for SharedData_SharedSnssaiInfos
func (a *SharedData_SharedSnssaiInfos) Set(fieldName string, value SnssaiInfo) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]SnssaiInfo)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for SharedData_SharedSnssaiInfos to handle AdditionalProperties
func (a *SharedData_SharedSnssaiInfos) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]SnssaiInfo)
		for fieldName, fieldBuf := range object {
			var fieldVal SnssaiInfo
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for SharedData_SharedSnssaiInfos to handle AdditionalProperties
func (a SharedData_SharedSnssaiInfos) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for SmfSelectionSubscriptionData_SubscribedSnssaiInfos. Returns the specified
// element and whether it was found
func (a SmfSelectionSubscriptionData_SubscribedSnssaiInfos) Get(fieldName string) (value SnssaiInfo, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for SmfSelectionSubscriptionData_SubscribedSnssaiInfos
func (a *SmfSelectionSubscriptionData_SubscribedSnssaiInfos) Set(fieldName string, value SnssaiInfo) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]SnssaiInfo)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for SmfSelectionSubscriptionData_SubscribedSnssaiInfos to handle AdditionalProperties
func (a *SmfSelectionSubscriptionData_SubscribedSnssaiInfos) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]SnssaiInfo)
		for fieldName, fieldBuf := range object {
			var fieldVal SnssaiInfo
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for SmfSelectionSubscriptionData_SubscribedSnssaiInfos to handle AdditionalProperties
func (a SmfSelectionSubscriptionData_SubscribedSnssaiInfos) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for UeContextInSmfData_PduSessions. Returns the specified
// element and whether it was found
func (a UeContextInSmfData_PduSessions) Get(fieldName string) (value PduSession, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for UeContextInSmfData_PduSessions
func (a *UeContextInSmfData_PduSessions) Set(fieldName string, value PduSession) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]PduSession)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for UeContextInSmfData_PduSessions to handle AdditionalProperties
func (a *UeContextInSmfData_PduSessions) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]PduSession)
		for fieldName, fieldBuf := range object {
			var fieldVal PduSession
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for UeContextInSmfData_PduSessions to handle AdditionalProperties
func (a UeContextInSmfData_PduSessions) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}
