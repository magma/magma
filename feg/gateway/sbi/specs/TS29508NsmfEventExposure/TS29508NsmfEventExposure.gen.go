// Package TS29508NsmfEventExposure provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package TS29508NsmfEventExposure

import (
	externalRef0 "magma/feg/gateway/sbi/specs/TS29571CommonData"
)

const (
	OAuth2ClientCredentialsScopes = "oAuth2ClientCredentials.Scopes"
)

// EventNotification defines model for EventNotification.
type EventNotification struct {
	AccType      *externalRef0.AccessType `json:"accType,omitempty"`
	AdIpv4Addr   *externalRef0.Ipv4Addr   `json:"adIpv4Addr,omitempty"`
	AdIpv6Prefix *externalRef0.Ipv6Prefix `json:"adIpv6Prefix,omitempty"`

	// Possible values are - EARLY: Early notification of UP path reconfiguration. - EARLY_LATE: Early and late notification of UP path reconfiguration. This value shall only be present in the subscription to the DNAI change event. - LATE: Late notification of UP path reconfiguration.
	DnaiChgType *externalRef0.DnaiChangeType `json:"dnaiChgType,omitempty"`

	// Possible values are - AC_TY_CH: Access Type Change - UP_PATH_CH: UP Path Change - PDU_SES_REL: PDU Session Release - PLMN_CH: PLMN Change - UE_IP_CH: UE IP address change
	Event              SmfEvent                      `json:"event"`
	Gpsi               *externalRef0.Gpsi            `json:"gpsi,omitempty"`
	PduSeId            *externalRef0.PduSessionId    `json:"pduSeId,omitempty"`
	PlmnId             *externalRef0.PlmnId          `json:"plmnId,omitempty"`
	ReIpv4Addr         *externalRef0.Ipv4Addr        `json:"reIpv4Addr,omitempty"`
	ReIpv6Prefix       *externalRef0.Ipv6Prefix      `json:"reIpv6Prefix,omitempty"`
	SourceDnai         *externalRef0.Dnai            `json:"sourceDnai,omitempty"`
	SourceTraRouting   *externalRef0.RouteToLocation `json:"sourceTraRouting"`
	SourceUeIpv4Addr   *externalRef0.Ipv4Addr        `json:"sourceUeIpv4Addr,omitempty"`
	SourceUeIpv6Prefix *externalRef0.Ipv6Prefix      `json:"sourceUeIpv6Prefix,omitempty"`
	Supi               *externalRef0.Supi            `json:"supi,omitempty"`
	TargetDnai         *externalRef0.Dnai            `json:"targetDnai,omitempty"`
	TargetTraRouting   *externalRef0.RouteToLocation `json:"targetTraRouting"`
	TargetUeIpv4Addr   *externalRef0.Ipv4Addr        `json:"targetUeIpv4Addr,omitempty"`
	TargetUeIpv6Prefix *externalRef0.Ipv6Prefix      `json:"targetUeIpv6Prefix,omitempty"`
	TimeStamp          externalRef0.DateTime         `json:"timeStamp"`
	UeMac              *externalRef0.MacAddr48       `json:"ueMac,omitempty"`
}

// EventSubscription defines model for EventSubscription.
type EventSubscription struct {
	// Possible values are - EARLY: Early notification of UP path reconfiguration. - EARLY_LATE: Early and late notification of UP path reconfiguration. This value shall only be present in the subscription to the DNAI change event. - LATE: Late notification of UP path reconfiguration.
	DnaiChgType *externalRef0.DnaiChangeType `json:"dnaiChgType,omitempty"`

	// Possible values are - AC_TY_CH: Access Type Change - UP_PATH_CH: UP Path Change - PDU_SES_REL: PDU Session Release - PLMN_CH: PLMN Change - UE_IP_CH: UE IP address change
	Event SmfEvent `json:"event"`
}

// Possible values are - PERIODIC - ONE_TIME - ON_EVENT_DETECTION
type NotificationMethod interface{}

// Represents an Individual SMF Notification Subscription resource. The serviveName property corresponds to the serviceName in the main body of the specification.
type NsmfEventExposure struct {
	ImmeRep *bool `json:"ImmeRep,omitempty"`

	// Alternate or backup IPv4 address(es) where to send Notifications.
	AltNotifIpv4Addrs *[]externalRef0.Ipv4Addr `json:"altNotifIpv4Addrs,omitempty"`

	// Alternate or backup IPv6 address(es) where to send Notifications.
	AltNotifIpv6Addrs *[]externalRef0.Ipv6Addr `json:"altNotifIpv6Addrs,omitempty"`

	// Any UE indication. This IE shall be present if the event subscription is applicable to any UE. Default value "false" is used, if not present.
	AnyUeInd *bool `json:"anyUeInd,omitempty"`

	// Subscribed events
	EventSubs    []EventSubscription    `json:"eventSubs"`
	Expiry       *externalRef0.DateTime `json:"expiry,omitempty"`
	Gpsi         *externalRef0.Gpsi     `json:"gpsi,omitempty"`
	GroupId      *externalRef0.GroupId  `json:"groupId,omitempty"`
	Guami        *externalRef0.Guami    `json:"guami,omitempty"`
	MaxReportNbr *externalRef0.Uinteger `json:"maxReportNbr,omitempty"`

	// Notification Correlation ID assigned by the NF service consumer.
	NotifId string `json:"notifId"`

	// Possible values are - PERIODIC - ONE_TIME - ON_EVENT_DETECTION
	NotifMethod *NotificationMethod        `json:"notifMethod,omitempty"`
	NotifUri    externalRef0.Uri           `json:"notifUri"`
	PduSeId     *externalRef0.PduSessionId `json:"pduSeId,omitempty"`
	RepPeriod   *externalRef0.DurationSec  `json:"repPeriod,omitempty"`

	// If the NF service consumer is an AMF, it should provide the name of a service produced by the AMF that makes use of notifications about subscribed events.
	ServiveName *string `json:"serviveName,omitempty"`

	// Identifies an Individual SMF Notification Subscription. To enable that the value is used as part of a URI, the string shall only contain characters allowed according to the "lower-with-hyphen" naming convention defined in 3GPP TS 29.501. In an OpenAPI schema, the format shall be designated as "SubId".
	SubId             *SubId                          `json:"subId,omitempty"`
	Supi              *externalRef0.Supi              `json:"supi,omitempty"`
	SupportedFeatures *externalRef0.SupportedFeatures `json:"supportedFeatures,omitempty"`
}

// NsmfEventExposureNotification defines model for NsmfEventExposureNotification.
type NsmfEventExposureNotification struct {
	// Notifications about Individual Events
	EventNotifs []EventNotification `json:"eventNotifs"`

	// Notification correlation ID
	NotifId string `json:"notifId"`
}

// Possible values are - AC_TY_CH: Access Type Change - UP_PATH_CH: UP Path Change - PDU_SES_REL: PDU Session Release - PLMN_CH: PLMN Change - UE_IP_CH: UE IP address change
type SmfEvent interface{}

// Identifies an Individual SMF Notification Subscription. To enable that the value is used as part of a URI, the string shall only contain characters allowed according to the "lower-with-hyphen" naming convention defined in 3GPP TS 29.501. In an OpenAPI schema, the format shall be designated as "SubId".
type SubId string

// CreateIndividualSubcriptionJSONBody defines parameters for CreateIndividualSubcription.
type CreateIndividualSubcriptionJSONBody NsmfEventExposure

// ReplaceIndividualSubcriptionJSONBody defines parameters for ReplaceIndividualSubcription.
type ReplaceIndividualSubcriptionJSONBody NsmfEventExposure

// CreateIndividualSubcriptionJSONRequestBody defines body for CreateIndividualSubcription for application/json ContentType.
type CreateIndividualSubcriptionJSONRequestBody CreateIndividualSubcriptionJSONBody

// ReplaceIndividualSubcriptionJSONRequestBody defines body for ReplaceIndividualSubcription for application/json ContentType.
type ReplaceIndividualSubcriptionJSONRequestBody ReplaceIndividualSubcriptionJSONBody
