// Package TS29122NIDD provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package TS29122NIDD

import (
	externalRef0 "magma/feg/gateway/sbi/specs/TS29122CommonData"
)

const (
	OAuth2ClientCredentialsScopes = "oAuth2ClientCredentials.Scopes"
)

// Possible values are - SUCCESS: Success but details not provided - SUCCESS_NEXT_HOP_ACKNOWLEDGED: Successful delivery to the next hop with acknowledgment. - SUCCESS_NEXT_HOP_UNACKNOWLEDGED: Successful delivery to the next hop without acknowledgment - SUCCESS_ACKNOWLEDGED: Reliable delivery was acknowledged by the UE - SUCCESS_UNACKNOWLEDGED: Reliable delivery was not acknowledged by the UE - TRIGGERED: The SCEF triggered the device and is buffering the data. - BUFFERING: The SCEF is buffering the data due to no PDN connection established. - BUFFERING_TEMPORARILY_NOT_REACHABLE: The SCEF has been informed that the UE is temporarily not reachable but is buffering the data - SENDING: The SCEF has forwarded the data, but they may be stored elsewhere - FAILURE: Delivery failure but details not provided - FAILURE_RDS_DISABLED: RDS was disabled - FAILURE_NEXT_HOP: Unsuccessful delivery to the next hop. - FAILURE_TIMEOUT: Unsuccessful delivery due to timeout. - FAILURE_TEMPORARILY_NOT_REACHABLE: The SCEF has been informed that the UE is temporarily not reachable without buffering the data.
type DeliveryStatus interface{}

// GmdNiddDownlinkDataDeliveryNotification defines model for GmdNiddDownlinkDataDeliveryNotification.
type GmdNiddDownlinkDataDeliveryNotification struct {
	// Indicates the group message delivery result.
	GmdResults []GmdResult `json:"gmdResults"`

	// string formatted according to IETF RFC 3986 identifying a referenced resource.
	NiddDownlinkDataTransfer externalRef0.Link `json:"niddDownlinkDataTransfer"`
}

// GmdResult defines model for GmdResult.
type GmdResult interface{}

// NiddConfiguration defines model for NiddConfiguration.
type NiddConfiguration interface{}

// NiddConfigurationPatch defines model for NiddConfigurationPatch.
type NiddConfigurationPatch struct {
	// string with format "date-time" as defined in OpenAPI with "nullable=true" property.
	Duration *externalRef0.DateTimeRm `json:"duration"`

	// Possible values are - WAIT_FOR_UE: wait for the UE to establish the PDN connection  - INDICATE_ERROR: respond with an error cause - SEND_TRIGGER: send a device trigger
	PdnEstablishmentOption *PdnEstablishmentOptionsRm `json:"pdnEstablishmentOption"`

	// Indicates the port configuration that is used for reliable data transfer between specific applications using RDS (as defined in subclause 5.2.4 and 5.2.5 of 3GPP TS 24.250).
	RdsPorts *[]RdsPort `json:"rdsPorts,omitempty"`

	// The reliable data service (as defined in subclause 4.5.15.3 of 3GPP TS 23.682) to indicate if a reliable data service acknowledgment is enabled or not.
	ReliableDataService *bool `json:"reliableDataService"`
}

// NiddConfigurationStatusNotification defines model for NiddConfigurationStatusNotification.
type NiddConfigurationStatusNotification interface{}

// NiddDownlinkDataDeliveryFailure defines model for NiddDownlinkDataDeliveryFailure.
type NiddDownlinkDataDeliveryFailure struct {
	ProblemDetail externalRef0.ProblemDetails `json:"problemDetail"`

	// string with format "date-time" as defined in OpenAPI.
	RequestedRetransmissionTime *externalRef0.DateTime `json:"requestedRetransmissionTime,omitempty"`
}

// NiddDownlinkDataDeliveryStatusNotification defines model for NiddDownlinkDataDeliveryStatusNotification.
type NiddDownlinkDataDeliveryStatusNotification struct {
	// Possible values are - SUCCESS: Success but details not provided - SUCCESS_NEXT_HOP_ACKNOWLEDGED: Successful delivery to the next hop with acknowledgment. - SUCCESS_NEXT_HOP_UNACKNOWLEDGED: Successful delivery to the next hop without acknowledgment - SUCCESS_ACKNOWLEDGED: Reliable delivery was acknowledged by the UE - SUCCESS_UNACKNOWLEDGED: Reliable delivery was not acknowledged by the UE - TRIGGERED: The SCEF triggered the device and is buffering the data. - BUFFERING: The SCEF is buffering the data due to no PDN connection established. - BUFFERING_TEMPORARILY_NOT_REACHABLE: The SCEF has been informed that the UE is temporarily not reachable but is buffering the data - SENDING: The SCEF has forwarded the data, but they may be stored elsewhere - FAILURE: Delivery failure but details not provided - FAILURE_RDS_DISABLED: RDS was disabled - FAILURE_NEXT_HOP: Unsuccessful delivery to the next hop. - FAILURE_TIMEOUT: Unsuccessful delivery due to timeout. - FAILURE_TEMPORARILY_NOT_REACHABLE: The SCEF has been informed that the UE is temporarily not reachable without buffering the data.
	DeliveryStatus DeliveryStatus `json:"deliveryStatus"`

	// string formatted according to IETF RFC 3986 identifying a referenced resource.
	NiddDownlinkDataTransfer externalRef0.Link `json:"niddDownlinkDataTransfer"`

	// string with format "date-time" as defined in OpenAPI.
	RequestedRetransmissionTime *externalRef0.DateTime `json:"requestedRetransmissionTime,omitempty"`
}

// NiddDownlinkDataTransfer defines model for NiddDownlinkDataTransfer.
type NiddDownlinkDataTransfer interface{}

// Possible values are - ACTIVE: The NIDD configuration is active. - TERMINATED_UE_NOT_AUTHORIZED: The NIDD configuration was terminated because the UE´s authorisation was revoked. - TERMINATED: The NIDD configuration was terminated.
type NiddStatus interface{}

// NiddUplinkDataNotification defines model for NiddUplinkDataNotification.
type NiddUplinkDataNotification interface{}

// Possible values are - WAIT_FOR_UE: wait for the UE to establish the PDN connection  - INDICATE_ERROR: respond with an error cause - SEND_TRIGGER: send a device trigger
type PdnEstablishmentOptions interface{}

// Possible values are - WAIT_FOR_UE: wait for the UE to establish the PDN connection  - INDICATE_ERROR: respond with an error cause - SEND_TRIGGER: send a device trigger
type PdnEstablishmentOptionsRm interface{}

// RdsPort defines model for RdsPort.
type RdsPort struct {
	// Unsigned integer with valid values between 0 and 65535.
	PortSCEF externalRef0.Port `json:"portSCEF"`

	// Unsigned integer with valid values between 0 and 65535.
	PortUE externalRef0.Port `json:"portUE"`
}

// PostScsAsIdConfigurationsJSONBody defines parameters for PostScsAsIdConfigurations.
type PostScsAsIdConfigurationsJSONBody NiddConfiguration

// PostScsAsIdConfigurationsConfigurationIdDownlinkDataDeliveriesJSONBody defines parameters for PostScsAsIdConfigurationsConfigurationIdDownlinkDataDeliveries.
type PostScsAsIdConfigurationsConfigurationIdDownlinkDataDeliveriesJSONBody NiddDownlinkDataTransfer

// PutScsAsIdConfigurationsConfigurationIdDownlinkDataDeliveriesDownlinkDataDeliveryIdJSONBody defines parameters for PutScsAsIdConfigurationsConfigurationIdDownlinkDataDeliveriesDownlinkDataDeliveryId.
type PutScsAsIdConfigurationsConfigurationIdDownlinkDataDeliveriesDownlinkDataDeliveryIdJSONBody NiddDownlinkDataTransfer

// PostScsAsIdConfigurationsJSONRequestBody defines body for PostScsAsIdConfigurations for application/json ContentType.
type PostScsAsIdConfigurationsJSONRequestBody PostScsAsIdConfigurationsJSONBody

// PostScsAsIdConfigurationsConfigurationIdDownlinkDataDeliveriesJSONRequestBody defines body for PostScsAsIdConfigurationsConfigurationIdDownlinkDataDeliveries for application/json ContentType.
type PostScsAsIdConfigurationsConfigurationIdDownlinkDataDeliveriesJSONRequestBody PostScsAsIdConfigurationsConfigurationIdDownlinkDataDeliveriesJSONBody

// PutScsAsIdConfigurationsConfigurationIdDownlinkDataDeliveriesDownlinkDataDeliveryIdJSONRequestBody defines body for PutScsAsIdConfigurationsConfigurationIdDownlinkDataDeliveriesDownlinkDataDeliveryId for application/json ContentType.
type PutScsAsIdConfigurationsConfigurationIdDownlinkDataDeliveriesDownlinkDataDeliveryIdJSONRequestBody PutScsAsIdConfigurationsConfigurationIdDownlinkDataDeliveriesDownlinkDataDeliveryIdJSONBody
