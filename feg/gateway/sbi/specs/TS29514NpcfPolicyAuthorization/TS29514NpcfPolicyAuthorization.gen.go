// Package TS29514NpcfPolicyAuthorization provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package TS29514NpcfPolicyAuthorization

import (
	"encoding/json"
	"fmt"

	externalRef0 "magma/feg/gateway/sbi/specs/TS29122CommonData"
	externalRef1 "magma/feg/gateway/sbi/specs/TS29571CommonData"
)

const (
	OAuth2ClientCredentialsScopes = "oAuth2ClientCredentials.Scopes"
)

// Contains an AF application identifier.
type AfAppId string

// AfEvent defines model for AfEvent.
type AfEvent interface{}

// describes the event information delivered in the notification
type AfEventNotification struct {
	Event AfEvent  `json:"event"`
	Flows *[]Flows `json:"flows,omitempty"`
}

// describes the event information delivered in the subscription
type AfEventSubscription struct {
	Event       AfEvent        `json:"event"`
	NotifMethod *AfNotifMethod `json:"notifMethod,omitempty"`
}

// AfNotifMethod defines model for AfNotifMethod.
type AfNotifMethod interface{}

// describes the event information delivered in the subscription
type AfRoutingRequirement struct {
	AppReloc    *bool                           `json:"appReloc,omitempty"`
	RouteToLocs *[]externalRef1.RouteToLocation `json:"routeToLocs,omitempty"`

	// describes explicitly the route to an Application location
	SpVal        *SpatialValidity             `json:"spVal,omitempty"`
	TempVals     *[]TemporalValidity          `json:"tempVals,omitempty"`
	UpPathChgSub *externalRef0.UpPathChgEvent `json:"upPathChgSub"`
}

// this data type is defined in the same way as the AfRoutingRequirement data type, but with the OpenAPI nullable property set to true and the spVal and tempVals attributes defined as removable.
type AfRoutingRequirementRm struct {
	AppReloc    *bool                           `json:"appReloc,omitempty"`
	RouteToLocs *[]externalRef1.RouteToLocation `json:"routeToLocs"`

	// this data type is defined in the same way as the SpatialValidity data type, but with the OpenAPI nullable property set to true
	SpVal        *SpatialValidityRm           `json:"spVal"`
	TempVals     *[]TemporalValidity          `json:"tempVals"`
	UpPathChgSub *externalRef0.UpPathChgEvent `json:"upPathChgSub"`
}

// describes the address of the access network gateway control node
type AnGwAddress interface{}

// Represents an Individual Application Session Context resource.
type AppSessionContext struct {
	// Identifies the service requirements of an Individual Application Session Context.
	AscReqData *AppSessionContextReqData `json:"ascReqData,omitempty"`

	// Describes the authorization data of an Individual Application Session Context created by the PCF.
	AscRespData *AppSessionContextRespData `json:"ascRespData,omitempty"`

	// describes the notification of a matched event
	EvsNotif *EventsNotification `json:"evsNotif,omitempty"`
}

// Identifies the service requirements of an Individual Application Session Context.
type AppSessionContextReqData interface{}

// Describes the authorization data of an Individual Application Session Context created by the PCF.
type AppSessionContextRespData struct {
	ServAuthInfo *ServAuthInfo                   `json:"servAuthInfo,omitempty"`
	SuppFeat     *externalRef1.SupportedFeatures `json:"suppFeat,omitempty"`
}

// Identifies the modifications to an Individual Application Session Context and may include the modifications to the sub-resource Events Subscription.
type AppSessionContextUpdateData struct {
	// Contains an AF application identifier.
	AfAppId *AfAppId `json:"afAppId,omitempty"`

	// this data type is defined in the same way as the AfRoutingRequirement data type, but with the OpenAPI nullable property set to true and the spVal and tempVals attributes defined as removable.
	AfRoutReq *AfRoutingRequirementRm `json:"afRoutReq"`

	// Contains an identity of an application service provider.
	AspId *AspId `json:"aspId,omitempty"`

	// string identifying a BDT Reference ID as defined in subclause 5.3.3 of 3GPP TS 29.154.
	BdtRefId *externalRef0.BdtReferenceId `json:"bdtRefId,omitempty"`

	// this data type is defined in the same way as the EventsSubscReqData data type, but with the OpenAPI nullable property set to true.
	EvSubsc       *EventsSubscReqDataRm                      `json:"evSubsc"`
	MedComponents *AppSessionContextUpdateData_MedComponents `json:"medComponents,omitempty"`

	// indication of MPS service request
	MpsId   *string         `json:"mpsId,omitempty"`
	ResPrio *ReservPriority `json:"resPrio,omitempty"`

	// Contains an identity of a sponsor.
	SponId     *SponId           `json:"sponId,omitempty"`
	SponStatus *SponsoringStatus `json:"sponStatus,omitempty"`
}

// AppSessionContextUpdateData_MedComponents defines model for AppSessionContextUpdateData.MedComponents.
type AppSessionContextUpdateData_MedComponents struct {
	AdditionalProperties map[string]MediaComponentRm `json:"-"`
}

// Contains an identity of an application service provider.
type AspId string

// Contains codec related information.
type CodecData string

// Represents the content version of some content.
type ContentVersion int

// Identifies an Ethernet flow
type EthFlowDescription struct {
	DestMacAddr *externalRef1.MacAddr48 `json:"destMacAddr,omitempty"`
	EthType     string                  `json:"ethType"`

	// Defines a packet filter of an IP flow.
	FDesc *FlowDescription `json:"fDesc,omitempty"`

	// Possible values are - DOWNLINK: The corresponding filter applies for traffic to the UE. - UPLINK: The corresponding filter applies for traffic from the UE. - BIDIRECTIONAL: The corresponding filter applies for traffic both to and from the UE. - UNSPECIFIED: The corresponding filter applies for traffic to the UE (downlink), but has no specific direction declared. The service data flow detection shall apply the filter for uplink traffic as if the filter was bidirectional. The PCF shall not use the value UNSPECIFIED in filters created by the network in NW-initiated procedures. The PCF shall only include the value UNSPECIFIED in filters in UE-initiated procedures if the same value is received from the SMF.
	FDir          *externalRef0.FlowDirection `json:"fDir,omitempty"`
	SourceMacAddr *externalRef1.MacAddr48     `json:"sourceMacAddr,omitempty"`
	VlanTags      *[]string                   `json:"vlanTags,omitempty"`
}

// describes the notification of a matched event
type EventsNotification struct {
	AccessType *externalRef1.AccessType `json:"accessType,omitempty"`

	// describes the address of the access network gateway control node
	AnGwAddr                  *AnGwAddress                   `json:"anGwAddr,omitempty"`
	EvNotifs                  []AfEventNotification          `json:"evNotifs"`
	EvSubsUri                 externalRef1.Uri               `json:"evSubsUri"`
	FailedResourcAllocReports *[]ResourcesAllocationInfo     `json:"failedResourcAllocReports,omitempty"`
	PlmnId                    *externalRef1.PlmnId           `json:"plmnId,omitempty"`
	QncReports                *[]QosNotificationControlInfo  `json:"qncReports,omitempty"`
	RatType                   *externalRef1.RatType          `json:"ratType,omitempty"`
	UsgRep                    *externalRef0.AccumulatedUsage `json:"usgRep,omitempty"`
}

// Identifies the events the application subscribes to within an Events Subscription sub-resource data. It may contain the notification of the already met events
type EventsSubscPutData interface{}

// Identifies the events the application subscribes to.
type EventsSubscReqData struct {
	Events   []AfEventSubscription        `json:"events"`
	NotifUri *externalRef1.Uri            `json:"notifUri,omitempty"`
	UsgThres *externalRef0.UsageThreshold `json:"usgThres,omitempty"`
}

// this data type is defined in the same way as the EventsSubscReqData data type, but with the OpenAPI nullable property set to true.
type EventsSubscReqDataRm struct {
	Events   []AfEventSubscription          `json:"events"`
	NotifUri *externalRef1.Uri              `json:"notifUri,omitempty"`
	UsgThres *externalRef0.UsageThresholdRm `json:"usgThres"`
}

// Defines a packet filter of an IP flow.
type FlowDescription string

// FlowStatus defines model for FlowStatus.
type FlowStatus interface{}

// FlowUsage defines model for FlowUsage.
type FlowUsage interface{}

// Identifies the flows
type Flows struct {
	ContVers *[]ContentVersion `json:"contVers,omitempty"`
	FNums    *[]int            `json:"fNums,omitempty"`
	MedCompN int               `json:"medCompN"`
}

// Identifies a media component.
type MediaComponent struct {
	// Contains an AF application identifier.
	AfAppId *AfAppId `json:"afAppId,omitempty"`

	// describes the event information delivered in the subscription
	AfRoutReq *AfRoutingRequirement `json:"afRoutReq,omitempty"`
	Codecs    *[]CodecData          `json:"codecs,omitempty"`

	// Represents the content version of some content.
	ContVer     *ContentVersion             `json:"contVer,omitempty"`
	FStatus     *FlowStatus                 `json:"fStatus,omitempty"`
	MarBwDl     *externalRef1.BitRate       `json:"marBwDl,omitempty"`
	MarBwUl     *externalRef1.BitRate       `json:"marBwUl,omitempty"`
	MedCompN    int                         `json:"medCompN"`
	MedSubComps *MediaComponent_MedSubComps `json:"medSubComps,omitempty"`
	MedType     *MediaType                  `json:"medType,omitempty"`
	MirBwDl     *externalRef1.BitRate       `json:"mirBwDl,omitempty"`
	MirBwUl     *externalRef1.BitRate       `json:"mirBwUl,omitempty"`
	ResPrio     *ReservPriority             `json:"resPrio,omitempty"`
}

// MediaComponent_MedSubComps defines model for MediaComponent.MedSubComps.
type MediaComponent_MedSubComps struct {
	AdditionalProperties map[string]MediaSubComponent `json:"-"`
}

// MediaComponentResourcesStatus defines model for MediaComponentResourcesStatus.
type MediaComponentResourcesStatus interface{}

// This data type is defined in the same way as the MediaComponent data type, but with the OpenAPI nullable property set to true
type MediaComponentRm struct {
	// Contains an AF application identifier.
	AfAppId *AfAppId `json:"afAppId,omitempty"`

	// this data type is defined in the same way as the AfRoutingRequirement data type, but with the OpenAPI nullable property set to true and the spVal and tempVals attributes defined as removable.
	AfRoutReq *AfRoutingRequirementRm `json:"afRoutReq"`
	Codecs    *[]CodecData            `json:"codecs,omitempty"`

	// Represents the content version of some content.
	ContVer     *ContentVersion               `json:"contVer,omitempty"`
	FStatus     *FlowStatus                   `json:"fStatus,omitempty"`
	MarBwDl     *externalRef1.BitRateRm       `json:"marBwDl"`
	MarBwUl     *externalRef1.BitRateRm       `json:"marBwUl"`
	MedCompN    int                           `json:"medCompN"`
	MedSubComps *MediaComponentRm_MedSubComps `json:"medSubComps,omitempty"`
	MedType     *MediaType                    `json:"medType,omitempty"`
	MirBwDl     *externalRef1.BitRateRm       `json:"mirBwDl"`
	MirBwUl     *externalRef1.BitRateRm       `json:"mirBwUl"`
	ResPrio     *ReservPriority               `json:"resPrio,omitempty"`
}

// MediaComponentRm_MedSubComps defines model for MediaComponentRm.MedSubComps.
type MediaComponentRm_MedSubComps struct {
	AdditionalProperties map[string]MediaSubComponentRm `json:"-"`
}

// Identifies a media subcomponent
type MediaSubComponent struct {
	EthfDescs *[]EthFlowDescription `json:"ethfDescs,omitempty"`
	FDescs    *[]FlowDescription    `json:"fDescs,omitempty"`
	FNum      int                   `json:"fNum"`
	FStatus   *FlowStatus           `json:"fStatus,omitempty"`
	FlowUsage *FlowUsage            `json:"flowUsage,omitempty"`
	MarBwDl   *externalRef1.BitRate `json:"marBwDl,omitempty"`
	MarBwUl   *externalRef1.BitRate `json:"marBwUl,omitempty"`

	// 2-octet string, where each octet is encoded in hexadecimal representation. The first octet contains the IPv4 Type-of-Service or the IPv6 Traffic-Class field and the second octet contains the ToS/Traffic Class mask field.
	TosTrCl *TosTrafficClass `json:"tosTrCl,omitempty"`
}

// This data type is defined in the same way as the MediaSubComponent data type, but with the OpenAPI nullable property set to true. Removable attributes marBwDl and marBwUl are defined with the corresponding removable data type.
type MediaSubComponentRm struct {
	EthfDescs *[]EthFlowDescription   `json:"ethfDescs"`
	FDescs    *[]FlowDescription      `json:"fDescs"`
	FNum      int                     `json:"fNum"`
	FStatus   *FlowStatus             `json:"fStatus,omitempty"`
	FlowUsage *FlowUsage              `json:"flowUsage,omitempty"`
	MarBwDl   *externalRef1.BitRateRm `json:"marBwDl"`
	MarBwUl   *externalRef1.BitRateRm `json:"marBwUl"`

	// this data type is defined in the same way as the TosTrafficClass data type, but with the OpenAPI nullable property set to true
	TosTrCl *TosTrafficClassRm `json:"tosTrCl"`
}

// MediaType defines model for MediaType.
type MediaType interface{}

// QosNotifType defines model for QosNotifType.
type QosNotifType interface{}

// Indicates whether the QoS targets for a GRB flow are not  guaranteed or guaranteed again
type QosNotificationControlInfo struct {
	Flows     *[]Flows     `json:"flows,omitempty"`
	NotifType QosNotifType `json:"notifType"`
}

// ReservPriority defines model for ReservPriority.
type ReservPriority interface{}

// describes the status of the PCC rule(s) related to certain media components.
type ResourcesAllocationInfo struct {
	Flows           *[]Flows                      `json:"flows,omitempty"`
	McResourcStatus MediaComponentResourcesStatus `json:"mcResourcStatus"`
}

// ServAuthInfo defines model for ServAuthInfo.
type ServAuthInfo interface{}

// describes explicitly the route to an Application location
type SpatialValidity struct {
	PresenceInfoList SpatialValidity_PresenceInfoList `json:"presenceInfoList"`
}

// SpatialValidity_PresenceInfoList defines model for SpatialValidity.PresenceInfoList.
type SpatialValidity_PresenceInfoList struct {
	AdditionalProperties map[string]externalRef1.PresenceInfo `json:"-"`
}

// this data type is defined in the same way as the SpatialValidity data type, but with the OpenAPI nullable property set to true
type SpatialValidityRm struct {
	PresenceInfoList SpatialValidityRm_PresenceInfoList `json:"presenceInfoList"`
}

// SpatialValidityRm_PresenceInfoList defines model for SpatialValidityRm.PresenceInfoList.
type SpatialValidityRm_PresenceInfoList struct {
	AdditionalProperties map[string]externalRef1.PresenceInfo `json:"-"`
}

// Contains an identity of a sponsor.
type SponId string

// SponsoringStatus defines model for SponsoringStatus.
type SponsoringStatus interface{}

// Indicates the time interval(s) during which the AF request is to be applied
type TemporalValidity struct {
	StartTime *externalRef1.DateTime `json:"startTime,omitempty"`
	StopTime  *externalRef1.DateTime `json:"stopTime,omitempty"`
}

// TerminationCause defines model for TerminationCause.
type TerminationCause interface{}

// indicates the cause for requesting the deletion of the Individual Application Session Context resource
type TerminationInfo struct {
	ResUri    externalRef1.Uri `json:"resUri"`
	TermCause TerminationCause `json:"termCause"`
}

// 2-octet string, where each octet is encoded in hexadecimal representation. The first octet contains the IPv4 Type-of-Service or the IPv6 Traffic-Class field and the second octet contains the ToS/Traffic Class mask field.
type TosTrafficClass string

// this data type is defined in the same way as the TosTrafficClass data type, but with the OpenAPI nullable property set to true
type TosTrafficClassRm string

// PostAppSessionsJSONBody defines parameters for PostAppSessions.
type PostAppSessionsJSONBody AppSessionContext

// DeleteAppSessionJSONBody defines parameters for DeleteAppSession.
type DeleteAppSessionJSONBody EventsSubscReqData

// UpdateEventsSubscJSONBody defines parameters for UpdateEventsSubsc.
type UpdateEventsSubscJSONBody EventsSubscReqData

// PostAppSessionsJSONRequestBody defines body for PostAppSessions for application/json ContentType.
type PostAppSessionsJSONRequestBody PostAppSessionsJSONBody

// DeleteAppSessionJSONRequestBody defines body for DeleteAppSession for application/json ContentType.
type DeleteAppSessionJSONRequestBody DeleteAppSessionJSONBody

// UpdateEventsSubscJSONRequestBody defines body for UpdateEventsSubsc for application/json ContentType.
type UpdateEventsSubscJSONRequestBody UpdateEventsSubscJSONBody

// Getter for additional properties for AppSessionContextUpdateData_MedComponents. Returns the specified
// element and whether it was found
func (a AppSessionContextUpdateData_MedComponents) Get(fieldName string) (value MediaComponentRm, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for AppSessionContextUpdateData_MedComponents
func (a *AppSessionContextUpdateData_MedComponents) Set(fieldName string, value MediaComponentRm) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]MediaComponentRm)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for AppSessionContextUpdateData_MedComponents to handle AdditionalProperties
func (a *AppSessionContextUpdateData_MedComponents) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]MediaComponentRm)
		for fieldName, fieldBuf := range object {
			var fieldVal MediaComponentRm
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for AppSessionContextUpdateData_MedComponents to handle AdditionalProperties
func (a AppSessionContextUpdateData_MedComponents) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for MediaComponent_MedSubComps. Returns the specified
// element and whether it was found
func (a MediaComponent_MedSubComps) Get(fieldName string) (value MediaSubComponent, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for MediaComponent_MedSubComps
func (a *MediaComponent_MedSubComps) Set(fieldName string, value MediaSubComponent) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]MediaSubComponent)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for MediaComponent_MedSubComps to handle AdditionalProperties
func (a *MediaComponent_MedSubComps) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]MediaSubComponent)
		for fieldName, fieldBuf := range object {
			var fieldVal MediaSubComponent
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for MediaComponent_MedSubComps to handle AdditionalProperties
func (a MediaComponent_MedSubComps) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for MediaComponentRm_MedSubComps. Returns the specified
// element and whether it was found
func (a MediaComponentRm_MedSubComps) Get(fieldName string) (value MediaSubComponentRm, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for MediaComponentRm_MedSubComps
func (a *MediaComponentRm_MedSubComps) Set(fieldName string, value MediaSubComponentRm) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]MediaSubComponentRm)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for MediaComponentRm_MedSubComps to handle AdditionalProperties
func (a *MediaComponentRm_MedSubComps) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]MediaSubComponentRm)
		for fieldName, fieldBuf := range object {
			var fieldVal MediaSubComponentRm
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for MediaComponentRm_MedSubComps to handle AdditionalProperties
func (a MediaComponentRm_MedSubComps) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for SpatialValidity_PresenceInfoList. Returns the specified
// element and whether it was found
func (a SpatialValidity_PresenceInfoList) Get(fieldName string) (value externalRef1.PresenceInfo, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for SpatialValidity_PresenceInfoList
func (a *SpatialValidity_PresenceInfoList) Set(fieldName string, value externalRef1.PresenceInfo) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]externalRef1.PresenceInfo)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for SpatialValidity_PresenceInfoList to handle AdditionalProperties
func (a *SpatialValidity_PresenceInfoList) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]externalRef1.PresenceInfo)
		for fieldName, fieldBuf := range object {
			var fieldVal externalRef1.PresenceInfo
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for SpatialValidity_PresenceInfoList to handle AdditionalProperties
func (a SpatialValidity_PresenceInfoList) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for SpatialValidityRm_PresenceInfoList. Returns the specified
// element and whether it was found
func (a SpatialValidityRm_PresenceInfoList) Get(fieldName string) (value externalRef1.PresenceInfo, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for SpatialValidityRm_PresenceInfoList
func (a *SpatialValidityRm_PresenceInfoList) Set(fieldName string, value externalRef1.PresenceInfo) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]externalRef1.PresenceInfo)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for SpatialValidityRm_PresenceInfoList to handle AdditionalProperties
func (a *SpatialValidityRm_PresenceInfoList) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]externalRef1.PresenceInfo)
		for fieldName, fieldBuf := range object {
			var fieldVal externalRef1.PresenceInfo
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for SpatialValidityRm_PresenceInfoList to handle AdditionalProperties
func (a SpatialValidityRm_PresenceInfoList) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}
