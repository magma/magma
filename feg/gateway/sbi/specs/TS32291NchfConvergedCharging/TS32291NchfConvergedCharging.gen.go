// Package TS32291NchfConvergedCharging provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package TS32291NchfConvergedCharging

import (
	"encoding/json"
	"fmt"

	externalRef0 "magma/feg/gateway/sbi/specs/TS29122CommonData"
	externalRef1 "magma/feg/gateway/sbi/specs/TS29512NpcfSMPolicyControl"
	externalRef2 "magma/feg/gateway/sbi/specs/TS29571CommonData"
)

// N3GPPPSDataOffStatus defines model for 3GPPPSDataOffStatus.
type N3GPPPSDataOffStatus interface{}

// ChargingCharacteristicsSelectionMode defines model for ChargingCharacteristicsSelectionMode.
type ChargingCharacteristicsSelectionMode interface{}

// ChargingDataRequest defines model for ChargingDataRequest.
type ChargingDataRequest struct {
	ChargingId                    *externalRef2.ChargingId       `json:"chargingId,omitempty"`
	InvocationSequenceNumber      externalRef2.Uint32            `json:"invocationSequenceNumber"`
	InvocationTimeStamp           externalRef2.DateTime          `json:"invocationTimeStamp"`
	MultipleUnitUsage             *[]MultipleUnitUsage           `json:"multipleUnitUsage,omitempty"`
	NfConsumerIdentification      *NFIdentification              `json:"nfConsumerIdentification,omitempty"`
	NotifyUri                     *externalRef2.Uri              `json:"notifyUri,omitempty"`
	OneTimeEvent                  *bool                          `json:"oneTimeEvent,omitempty"`
	OneTimeEventType              *OneTimeEventType              `json:"oneTimeEventType,omitempty"`
	PDUSessionChargingInformation *PDUSessionChargingInformation `json:"pDUSessionChargingInformation,omitempty"`
	RoamingQBCInformation         *RoamingQBCInformation         `json:"roamingQBCInformation,omitempty"`
	SMSChargingInformation        *SMSChargingInformation        `json:"sMSChargingInformation,omitempty"`
	ServiceSpecificationInfo      *string                        `json:"serviceSpecificationInfo,omitempty"`
	SubscriberIdentifier          *externalRef2.Supi             `json:"subscriberIdentifier,omitempty"`
	Triggers                      *[]Trigger                     `json:"triggers,omitempty"`
}

// ChargingDataResponse defines model for ChargingDataResponse.
type ChargingDataResponse struct {
	InvocationResult              *InvocationResult              `json:"invocationResult,omitempty"`
	InvocationSequenceNumber      externalRef2.Uint32            `json:"invocationSequenceNumber"`
	InvocationTimeStamp           *externalRef2.DateTime         `json:"invocationTimeStamp,omitempty"`
	MultipleUnitInformation       *[]MultipleUnitInformation     `json:"multipleUnitInformation,omitempty"`
	PDUSessionChargingInformation *PDUSessionChargingInformation `json:"pDUSessionChargingInformation,omitempty"`
	RoamingQBCInformation         *RoamingQBCInformation         `json:"roamingQBCInformation,omitempty"`
	SessionFailover               *SessionFailover               `json:"sessionFailover,omitempty"`
	Triggers                      *[]Trigger                     `json:"triggers,omitempty"`
}

// ChargingNotifyRequest defines model for ChargingNotifyRequest.
type ChargingNotifyRequest struct {
	NotificationType       NotificationType          `json:"notificationType"`
	ReauthorizationDetails *[]ReauthorizationDetails `json:"reauthorizationDetails,omitempty"`
}

// ChargingNotifyResponse defines model for ChargingNotifyResponse.
type ChargingNotifyResponse struct {
	InvocationResult *InvocationResult `json:"invocationResult,omitempty"`
}

// ClassIdentifier defines model for ClassIdentifier.
type ClassIdentifier interface{}

// DeliveryReportRequested defines model for DeliveryReportRequested.
type DeliveryReportRequested interface{}

// Diagnostics defines model for Diagnostics.
type Diagnostics int

// FailureHandling defines model for FailureHandling.
type FailureHandling interface{}

// FinalUnitIndication defines model for FinalUnitIndication.
type FinalUnitIndication struct {
	FilterId              *string                      `json:"filterId,omitempty"`
	FinalUnitAction       externalRef0.FinalUnitAction `json:"finalUnitAction"`
	RedirectServer        *RedirectServer              `json:"redirectServer,omitempty"`
	RestrictionFilterRule *IPFilterRule                `json:"restrictionFilterRule,omitempty"`
}

// GrantedUnit defines model for GrantedUnit.
type GrantedUnit struct {
	DownlinkVolume       *externalRef2.Uint64   `json:"downlinkVolume,omitempty"`
	ServiceSpecificUnits *externalRef2.Uint64   `json:"serviceSpecificUnits,omitempty"`
	TariffTimeChange     *externalRef2.DateTime `json:"tariffTimeChange,omitempty"`
	Time                 *externalRef2.Uint32   `json:"time,omitempty"`
	TotalVolume          *externalRef2.Uint64   `json:"totalVolume,omitempty"`
	UplinkVolume         *externalRef2.Uint64   `json:"uplinkVolume,omitempty"`
}

// IPFilterRule defines model for IPFilterRule.
type IPFilterRule string

// InterfaceType defines model for InterfaceType.
type InterfaceType interface{}

// InvocationResult defines model for InvocationResult.
type InvocationResult struct {
	Error           *externalRef2.ProblemDetails `json:"error,omitempty"`
	FailureHandling *FailureHandling             `json:"failureHandling,omitempty"`
}

// MessageClass defines model for MessageClass.
type MessageClass struct {
	ClassIdentifier *ClassIdentifier `json:"classIdentifier,omitempty"`
	TokenText       *string          `json:"tokenText,omitempty"`
}

// MultipleQFIcontainer defines model for MultipleQFIcontainer.
type MultipleQFIcontainer struct {
	LocalSequenceNumber     int                      `json:"localSequenceNumber"`
	QFIContainerInformation *QFIContainerInformation `json:"qFIContainerInformation,omitempty"`
	Time                    *externalRef2.Uint32     `json:"time,omitempty"`
	TotalVolume             *externalRef2.Uint64     `json:"totalVolume,omitempty"`
	TriggerTimestamp        *externalRef2.DateTime   `json:"triggerTimestamp,omitempty"`
	Triggers                *[]Trigger               `json:"triggers,omitempty"`
	UplinkVolume            *externalRef2.Uint64     `json:"uplinkVolume,omitempty"`
}

// MultipleUnitInformation defines model for MultipleUnitInformation.
type MultipleUnitInformation struct {
	FinalUnitIndication  *FinalUnitIndication       `json:"finalUnitIndication,omitempty"`
	GrantedUnit          *GrantedUnit               `json:"grantedUnit,omitempty"`
	QuotaHoldingTime     *externalRef2.DurationSec  `json:"quotaHoldingTime,omitempty"`
	RatingGroup          externalRef2.RatingGroup   `json:"ratingGroup"`
	ResultCode           *ResultCode                `json:"resultCode,omitempty"`
	TimeQuotaThreshold   *int                       `json:"timeQuotaThreshold,omitempty"`
	Triggers             *[]Trigger                 `json:"triggers,omitempty"`
	UPFID                *externalRef2.NfInstanceId `json:"uPFID,omitempty"`
	UnitQuotaThreshold   *int                       `json:"unitQuotaThreshold,omitempty"`
	ValidityTime         *externalRef2.DurationSec  `json:"validityTime,omitempty"`
	VolumeQuotaThreshold *externalRef2.Uint64       `json:"volumeQuotaThreshold,omitempty"`
}

// MultipleUnitUsage defines model for MultipleUnitUsage.
type MultipleUnitUsage struct {
	RatingGroup       externalRef2.RatingGroup   `json:"ratingGroup"`
	RequestedUnit     *RequestedUnit             `json:"requestedUnit,omitempty"`
	UPFID             *externalRef2.NfInstanceId `json:"uPFID,omitempty"`
	UsedUnitContainer *[]UsedUnitContainer       `json:"usedUnitContainer,omitempty"`
}

// NFIdentification defines model for NFIdentification.
type NFIdentification struct {
	NFFqdn            *string                    `json:"nFFqdn,omitempty"`
	NFIPv4Address     *externalRef2.Ipv4Addr     `json:"nFIPv4Address,omitempty"`
	NFIPv6Address     *externalRef2.Ipv6Addr     `json:"nFIPv6Address,omitempty"`
	NFName            *externalRef2.NfInstanceId `json:"nFName,omitempty"`
	NFPLMNID          *externalRef2.PlmnId       `json:"nFPLMNID,omitempty"`
	NodeFunctionality NodeFunctionality          `json:"nodeFunctionality"`
}

// NetworkSlicingInfo defines model for NetworkSlicingInfo.
type NetworkSlicingInfo struct {
	SNSSAI externalRef2.Snssai `json:"sNSSAI"`
}

// NodeFunctionality defines model for NodeFunctionality.
type NodeFunctionality interface{}

// NotificationType defines model for NotificationType.
type NotificationType interface{}

// OriginatorInfo defines model for OriginatorInfo.
type OriginatorInfo struct {
	OriginatorGPSI            *externalRef2.Gpsi `json:"originatorGPSI,omitempty"`
	OriginatorOtherAddress    *SMAddressInfo     `json:"originatorOtherAddress,omitempty"`
	OriginatorReceivedAddress *SMAddressInfo     `json:"originatorReceivedAddress,omitempty"`
	OriginatorSCCPAddress     *string            `json:"originatorSCCPAddress,omitempty"`
	OriginatorSUPI            *externalRef2.Supi `json:"originatorSUPI,omitempty"`
	SMOriginatorInterface     *SMInterface       `json:"sMOriginatorInterface,omitempty"`
	SMOriginatorProtocolId    *string            `json:"sMOriginatorProtocolId,omitempty"`
}

// PDUAddress defines model for PDUAddress.
type PDUAddress struct {
	IPv4dynamicAddressFlag   *bool                  `json:"iPv4dynamicAddressFlag,omitempty"`
	IPv6dynamicPrefixFlag    *bool                  `json:"iPv6dynamicPrefixFlag,omitempty"`
	PduAddressprefixlength   *int                   `json:"pduAddressprefixlength,omitempty"`
	PduIPv4Address           *externalRef2.Ipv4Addr `json:"pduIPv4Address,omitempty"`
	PduIPv6AddresswithPrefix *externalRef2.Ipv6Addr `json:"pduIPv6AddresswithPrefix,omitempty"`
}

// PDUContainerInformation defines model for PDUContainerInformation.
type PDUContainerInformation struct {
	N3gppPSDataOffStatus               *N3GPPPSDataOffStatus                                     `json:"3gppPSDataOffStatus,omitempty"`
	AFCorrelationInformation           *string                                                   `json:"aFCorrelationInformation,omitempty"`
	ApplicationserviceProviderIdentity *string                                                   `json:"applicationserviceProviderIdentity,omitempty"`
	ChargingRuleBaseName               *string                                                   `json:"chargingRuleBaseName,omitempty"`
	PresenceReportingAreaInformation   *PDUContainerInformation_PresenceReportingAreaInformation `json:"presenceReportingAreaInformation,omitempty"`
	QoSInformation                     *externalRef1.QosData                                     `json:"qoSInformation"`
	RATType                            *externalRef2.RatType                                     `json:"rATType,omitempty"`
	ServingNodeID                      *[]ServingNetworkFunctionID                               `json:"servingNodeID,omitempty"`
	SponsorIdentity                    *string                                                   `json:"sponsorIdentity,omitempty"`
	TimeofFirstUsage                   *externalRef2.DateTime                                    `json:"timeofFirstUsage,omitempty"`
	TimeofLastUsage                    *externalRef2.DateTime                                    `json:"timeofLastUsage,omitempty"`
	UetimeZone                         *externalRef2.TimeZone                                    `json:"uetimeZone,omitempty"`
	UserLocationInformation            *externalRef2.UserLocation                                `json:"userLocationInformation,omitempty"`
}

// PDUContainerInformation_PresenceReportingAreaInformation defines model for PDUContainerInformation.PresenceReportingAreaInformation.
type PDUContainerInformation_PresenceReportingAreaInformation struct {
	AdditionalProperties map[string]externalRef2.PresenceInfo `json:"-"`
}

// PDUSessionChargingInformation defines model for PDUSessionChargingInformation.
type PDUSessionChargingInformation struct {
	ChargingId                       *externalRef2.ChargingId                                        `json:"chargingId,omitempty"`
	PduSessionInformation            PDUSessionInformation                                           `json:"pduSessionInformation"`
	PresenceReportingAreaInformation *PDUSessionChargingInformation_PresenceReportingAreaInformation `json:"presenceReportingAreaInformation,omitempty"`
	RANSecondaryRATUsageReport       *RANSecondaryRATUsageReport                                     `json:"rANSecondaryRATUsageReport,omitempty"`
	UetimeZone                       *externalRef2.TimeZone                                          `json:"uetimeZone,omitempty"`
	UnitCountInactivityTimer         *externalRef2.DurationSec                                       `json:"unitCountInactivityTimer,omitempty"`
	UserInformation                  *UserInformation                                                `json:"userInformation,omitempty"`
	UserLocationTime                 *externalRef2.DateTime                                          `json:"userLocationTime,omitempty"`
	UserLocationinfo                 *externalRef2.UserLocation                                      `json:"userLocationinfo,omitempty"`
}

// PDUSessionChargingInformation_PresenceReportingAreaInformation defines model for PDUSessionChargingInformation.PresenceReportingAreaInformation.
type PDUSessionChargingInformation_PresenceReportingAreaInformation struct {
	AdditionalProperties map[string]externalRef2.PresenceInfo `json:"-"`
}

// PDUSessionInformation defines model for PDUSessionInformation.
type PDUSessionInformation struct {
	N3gppPSDataOffStatus                 *N3GPPPSDataOffStatus                 `json:"3gppPSDataOffStatus,omitempty"`
	AuthorizedQoSInformation             *externalRef1.AuthorizedDefaultQos    `json:"authorizedQoSInformation,omitempty"`
	AuthorizedSessionAMBR                *externalRef2.Ambr                    `json:"authorizedSessionAMBR,omitempty"`
	ChargingCharacteristics              *string                               `json:"chargingCharacteristics,omitempty"`
	ChargingCharacteristicsSelectionMode *ChargingCharacteristicsSelectionMode `json:"chargingCharacteristicsSelectionMode,omitempty"`
	Diagnostics                          *Diagnostics                          `json:"diagnostics,omitempty"`
	DnnId                                externalRef2.Dnn                      `json:"dnnId"`
	DnnSelectionMode                     *DnnSelectionMode                     `json:"dnnSelectionMode,omitempty"`
	HPlmnId                              *externalRef2.PlmnId                  `json:"hPlmnId,omitempty"`
	NetworkSlicingInfo                   *NetworkSlicingInfo                   `json:"networkSlicingInfo,omitempty"`
	PduAddress                           *PDUAddress                           `json:"pduAddress,omitempty"`
	PduSessionID                         externalRef2.PduSessionId             `json:"pduSessionID"`
	PduType                              *externalRef2.PduSessionType          `json:"pduType,omitempty"`
	RatType                              *externalRef2.RatType                 `json:"ratType,omitempty"`
	ServingCNPlmnId                      *externalRef2.PlmnId                  `json:"servingCNPlmnId,omitempty"`
	ServingNetworkFunctionID             *ServingNetworkFunctionID             `json:"servingNetworkFunctionID,omitempty"`
	SessionStopIndicator                 *bool                                 `json:"sessionStopIndicator,omitempty"`
	SscMode                              *externalRef2.SscMode                 `json:"sscMode,omitempty"`
	StartTime                            *externalRef2.DateTime                `json:"startTime,omitempty"`
	StopTime                             *externalRef2.DateTime                `json:"stopTime,omitempty"`
	SubscribedQoSInformation             *externalRef2.SubscribedDefaultQos    `json:"subscribedQoSInformation,omitempty"`
	SubscribedSessionAMBR                *externalRef2.Ambr                    `json:"subscribedSessionAMBR,omitempty"`
}

// PartialRecordMethod defines model for PartialRecordMethod.
type PartialRecordMethod interface{}

// QFIContainerInformation defines model for QFIContainerInformation.
type QFIContainerInformation struct {
	N3gppPSDataOffStatus             *N3GPPPSDataOffStatus                                     `json:"3gppPSDataOffStatus,omitempty"`
	PresenceReportingAreaInformation *QFIContainerInformation_PresenceReportingAreaInformation `json:"presenceReportingAreaInformation,omitempty"`
	QFI                              *externalRef2.Qfi                                         `json:"qFI,omitempty"`
	QoSInformation                   *externalRef1.QosData                                     `json:"qoSInformation"`
	RATType                          *externalRef2.RatType                                     `json:"rATType,omitempty"`
	ReportTime                       *externalRef2.DateTime                                    `json:"reportTime,omitempty"`
	ServingNetworkFunctionID         *[]ServingNetworkFunctionID                               `json:"servingNetworkFunctionID,omitempty"`
	TimeofFirstUsage                 *externalRef2.DateTime                                    `json:"timeofFirstUsage,omitempty"`
	TimeofLastUsage                  *externalRef2.DateTime                                    `json:"timeofLastUsage,omitempty"`
	UetimeZone                       *externalRef2.TimeZone                                    `json:"uetimeZone,omitempty"`
	UserLocationInformation          *externalRef2.UserLocation                                `json:"userLocationInformation,omitempty"`
}

// QFIContainerInformation_PresenceReportingAreaInformation defines model for QFIContainerInformation.PresenceReportingAreaInformation.
type QFIContainerInformation_PresenceReportingAreaInformation struct {
	AdditionalProperties map[string]externalRef2.PresenceInfo `json:"-"`
}

// QosFlowsUsageReport defines model for QosFlowsUsageReport.
type QosFlowsUsageReport struct {
	DownlinkVolume *externalRef2.Uint64   `json:"downlinkVolume,omitempty"`
	EndTimestamp   *externalRef2.DateTime `json:"endTimestamp,omitempty"`
	QFI            *externalRef2.Qfi      `json:"qFI,omitempty"`
	StartTimestamp *externalRef2.DateTime `json:"startTimestamp,omitempty"`
	UplinkVolume   *externalRef2.Uint64   `json:"uplinkVolume,omitempty"`
}

// QuotaManagementIndicator defines model for QuotaManagementIndicator.
type QuotaManagementIndicator interface{}

// RANSecondaryRATUsageReport defines model for RANSecondaryRATUsageReport.
type RANSecondaryRATUsageReport struct {
	QosFlowsUsageReports *[]QosFlowsUsageReport `json:"qosFlowsUsageReports,omitempty"`
	RANSecondaryRATType  *externalRef2.RatType  `json:"rANSecondaryRATType,omitempty"`
}

// ReauthorizationDetails defines model for ReauthorizationDetails.
type ReauthorizationDetails struct {
	QuotaManagementIndicator *QuotaManagementIndicator `json:"quotaManagementIndicator,omitempty"`
	RatingGroup              *externalRef2.RatingGroup `json:"ratingGroup,omitempty"`
	ServiceId                *externalRef2.ServiceId   `json:"serviceId,omitempty"`
}

// RecipientAddress defines model for RecipientAddress.
type RecipientAddress struct {
	RecipientAddressInfo *SMAddressInfo   `json:"recipientAddressInfo,omitempty"`
	SMaddresseeType      *SMAddresseeType `json:"sMaddresseeType,omitempty"`
}

// RecipientInfo defines model for RecipientInfo.
type RecipientInfo struct {
	RecipientGPSI            *externalRef2.Gpsi `json:"recipientGPSI,omitempty"`
	RecipientOtherAddress    *SMAddressInfo     `json:"recipientOtherAddress,omitempty"`
	RecipientReceivedAddress *SMAddressInfo     `json:"recipientReceivedAddress,omitempty"`
	RecipientSCCPAddress     *string            `json:"recipientSCCPAddress,omitempty"`
	RecipientSUPI            *externalRef2.Supi `json:"recipientSUPI,omitempty"`
	SMDestinationInterface   *SMInterface       `json:"sMDestinationInterface,omitempty"`
	SMrecipientProtocolId    *string            `json:"sMrecipientProtocolId,omitempty"`
}

// RedirectAddressType defines model for RedirectAddressType.
type RedirectAddressType interface{}

// RedirectServer defines model for RedirectServer.
type RedirectServer struct {
	RedirectAddressType   RedirectAddressType `json:"redirectAddressType"`
	RedirectServerAddress string              `json:"redirectServerAddress"`
}

// ReplyPathRequested defines model for ReplyPathRequested.
type ReplyPathRequested interface{}

// RequestedUnit defines model for RequestedUnit.
type RequestedUnit struct {
	DownlinkVolume       *externalRef2.Uint64 `json:"downlinkVolume,omitempty"`
	ServiceSpecificUnits *externalRef2.Uint64 `json:"serviceSpecificUnits,omitempty"`
	Time                 *externalRef2.Uint32 `json:"time,omitempty"`
	TotalVolume          *externalRef2.Uint64 `json:"totalVolume,omitempty"`
	UplinkVolume         *externalRef2.Uint64 `json:"uplinkVolume,omitempty"`
}

// ResultCode defines model for ResultCode.
type ResultCode interface{}

// RoamerInOut defines model for RoamerInOut.
type RoamerInOut interface{}

// RoamingChargingProfile defines model for RoamingChargingProfile.
type RoamingChargingProfile struct {
	PartialRecordMethod *PartialRecordMethod `json:"partialRecordMethod,omitempty"`
	Triggers            *[]Trigger           `json:"triggers,omitempty"`
}

// RoamingQBCInformation defines model for RoamingQBCInformation.
type RoamingQBCInformation struct {
	MultipleQFIcontainer   *[]MultipleQFIcontainer    `json:"multipleQFIcontainer,omitempty"`
	RoamingChargingProfile *RoamingChargingProfile    `json:"roamingChargingProfile,omitempty"`
	UPFID                  *externalRef2.NfInstanceId `json:"uPFID,omitempty"`
}

// SMAddressDomain defines model for SMAddressDomain.
type SMAddressDomain struct {
	N3GPPIMSIMCCMNC *string `json:"3GPPIMSIMCCMNC,omitempty"`
	DomainName      *string `json:"domainName,omitempty"`
}

// SMAddressInfo defines model for SMAddressInfo.
type SMAddressInfo struct {
	SMaddressData   *string          `json:"sMaddressData,omitempty"`
	SMaddressDomain *SMAddressDomain `json:"sMaddressDomain,omitempty"`
	SMaddressType   *SMAddressType   `json:"sMaddressType,omitempty"`
}

// SMAddressType defines model for SMAddressType.
type SMAddressType interface{}

// SMAddresseeType defines model for SMAddresseeType.
type SMAddresseeType interface{}

// SMInterface defines model for SMInterface.
type SMInterface struct {
	InterfaceId   *string        `json:"interfaceId,omitempty"`
	InterfacePort *string        `json:"interfacePort,omitempty"`
	InterfaceText *string        `json:"interfaceText,omitempty"`
	InterfaceType *InterfaceType `json:"interfaceType,omitempty"`
}

// SMMessageType defines model for SMMessageType.
type SMMessageType interface{}

// SMPriority defines model for SMPriority.
type SMPriority interface{}

// SMSChargingInformation defines model for SMSChargingInformation.
type SMSChargingInformation struct {
	DeliveryReportRequested *DeliveryReportRequested   `json:"deliveryReportRequested,omitempty"`
	MessageClass            *MessageClass              `json:"messageClass,omitempty"`
	MessageReference        *string                    `json:"messageReference,omitempty"`
	MessageSize             *externalRef2.Uint32       `json:"messageSize,omitempty"`
	NumberofMessagesSent    *externalRef2.Uint32       `json:"numberofMessagesSent,omitempty"`
	OriginatorInfo          *OriginatorInfo            `json:"originatorInfo,omitempty"`
	RATType                 *externalRef2.RatType      `json:"rATType,omitempty"`
	RecipientInfo           *[]RecipientInfo           `json:"recipientInfo,omitempty"`
	SMDataCodingScheme      *int                       `json:"sMDataCodingScheme,omitempty"`
	SMDischargeTime         *externalRef2.DateTime     `json:"sMDischargeTime,omitempty"`
	SMMessageType           *SMMessageType             `json:"sMMessageType,omitempty"`
	SMPriority              *SMPriority                `json:"sMPriority,omitempty"`
	SMReplyPathRequested    *ReplyPathRequested        `json:"sMReplyPathRequested,omitempty"`
	SMSCAddress             *string                    `json:"sMSCAddress,omitempty"`
	SMSequenceNumber        *externalRef2.Uint32       `json:"sMSequenceNumber,omitempty"`
	SMServiceType           *SMServiceType             `json:"sMServiceType,omitempty"`
	SMSresult               *externalRef2.Uint32       `json:"sMSresult,omitempty"`
	SMStatus                *string                    `json:"sMStatus,omitempty"`
	SMUserDataHeader        *string                    `json:"sMUserDataHeader,omitempty"`
	SubmissionTime          *externalRef2.DateTime     `json:"submissionTime,omitempty"`
	UetimeZone              *externalRef2.TimeZone     `json:"uetimeZone,omitempty"`
	UserEquipmentInfo       *externalRef2.Pei          `json:"userEquipmentInfo,omitempty"`
	UserLocationinfo        *externalRef2.UserLocation `json:"userLocationinfo,omitempty"`
}

// SMServiceType defines model for SMServiceType.
type SMServiceType interface{}

// ServingNetworkFunctionID defines model for ServingNetworkFunctionID.
type ServingNetworkFunctionID struct {
	AMFId                             *externalRef2.AmfId `json:"aMFId,omitempty"`
	ServingNetworkFunctionInformation NFIdentification    `json:"servingNetworkFunctionInformation"`
}

// SessionFailover defines model for SessionFailover.
type SessionFailover interface{}

// Trigger defines model for Trigger.
type Trigger struct {
	MaxNumberOfccc  *externalRef2.Uint32      `json:"maxNumberOfccc,omitempty"`
	TimeLimit       *externalRef2.DurationSec `json:"timeLimit,omitempty"`
	TriggerCategory TriggerCategory           `json:"triggerCategory"`
	TriggerType     TriggerType               `json:"triggerType"`
	VolumeLimit     *externalRef2.Uint32      `json:"volumeLimit,omitempty"`
	VolumeLimit64   *externalRef2.Uint64      `json:"volumeLimit64,omitempty"`
}

// TriggerCategory defines model for TriggerCategory.
type TriggerCategory interface{}

// TriggerType defines model for TriggerType.
type TriggerType interface{}

// UsedUnitContainer defines model for UsedUnitContainer.
type UsedUnitContainer struct {
	DownlinkVolume           *externalRef2.Uint64      `json:"downlinkVolume,omitempty"`
	EventTimeStamps          *externalRef2.DateTime    `json:"eventTimeStamps,omitempty"`
	LocalSequenceNumber      int                       `json:"localSequenceNumber"`
	PDUContainerInformation  *PDUContainerInformation  `json:"pDUContainerInformation,omitempty"`
	QuotaManagementIndicator *QuotaManagementIndicator `json:"quotaManagementIndicator,omitempty"`
	ServiceId                *externalRef2.ServiceId   `json:"serviceId,omitempty"`
	ServiceSpecificUnits     *externalRef2.Uint64      `json:"serviceSpecificUnits,omitempty"`
	Time                     *externalRef2.Uint32      `json:"time,omitempty"`
	TotalVolume              *externalRef2.Uint64      `json:"totalVolume,omitempty"`
	TriggerTimestamp         *externalRef2.DateTime    `json:"triggerTimestamp,omitempty"`
	Triggers                 *[]Trigger                `json:"triggers,omitempty"`
	UplinkVolume             *externalRef2.Uint64      `json:"uplinkVolume,omitempty"`
}

// UserInformation defines model for UserInformation.
type UserInformation struct {
	RoamerInOut         *RoamerInOut       `json:"roamerInOut,omitempty"`
	ServedGPSI          *externalRef2.Gpsi `json:"servedGPSI,omitempty"`
	ServedPEI           *externalRef2.Pei  `json:"servedPEI,omitempty"`
	UnauthenticatedFlag *bool              `json:"unauthenticatedFlag,omitempty"`
}

// DnnSelectionMode defines model for dnnSelectionMode.
type DnnSelectionMode interface{}

// OneTimeEventType defines model for oneTimeEventType.
type OneTimeEventType interface{}

// PostChargingdataJSONBody defines parameters for PostChargingdata.
type PostChargingdataJSONBody ChargingDataRequest

// PostChargingdataChargingDataRefReleaseJSONBody defines parameters for PostChargingdataChargingDataRefRelease.
type PostChargingdataChargingDataRefReleaseJSONBody ChargingDataRequest

// PostChargingdataChargingDataRefUpdateJSONBody defines parameters for PostChargingdataChargingDataRefUpdate.
type PostChargingdataChargingDataRefUpdateJSONBody ChargingDataRequest

// PostChargingdataJSONRequestBody defines body for PostChargingdata for application/json ContentType.
type PostChargingdataJSONRequestBody PostChargingdataJSONBody

// PostChargingdataChargingDataRefReleaseJSONRequestBody defines body for PostChargingdataChargingDataRefRelease for application/json ContentType.
type PostChargingdataChargingDataRefReleaseJSONRequestBody PostChargingdataChargingDataRefReleaseJSONBody

// PostChargingdataChargingDataRefUpdateJSONRequestBody defines body for PostChargingdataChargingDataRefUpdate for application/json ContentType.
type PostChargingdataChargingDataRefUpdateJSONRequestBody PostChargingdataChargingDataRefUpdateJSONBody

// Getter for additional properties for PDUContainerInformation_PresenceReportingAreaInformation. Returns the specified
// element and whether it was found
func (a PDUContainerInformation_PresenceReportingAreaInformation) Get(fieldName string) (value externalRef2.PresenceInfo, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PDUContainerInformation_PresenceReportingAreaInformation
func (a *PDUContainerInformation_PresenceReportingAreaInformation) Set(fieldName string, value externalRef2.PresenceInfo) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]externalRef2.PresenceInfo)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PDUContainerInformation_PresenceReportingAreaInformation to handle AdditionalProperties
func (a *PDUContainerInformation_PresenceReportingAreaInformation) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]externalRef2.PresenceInfo)
		for fieldName, fieldBuf := range object {
			var fieldVal externalRef2.PresenceInfo
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PDUContainerInformation_PresenceReportingAreaInformation to handle AdditionalProperties
func (a PDUContainerInformation_PresenceReportingAreaInformation) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PDUSessionChargingInformation_PresenceReportingAreaInformation. Returns the specified
// element and whether it was found
func (a PDUSessionChargingInformation_PresenceReportingAreaInformation) Get(fieldName string) (value externalRef2.PresenceInfo, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PDUSessionChargingInformation_PresenceReportingAreaInformation
func (a *PDUSessionChargingInformation_PresenceReportingAreaInformation) Set(fieldName string, value externalRef2.PresenceInfo) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]externalRef2.PresenceInfo)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PDUSessionChargingInformation_PresenceReportingAreaInformation to handle AdditionalProperties
func (a *PDUSessionChargingInformation_PresenceReportingAreaInformation) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]externalRef2.PresenceInfo)
		for fieldName, fieldBuf := range object {
			var fieldVal externalRef2.PresenceInfo
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PDUSessionChargingInformation_PresenceReportingAreaInformation to handle AdditionalProperties
func (a PDUSessionChargingInformation_PresenceReportingAreaInformation) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for QFIContainerInformation_PresenceReportingAreaInformation. Returns the specified
// element and whether it was found
func (a QFIContainerInformation_PresenceReportingAreaInformation) Get(fieldName string) (value externalRef2.PresenceInfo, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for QFIContainerInformation_PresenceReportingAreaInformation
func (a *QFIContainerInformation_PresenceReportingAreaInformation) Set(fieldName string, value externalRef2.PresenceInfo) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]externalRef2.PresenceInfo)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for QFIContainerInformation_PresenceReportingAreaInformation to handle AdditionalProperties
func (a *QFIContainerInformation_PresenceReportingAreaInformation) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]externalRef2.PresenceInfo)
		for fieldName, fieldBuf := range object {
			var fieldVal externalRef2.PresenceInfo
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for QFIContainerInformation_PresenceReportingAreaInformation to handle AdditionalProperties
func (a QFIContainerInformation_PresenceReportingAreaInformation) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}
