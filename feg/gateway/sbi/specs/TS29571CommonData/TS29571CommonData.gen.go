// Package TS29571CommonData provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package TS29571CommonData

import (
	"time"

	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
)

// Defines values for AccessType.
const (
	AccessTypeN3GPPACCESS AccessType = "3GPP_ACCESS"

	AccessTypeNON3GPPACCESS AccessType = "NON_3GPP_ACCESS"
)

// Defines values for AccessTypeRm.
const (
	AccessTypeRmN3GPPACCESS AccessTypeRm = "3GPP_ACCESS"

	AccessTypeRmNON3GPPACCESS AccessTypeRm = "NON_3GPP_ACCESS"
)

// Defines values for PduSessionType.
const (
	PduSessionTypeETHERNET PduSessionType = "ETHERNET"

	PduSessionTypeIPV4 PduSessionType = "IPV4"

	PduSessionTypeIPV4V6 PduSessionType = "IPV4V6"

	PduSessionTypeIPV6 PduSessionType = "IPV6"

	PduSessionTypeUNSTRUCTURED PduSessionType = "UNSTRUCTURED"
)

// Defines values for RatType.
const (
	RatTypeEUTRA RatType = "EUTRA"

	RatTypeNR RatType = "NR"

	RatTypeVIRTUAL RatType = "VIRTUAL"

	RatTypeWLAN RatType = "WLAN"
)

// N5GMmCause defines model for 5GMmCause.
type N5GMmCause Uinteger

// N5Qi defines model for 5Qi.
type N5Qi int

// N5QiPriorityLevel defines model for 5QiPriorityLevel.
type N5QiPriorityLevel int

// N5QiPriorityLevelRm defines model for 5QiPriorityLevelRm.
type N5QiPriorityLevelRm int

// N5QiRm defines model for 5QiRm.
type N5QiRm int

// AccessType defines model for AccessType.
type AccessType string

// AccessTypeRm defines model for AccessTypeRm.
type AccessTypeRm string

// AdditionalQosFlowInfo defines model for AdditionalQosFlowInfo.
type AdditionalQosFlowInfo interface{}

// Ambr defines model for Ambr.
type Ambr struct {
	Downlink BitRate `json:"downlink"`
	Uplink   BitRate `json:"uplink"`
}

// AmbrRm defines model for AmbrRm.
type AmbrRm struct {
	Downlink BitRate `json:"downlink"`
	Uplink   BitRate `json:"uplink"`
}

// AmfId defines model for AmfId.
type AmfId string

// AmfName defines model for AmfName.
type AmfName string

// AmfRegionId defines model for AmfRegionId.
type AmfRegionId string

// AmfSetId defines model for AmfSetId.
type AmfSetId string

// ApplicationChargingId defines model for ApplicationChargingId.
type ApplicationChargingId string

// ApplicationId defines model for ApplicationId.
type ApplicationId string

// ApplicationIdRm defines model for ApplicationIdRm.
type ApplicationIdRm string

// Area defines model for Area.
type Area interface{}

// AreaCode defines model for AreaCode.
type AreaCode string

// AreaCodeRm defines model for AreaCodeRm.
type AreaCodeRm string

// Arp defines model for Arp.
type Arp struct {
	PreemptCap  PreemptionCapability    `json:"preemptCap"`
	PreemptVuln PreemptionVulnerability `json:"preemptVuln"`

	// nullable true shall not be used for this attribute
	PriorityLevel *ArpPriorityLevel `json:"priorityLevel"`
}

// nullable true shall not be used for this attribute
type ArpPriorityLevel int

// ArpPriorityLevelRm defines model for ArpPriorityLevelRm.
type ArpPriorityLevelRm int

// ArpRm defines model for ArpRm.
type ArpRm struct {
	PreemptCap  PreemptionCapability    `json:"preemptCap"`
	PreemptVuln PreemptionVulnerability `json:"preemptVuln"`

	// nullable true shall not be used for this attribute
	PriorityLevel *ArpPriorityLevel `json:"priorityLevel"`
}

// Atom defines model for Atom.
type Atom struct {
	Attr     string      `json:"attr"`
	Negative *bool       `json:"negative,omitempty"`
	Value    interface{} `json:"value"`
}

// AverWindow defines model for AverWindow.
type AverWindow int

// AverWindowRm defines model for AverWindowRm.
type AverWindowRm int

// BackupAmfInfo defines model for BackupAmfInfo.
type BackupAmfInfo struct {
	BackupAmf AmfName  `json:"backupAmf"`
	GuamiList *[]Guami `json:"guamiList,omitempty"`
}

// Binary defines model for Binary.
type Binary string

// BinaryRm defines model for BinaryRm.
type BinaryRm string

// BitRate defines model for BitRate.
type BitRate string

// BitRateRm defines model for BitRateRm.
type BitRateRm string

// Bytes defines model for Bytes.
type Bytes []byte

// BytesRm defines model for BytesRm.
type BytesRm []byte

// ChangeItem defines model for ChangeItem.
type ChangeItem struct {
	From      *string      `json:"from,omitempty"`
	NewValue  *interface{} `json:"newValue,omitempty"`
	Op        ChangeType   `json:"op"`
	OrigValue *interface{} `json:"origValue,omitempty"`
	Path      string       `json:"path"`
}

// ChangeType defines model for ChangeType.
type ChangeType interface{}

// ChargingId defines model for ChargingId.
type ChargingId Uint32

// Cnf defines model for Cnf.
type Cnf struct {
	CnfUnits []CnfUnit `json:"cnfUnits"`
}

// CnfUnit defines model for CnfUnit.
type CnfUnit struct {
	CnfUnit []Atom `json:"cnfUnit"`
}

// ComplexQuery defines model for ComplexQuery.
type ComplexQuery interface{}

// CoreNetworkType defines model for CoreNetworkType.
type CoreNetworkType interface{}

// CoreNetworkTypeRm defines model for CoreNetworkTypeRm.
type CoreNetworkTypeRm interface{}

// Date defines model for Date.
type Date openapi_types.Date

// DateRm defines model for DateRm.
type DateRm openapi_types.Date

// DateTime defines model for DateTime.
type DateTime time.Time

// DateTimeRm defines model for DateTimeRm.
type DateTimeRm time.Time

// DiameterIdentity defines model for DiameterIdentity.
type DiameterIdentity string

// DiameterIdentityRm defines model for DiameterIdentityRm.
type DiameterIdentityRm string

// Dnai defines model for Dnai.
type Dnai string

// Possible values are - EARLY: Early notification of UP path reconfiguration. - EARLY_LATE: Early and late notification of UP path reconfiguration. This value shall only be present in the subscription to the DNAI change event. - LATE: Late notification of UP path reconfiguration.
type DnaiChangeType interface{}

// DnaiChangeTypeRm defines model for DnaiChangeTypeRm.
type DnaiChangeTypeRm interface{}

// DnaiRm defines model for DnaiRm.
type DnaiRm string

// Dnf defines model for Dnf.
type Dnf struct {
	DnfUnits []DnfUnit `json:"dnfUnits"`
}

// DnfUnit defines model for DnfUnit.
type DnfUnit struct {
	DnfUnit []Atom `json:"dnfUnit"`
}

// Dnn defines model for Dnn.
type Dnn string

// DnnRm defines model for DnnRm.
type DnnRm string

// Double defines model for Double.
type Double float64

// DoubleRm defines model for DoubleRm.
type DoubleRm float64

// DurationSec defines model for DurationSec.
type DurationSec int

// DurationSecRm defines model for DurationSecRm.
type DurationSecRm int

// Dynamic5Qi defines model for Dynamic5Qi.
type Dynamic5Qi struct {
	AverWindow        *AverWindow       `json:"averWindow,omitempty"`
	MaxDataBurstVol   *MaxDataBurstVol  `json:"maxDataBurstVol,omitempty"`
	PacketDelayBudget PacketDelBudget   `json:"packetDelayBudget"`
	PacketErrRate     PacketErrRate     `json:"packetErrRate"`
	PriorityLevel     N5QiPriorityLevel `json:"priorityLevel"`
	ResourceType      QosResourceType   `json:"resourceType"`
}

// Ecgi defines model for Ecgi.
type Ecgi struct {
	EutraCellId EutraCellId `json:"eutraCellId"`
	PlmnId      PlmnId      `json:"plmnId"`
}

// EcgiRm defines model for EcgiRm.
type EcgiRm struct {
	EutraCellId EutraCellId `json:"eutraCellId"`
	PlmnId      PlmnId      `json:"plmnId"`
}

// EutraCellId defines model for EutraCellId.
type EutraCellId string

// EutraCellIdRm defines model for EutraCellIdRm.
type EutraCellIdRm string

// EutraLocation defines model for EutraLocation.
type EutraLocation struct {
	AgeOfLocationInformation *int             `json:"ageOfLocationInformation,omitempty"`
	Ecgi                     Ecgi             `json:"ecgi"`
	GeodeticInformation      *string          `json:"geodeticInformation,omitempty"`
	GeographicalInformation  *string          `json:"geographicalInformation,omitempty"`
	GlobalNgenbId            *GlobalRanNodeId `json:"globalNgenbId,omitempty"`
	Tai                      Tai              `json:"tai"`
	UeLocationTimestamp      *DateTime        `json:"ueLocationTimestamp,omitempty"`
}

// EutraLocationRm defines model for EutraLocationRm.
type EutraLocationRm struct {
	AgeOfLocationInformation *int             `json:"ageOfLocationInformation,omitempty"`
	Ecgi                     Ecgi             `json:"ecgi"`
	GeodeticInformation      *string          `json:"geodeticInformation,omitempty"`
	GeographicalInformation  *string          `json:"geographicalInformation,omitempty"`
	GlobalNgenbId            *GlobalRanNodeId `json:"globalNgenbId,omitempty"`
	Tai                      Tai              `json:"tai"`
	UeLocationTimestamp      *DateTime        `json:"ueLocationTimestamp,omitempty"`
}

// Float defines model for Float.
type Float float32

// FloatRm defines model for FloatRm.
type FloatRm float32

// GNbId defines model for GNbId.
type GNbId struct {
	BitLength int    `json:"bitLength"`
	GNBValue  string `json:"gNBValue"`
}

// GlobalRanNodeId defines model for GlobalRanNodeId.
type GlobalRanNodeId interface{}

// Gpsi defines model for Gpsi.
type Gpsi string

// GpsiRm defines model for GpsiRm.
type GpsiRm string

// GroupId defines model for GroupId.
type GroupId string

// GroupIdRm defines model for GroupIdRm.
type GroupIdRm string

// Guami defines model for Guami.
type Guami struct {
	AmfId  AmfId  `json:"amfId"`
	PlmnId PlmnId `json:"plmnId"`
}

// GuamiRm defines model for GuamiRm.
type GuamiRm struct {
	AmfId  AmfId  `json:"amfId"`
	PlmnId PlmnId `json:"plmnId"`
}

// Int32 defines model for Int32.
type Int32 int32

// Int32Rm defines model for Int32Rm.
type Int32Rm int32

// Int64 defines model for Int64.
type Int64 int64

// Int64Rm defines model for Int64Rm.
type Int64Rm int64

// InvalidParam defines model for InvalidParam.
type InvalidParam struct {
	Param  string  `json:"param"`
	Reason *string `json:"reason,omitempty"`
}

// Ipv4Addr defines model for Ipv4Addr.
type Ipv4Addr string

// Ipv4AddrRm defines model for Ipv4AddrRm.
type Ipv4AddrRm string

// Ipv6Addr defines model for Ipv6Addr.
type Ipv6Addr string

// Ipv6AddrRm defines model for Ipv6AddrRm.
type Ipv6AddrRm string

// Ipv6Prefix defines model for Ipv6Prefix.
type Ipv6Prefix string

// Ipv6PrefixRm defines model for Ipv6PrefixRm.
type Ipv6PrefixRm string

// Link defines model for Link.
type Link struct {
	Href *Uri `json:"href,omitempty"`
}

// LinkRm defines model for LinkRm.
type LinkRm struct {
	Href *Uri `json:"href,omitempty"`
}

// LinksValueSchema defines model for LinksValueSchema.
type LinksValueSchema interface{}

// MacAddr48 defines model for MacAddr48.
type MacAddr48 string

// MacAddr48Rm defines model for MacAddr48Rm.
type MacAddr48Rm string

// MaxDataBurstVol defines model for MaxDataBurstVol.
type MaxDataBurstVol int

// MaxDataBurstVolRm defines model for MaxDataBurstVolRm.
type MaxDataBurstVolRm int

// Mcc defines model for Mcc.
type Mcc string

// MccRm defines model for MccRm.
type MccRm string

// Mnc defines model for Mnc.
type Mnc string

// MncRm defines model for MncRm.
type MncRm string

// N3IwfId defines model for N3IwfId.
type N3IwfId string

// N3gaLocation defines model for N3gaLocation.
type N3gaLocation struct {
	N3IwfId    *string   `json:"n3IwfId,omitempty"`
	N3gppTai   *Tai      `json:"n3gppTai,omitempty"`
	PortNumber *Uinteger `json:"portNumber,omitempty"`
	UeIpv4Addr *Ipv4Addr `json:"ueIpv4Addr,omitempty"`
	UeIpv6Addr *Ipv6Addr `json:"ueIpv6Addr,omitempty"`
}

// Ncgi defines model for Ncgi.
type Ncgi struct {
	NrCellId NrCellId `json:"nrCellId"`
	PlmnId   PlmnId   `json:"plmnId"`
}

// NcgiRm defines model for NcgiRm.
type NcgiRm struct {
	NrCellId NrCellId `json:"nrCellId"`
	PlmnId   PlmnId   `json:"plmnId"`
}

// NetworkId defines model for NetworkId.
type NetworkId struct {
	Mcc *Mcc `json:"mcc,omitempty"`
	Mnc *Mnc `json:"mnc,omitempty"`
}

// NfGroupId defines model for NfGroupId.
type NfGroupId string

// NfInstanceId defines model for NfInstanceId.
type NfInstanceId string

// NgApCause defines model for NgApCause.
type NgApCause struct {
	Group Uinteger `json:"group"`
	Value Uinteger `json:"value"`
}

// NgeNbId defines model for NgeNbId.
type NgeNbId string

// NonDynamic5Qi defines model for NonDynamic5Qi.
type NonDynamic5Qi struct {
	AverWindow      *AverWindow        `json:"averWindow,omitempty"`
	MaxDataBurstVol *MaxDataBurstVol   `json:"maxDataBurstVol,omitempty"`
	PriorityLevel   *N5QiPriorityLevel `json:"priorityLevel,omitempty"`
}

// NotificationControl defines model for NotificationControl.
type NotificationControl interface{}

// NotificationControlRm defines model for NotificationControlRm.
type NotificationControlRm interface{}

// NotifyItem defines model for NotifyItem.
type NotifyItem struct {
	Changes    []ChangeItem `json:"changes"`
	ResourceId Uri          `json:"resourceId"`
}

// NrCellId defines model for NrCellId.
type NrCellId string

// NrCellIdRm defines model for NrCellIdRm.
type NrCellIdRm string

// NrLocation defines model for NrLocation.
type NrLocation struct {
	AgeOfLocationInformation *int             `json:"ageOfLocationInformation,omitempty"`
	GeodeticInformation      *string          `json:"geodeticInformation,omitempty"`
	GeographicalInformation  *string          `json:"geographicalInformation,omitempty"`
	GlobalGnbId              *GlobalRanNodeId `json:"globalGnbId,omitempty"`
	Ncgi                     Ncgi             `json:"ncgi"`
	Tai                      Tai              `json:"tai"`
	UeLocationTimestamp      *DateTime        `json:"ueLocationTimestamp,omitempty"`
}

// NrLocationRm defines model for NrLocationRm.
type NrLocationRm struct {
	AgeOfLocationInformation *int             `json:"ageOfLocationInformation,omitempty"`
	GeodeticInformation      *string          `json:"geodeticInformation,omitempty"`
	GeographicalInformation  *string          `json:"geographicalInformation,omitempty"`
	GlobalGnbId              *GlobalRanNodeId `json:"globalGnbId,omitempty"`
	Ncgi                     Ncgi             `json:"ncgi"`
	Tai                      Tai              `json:"tai"`
	UeLocationTimestamp      *DateTime        `json:"ueLocationTimestamp,omitempty"`
}

// OdbData defines model for OdbData.
type OdbData struct {
	RoamingOdb *RoamingOdb `json:"roamingOdb,omitempty"`
}

// OdbPacketServices defines model for OdbPacketServices.
type OdbPacketServices interface{}

// PacketDelBudget defines model for PacketDelBudget.
type PacketDelBudget int

// PacketDelBudgetRm defines model for PacketDelBudgetRm.
type PacketDelBudgetRm int

// PacketErrRate defines model for PacketErrRate.
type PacketErrRate string

// PacketErrRateRm defines model for PacketErrRateRm.
type PacketErrRateRm string

// PacketLossRate defines model for PacketLossRate.
type PacketLossRate int

// PacketLossRateRm defines model for PacketLossRateRm.
type PacketLossRateRm int

// PatchItem defines model for PatchItem.
type PatchItem struct {
	From  *string        `json:"from,omitempty"`
	Op    PatchOperation `json:"op"`
	Path  string         `json:"path"`
	Value *interface{}   `json:"value"`
}

// PatchOperation defines model for PatchOperation.
type PatchOperation interface{}

// PduSessionId defines model for PduSessionId.
type PduSessionId int

// PduSessionType defines model for PduSessionType.
type PduSessionType string

// PduSessionTypeRm defines model for PduSessionTypeRm.
type PduSessionTypeRm interface{}

// Pei defines model for Pei.
type Pei string

// PeiRm defines model for PeiRm.
type PeiRm string

// PlmnId defines model for PlmnId.
type PlmnId struct {
	Mcc Mcc `json:"mcc"`
	Mnc Mnc `json:"mnc"`
}

// PlmnIdRm defines model for PlmnIdRm.
type PlmnIdRm struct {
	Mcc Mcc `json:"mcc"`
	Mnc Mnc `json:"mnc"`
}

// PreemptionCapability defines model for PreemptionCapability.
type PreemptionCapability interface{}

// PreemptionCapabilityRm defines model for PreemptionCapabilityRm.
type PreemptionCapabilityRm interface{}

// PreemptionVulnerability defines model for PreemptionVulnerability.
type PreemptionVulnerability interface{}

// PreemptionVulnerabilityRm defines model for PreemptionVulnerabilityRm.
type PreemptionVulnerabilityRm interface{}

// PresenceInfo defines model for PresenceInfo.
type PresenceInfo struct {
	EcgiList            *[]Ecgi            `json:"ecgiList,omitempty"`
	GlobalRanNodeIdList *[]GlobalRanNodeId `json:"globalRanNodeIdList,omitempty"`
	NcgiList            *[]Ncgi            `json:"ncgiList,omitempty"`
	PraId               *string            `json:"praId,omitempty"`
	PresenceState       *PresenceState     `json:"presenceState,omitempty"`
	TrackingAreaList    *[]Tai             `json:"trackingAreaList,omitempty"`
}

// PresenceInfoRm defines model for PresenceInfoRm.
type PresenceInfoRm struct {
	EcgiList            *[]Ecgi            `json:"ecgiList,omitempty"`
	GlobalRanNodeIdList *[]GlobalRanNodeId `json:"globalRanNodeIdList,omitempty"`
	NcgiList            *[]Ncgi            `json:"ncgiList,omitempty"`
	PraId               *string            `json:"praId,omitempty"`
	PresenceState       *PresenceState     `json:"presenceState,omitempty"`
	TrackingAreaList    *[]Tai             `json:"trackingAreaList,omitempty"`
}

// PresenceState defines model for PresenceState.
type PresenceState interface{}

// ProblemDetails defines model for ProblemDetails.
type ProblemDetails struct {
	Cause             *string            `json:"cause,omitempty"`
	Detail            *string            `json:"detail,omitempty"`
	Instance          *Uri               `json:"instance,omitempty"`
	InvalidParams     *[]InvalidParam    `json:"invalidParams,omitempty"`
	Status            *int               `json:"status,omitempty"`
	SupportedFeatures *SupportedFeatures `json:"supportedFeatures,omitempty"`
	Title             *string            `json:"title,omitempty"`
	Type              *Uri               `json:"type,omitempty"`
}

// Qfi defines model for Qfi.
type Qfi int

// QfiRm defines model for QfiRm.
type QfiRm int

// QosFlowUsageReport defines model for QosFlowUsageReport.
type QosFlowUsageReport struct {
	DownlinkVolume Int64    `json:"downlinkVolume"`
	EndTimeStamp   DateTime `json:"endTimeStamp"`
	Qfi            Qfi      `json:"qfi"`
	StartTimeStamp DateTime `json:"startTimeStamp"`
	UplinkVolume   Int64    `json:"uplinkVolume"`
}

// QosResourceType defines model for QosResourceType.
type QosResourceType interface{}

// QosResourceTypeRm defines model for QosResourceTypeRm.
type QosResourceTypeRm interface{}

// RatType defines model for RatType.
type RatType string

// RatTypeRm defines model for RatTypeRm.
type RatTypeRm interface{}

// RatingGroup defines model for RatingGroup.
type RatingGroup Uint32

// RefToBinaryData defines model for RefToBinaryData.
type RefToBinaryData struct {
	ContentId string `json:"contentId"`
}

// RefToBinaryDataRm defines model for RefToBinaryDataRm.
type RefToBinaryDataRm struct {
	ContentId string `json:"contentId"`
}

// ReflectiveQoSAttribute defines model for ReflectiveQoSAttribute.
type ReflectiveQoSAttribute interface{}

// ReflectiveQoSAttributeRm defines model for ReflectiveQoSAttributeRm.
type ReflectiveQoSAttributeRm interface{}

// RestrictionType defines model for RestrictionType.
type RestrictionType interface{}

// RestrictionTypeRm defines model for RestrictionTypeRm.
type RestrictionTypeRm interface{}

// RfspIndex defines model for RfspIndex.
type RfspIndex int

// RfspIndexRm defines model for RfspIndexRm.
type RfspIndexRm int

// RoamingOdb defines model for RoamingOdb.
type RoamingOdb interface{}

// RouteInformation defines model for RouteInformation.
type RouteInformation struct {
	Ipv4Addr   *Ipv4Addr `json:"ipv4Addr,omitempty"`
	Ipv6Addr   *Ipv6Addr `json:"ipv6Addr,omitempty"`
	PortNumber Uinteger  `json:"portNumber"`
}

// RouteToLocation defines model for RouteToLocation.
type RouteToLocation interface{}

// SecondaryRatUsageInfo defines model for SecondaryRatUsageInfo.
type SecondaryRatUsageInfo struct {
	PduSessionUsageData *[]VolumeTimedReport  `json:"pduSessionUsageData,omitempty"`
	QosFlowsUsageData   *[]QosFlowUsageReport `json:"qosFlowsUsageData,omitempty"`
	SecondaryRatType    RatType               `json:"secondaryRatType"`
}

// SecondaryRatUsageReport defines model for SecondaryRatUsageReport.
type SecondaryRatUsageReport struct {
	QosFlowsUsageData []QosFlowUsageReport `json:"qosFlowsUsageData"`
	SecondaryRatType  RatType              `json:"secondaryRatType"`
}

// SelfLink defines model for SelfLink.
type SelfLink struct {
	Self Link `json:"self"`
}

// ServiceAreaRestriction defines model for ServiceAreaRestriction.
type ServiceAreaRestriction struct {
	// Embedded fields due to inline allOf schema
	// Embedded fields due to inline allOf schema
	// Embedded fields due to inline allOf schema
}

// ServiceId defines model for ServiceId.
type ServiceId Uint32

// Snssai defines model for Snssai.
type Snssai struct {
	Sd  *string `json:"sd,omitempty"`
	Sst int     `json:"sst"`
}

// SscMode defines model for SscMode.
type SscMode interface{}

// SscModeRm defines model for SscModeRm.
type SscModeRm interface{}

// SubscribedDefaultQos defines model for SubscribedDefaultQos.
type SubscribedDefaultQos struct {
	N5qi          N5Qi               `json:"5qi"`
	Arp           Arp                `json:"arp"`
	PriorityLevel *N5QiPriorityLevel `json:"priorityLevel,omitempty"`
}

// Supi defines model for Supi.
type Supi string

// SupiRm defines model for SupiRm.
type SupiRm string

// SupportedFeatures defines model for SupportedFeatures.
type SupportedFeatures string

// Tac defines model for Tac.
type Tac string

// TacRm defines model for TacRm.
type TacRm string

// Tai defines model for Tai.
type Tai struct {
	PlmnId PlmnId `json:"plmnId"`
	Tac    Tac    `json:"tac"`
}

// TaiRm defines model for TaiRm.
type TaiRm struct {
	PlmnId PlmnId `json:"plmnId"`
	Tac    Tac    `json:"tac"`
}

// TimeZone defines model for TimeZone.
type TimeZone string

// TimeZoneRm defines model for TimeZoneRm.
type TimeZoneRm string

// TraceData defines model for TraceData.
type TraceData struct {
	CollectionEntityIpv4Addr *Ipv4Addr  `json:"collectionEntityIpv4Addr,omitempty"`
	CollectionEntityIpv6Addr *Ipv6Addr  `json:"collectionEntityIpv6Addr,omitempty"`
	EventList                string     `json:"eventList"`
	InterfaceList            *string    `json:"interfaceList,omitempty"`
	NeTypeList               string     `json:"neTypeList"`
	TraceDepth               TraceDepth `json:"traceDepth"`
	TraceRef                 string     `json:"traceRef"`
}

// TraceDepth defines model for TraceDepth.
type TraceDepth interface{}

// TraceDepthRm defines model for TraceDepthRm.
type TraceDepthRm interface{}

// Uint16 defines model for Uint16.
type Uint16 int

// Uint16Rm defines model for Uint16Rm.
type Uint16Rm int

// Uint32 defines model for Uint32.
type Uint32 int32

// Uint32Rm defines model for Uint32Rm.
type Uint32Rm int32

// Uint64 defines model for Uint64.
type Uint64 int64

// Uint64Rm defines model for Uint64Rm.
type Uint64Rm int64

// Uinteger defines model for Uinteger.
type Uinteger int

// UintegerRm defines model for UintegerRm.
type UintegerRm int

// UpConfidentiality defines model for UpConfidentiality.
type UpConfidentiality interface{}

// UpConfidentialityRm defines model for UpConfidentialityRm.
type UpConfidentialityRm interface{}

// UpIntegrity defines model for UpIntegrity.
type UpIntegrity interface{}

// UpIntegrityRm defines model for UpIntegrityRm.
type UpIntegrityRm interface{}

// UpSecurity defines model for UpSecurity.
type UpSecurity struct {
	UpConfid UpConfidentiality `json:"upConfid"`
	UpIntegr UpIntegrity       `json:"upIntegr"`
}

// UpSecurityRm defines model for UpSecurityRm.
type UpSecurityRm struct {
	UpConfid UpConfidentiality `json:"upConfid"`
	UpIntegr UpIntegrity       `json:"upIntegr"`
}

// Uri defines model for Uri.
type Uri string

// UriRm defines model for UriRm.
type UriRm string

// UriScheme defines model for UriScheme.
type UriScheme interface{}

// UserLocation defines model for UserLocation.
type UserLocation struct {
	EutraLocation *EutraLocation `json:"eutraLocation,omitempty"`
	N3gaLocation  *N3gaLocation  `json:"n3gaLocation,omitempty"`
	NrLocation    *NrLocation    `json:"nrLocation,omitempty"`
}

// VarUeId defines model for VarUeId.
type VarUeId string

// VarUeIdRm defines model for VarUeIdRm.
type VarUeIdRm string

// VolumeTimedReport defines model for VolumeTimedReport.
type VolumeTimedReport struct {
	DownlinkVolume Int64    `json:"downlinkVolume"`
	EndTimeStamp   DateTime `json:"endTimeStamp"`
	StartTimeStamp DateTime `json:"startTimeStamp"`
	UplinkVolume   Int64    `json:"uplinkVolume"`
}

// WildcardDnn defines model for WildcardDnn.
type WildcardDnn string

// WildcardDnnRm defines model for WildcardDnnRm.
type WildcardDnnRm string
