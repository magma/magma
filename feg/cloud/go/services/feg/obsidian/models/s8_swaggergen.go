// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// S8 s8 configuration
// swagger:model s8
type S8 struct {

	// apn operator suffix
	// Pattern: [^\:]+(:[0-9]{1,5})?
	ApnOperatorSuffix string `json:"apn_operator_suffix,omitempty"`

	// local address
	// Pattern: [^\:]+(:[0-9]{1,5})?
	LocalAddress string `json:"local_address,omitempty"`

	// pgw address
	// Pattern: [^\:]+(:[0-9]{1,5})?
	PgwAddress string `json:"pgw_address,omitempty"`
}

// Validate validates this s8
func (m *S8) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateApnOperatorSuffix(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLocalAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePgwAddress(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *S8) validateApnOperatorSuffix(formats strfmt.Registry) error {

	if swag.IsZero(m.ApnOperatorSuffix) { // not required
		return nil
	}

	if err := validate.Pattern("apn_operator_suffix", "body", string(m.ApnOperatorSuffix), `[^\:]+(:[0-9]{1,5})?`); err != nil {
		return err
	}

	return nil
}

func (m *S8) validateLocalAddress(formats strfmt.Registry) error {

	if swag.IsZero(m.LocalAddress) { // not required
		return nil
	}

	if err := validate.Pattern("local_address", "body", string(m.LocalAddress), `[^\:]+(:[0-9]{1,5})?`); err != nil {
		return err
	}

	return nil
}

func (m *S8) validatePgwAddress(formats strfmt.Registry) error {

	if swag.IsZero(m.PgwAddress) { // not required
		return nil
	}

	if err := validate.Pattern("pgw_address", "body", string(m.PgwAddress), `[^\:]+(:[0-9]{1,5})?`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *S8) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *S8) UnmarshalBinary(b []byte) error {
	var res S8
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
