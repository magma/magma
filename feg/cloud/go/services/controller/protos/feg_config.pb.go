//
//Copyright 2020 The Magma Authors.
//
//This source code is licensed under the BSD-style license found in the
//LICENSE file in the root directory of this source tree.
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.10.0
// source: feg/cloud/go/services/controller/protos/feg_config.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GyInitMethod int32

const (
	GyInitMethod_RESERVED    GyInitMethod = 0 // proto enums must start with 0
	GyInitMethod_PER_SESSION GyInitMethod = 1
	GyInitMethod_PER_KEY     GyInitMethod = 2
)

// Enum value maps for GyInitMethod.
var (
	GyInitMethod_name = map[int32]string{
		0: "RESERVED",
		1: "PER_SESSION",
		2: "PER_KEY",
	}
	GyInitMethod_value = map[string]int32{
		"RESERVED":    0,
		"PER_SESSION": 1,
		"PER_KEY":     2,
	}
)

func (x GyInitMethod) Enum() *GyInitMethod {
	p := new(GyInitMethod)
	*p = x
	return p
}

func (x GyInitMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GyInitMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_feg_cloud_go_services_controller_protos_feg_config_proto_enumTypes[0].Descriptor()
}

func (GyInitMethod) Type() protoreflect.EnumType {
	return &file_feg_cloud_go_services_controller_protos_feg_config_proto_enumTypes[0]
}

func (x GyInitMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GyInitMethod.Descriptor instead.
func (GyInitMethod) EnumDescriptor() ([]byte, []int) {
	return file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDescGZIP(), []int{0}
}

type DiamClientConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol         string `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"` // tcp/sctp/...
	Address          string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`   // server's host:port
	Retransmits      uint32 `protobuf:"varint,3,opt,name=retransmits,proto3" json:"retransmits,omitempty"`
	WatchdogInterval uint32 `protobuf:"varint,4,opt,name=watchdog_interval,json=watchdogInterval,proto3" json:"watchdog_interval,omitempty"`
	RetryCount       uint32 `protobuf:"varint,5,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	LocalAddress     string `protobuf:"bytes,6,opt,name=local_address,json=localAddress,proto3" json:"local_address,omitempty"` // client's local address to bind socket to IP:port OR :port
	ProductName      string `protobuf:"bytes,7,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	Realm            string `protobuf:"bytes,8,opt,name=realm,proto3" json:"realm,omitempty"`                           // diameter realm
	Host             string `protobuf:"bytes,9,opt,name=host,proto3" json:"host,omitempty"`                             // diameter host
	DestRealm        string `protobuf:"bytes,10,opt,name=dest_realm,json=destRealm,proto3" json:"dest_realm,omitempty"` // server diameter realm
	DestHost         string `protobuf:"bytes,11,opt,name=dest_host,json=destHost,proto3" json:"dest_host,omitempty"`    // server diameter host
}

func (x *DiamClientConfig) Reset() {
	*x = DiamClientConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiamClientConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiamClientConfig) ProtoMessage() {}

func (x *DiamClientConfig) ProtoReflect() protoreflect.Message {
	mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiamClientConfig.ProtoReflect.Descriptor instead.
func (*DiamClientConfig) Descriptor() ([]byte, []int) {
	return file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDescGZIP(), []int{0}
}

func (x *DiamClientConfig) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *DiamClientConfig) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DiamClientConfig) GetRetransmits() uint32 {
	if x != nil {
		return x.Retransmits
	}
	return 0
}

func (x *DiamClientConfig) GetWatchdogInterval() uint32 {
	if x != nil {
		return x.WatchdogInterval
	}
	return 0
}

func (x *DiamClientConfig) GetRetryCount() uint32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *DiamClientConfig) GetLocalAddress() string {
	if x != nil {
		return x.LocalAddress
	}
	return ""
}

func (x *DiamClientConfig) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *DiamClientConfig) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

func (x *DiamClientConfig) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *DiamClientConfig) GetDestRealm() string {
	if x != nil {
		return x.DestRealm
	}
	return ""
}

func (x *DiamClientConfig) GetDestHost() string {
	if x != nil {
		return x.DestHost
	}
	return ""
}

type DiamServerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol     string `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`                             // tcp/sctp/...
	Address      string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`                               // host:port
	LocalAddress string `protobuf:"bytes,3,opt,name=local_address,json=localAddress,proto3" json:"local_address,omitempty"` // IP:port or :port
	DestHost     string `protobuf:"bytes,4,opt,name=dest_host,json=destHost,proto3" json:"dest_host,omitempty"`             // diameter host
	DestRealm    string `protobuf:"bytes,5,opt,name=dest_realm,json=destRealm,proto3" json:"dest_realm,omitempty"`          // diameter realm
}

func (x *DiamServerConfig) Reset() {
	*x = DiamServerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiamServerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiamServerConfig) ProtoMessage() {}

func (x *DiamServerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiamServerConfig.ProtoReflect.Descriptor instead.
func (*DiamServerConfig) Descriptor() ([]byte, []int) {
	return file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDescGZIP(), []int{1}
}

func (x *DiamServerConfig) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *DiamServerConfig) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DiamServerConfig) GetLocalAddress() string {
	if x != nil {
		return x.LocalAddress
	}
	return ""
}

func (x *DiamServerConfig) GetDestHost() string {
	if x != nil {
		return x.DestHost
	}
	return ""
}

func (x *DiamServerConfig) GetDestRealm() string {
	if x != nil {
		return x.DestRealm
	}
	return ""
}

type S6AConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server  *DiamClientConfig `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	PlmnIds []string          `protobuf:"bytes,2,rep,name=PlmnIds,proto3" json:"PlmnIds,omitempty"`
}

func (x *S6AConfig) Reset() {
	*x = S6AConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S6AConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S6AConfig) ProtoMessage() {}

func (x *S6AConfig) ProtoReflect() protoreflect.Message {
	mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S6AConfig.ProtoReflect.Descriptor instead.
func (*S6AConfig) Descriptor() ([]byte, []int) {
	return file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDescGZIP(), []int{2}
}

func (x *S6AConfig) GetServer() *DiamClientConfig {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *S6AConfig) GetPlmnIds() []string {
	if x != nil {
		return x.PlmnIds
	}
	return nil
}

type GxConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server    *DiamClientConfig   `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Servers   []*DiamClientConfig `protobuf:"bytes,2,rep,name=servers,proto3" json:"servers,omitempty"`
	DisableGx bool                `protobuf:"varint,3,opt,name=DisableGx,proto3" json:"DisableGx,omitempty"`
}

func (x *GxConfig) Reset() {
	*x = GxConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GxConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GxConfig) ProtoMessage() {}

func (x *GxConfig) ProtoReflect() protoreflect.Message {
	mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GxConfig.ProtoReflect.Descriptor instead.
func (*GxConfig) Descriptor() ([]byte, []int) {
	return file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDescGZIP(), []int{3}
}

func (x *GxConfig) GetServer() *DiamClientConfig {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *GxConfig) GetServers() []*DiamClientConfig {
	if x != nil {
		return x.Servers
	}
	return nil
}

func (x *GxConfig) GetDisableGx() bool {
	if x != nil {
		return x.DisableGx
	}
	return false
}

type GyConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server     *DiamClientConfig   `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	InitMethod GyInitMethod        `protobuf:"varint,2,opt,name=init_method,json=initMethod,proto3,enum=feg.GyInitMethod" json:"init_method,omitempty"`
	Servers    []*DiamClientConfig `protobuf:"bytes,3,rep,name=servers,proto3" json:"servers,omitempty"`
	DisableGy  bool                `protobuf:"varint,4,opt,name=DisableGy,proto3" json:"DisableGy,omitempty"`
}

func (x *GyConfig) Reset() {
	*x = GyConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GyConfig) ProtoMessage() {}

func (x *GyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GyConfig.ProtoReflect.Descriptor instead.
func (*GyConfig) Descriptor() ([]byte, []int) {
	return file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDescGZIP(), []int{4}
}

func (x *GyConfig) GetServer() *DiamClientConfig {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *GyConfig) GetInitMethod() GyInitMethod {
	if x != nil {
		return x.InitMethod
	}
	return GyInitMethod_RESERVED
}

func (x *GyConfig) GetServers() []*DiamClientConfig {
	if x != nil {
		return x.Servers
	}
	return nil
}

func (x *GyConfig) GetDisableGy() bool {
	if x != nil {
		return x.DisableGy
	}
	return false
}

type SwxConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server *DiamClientConfig `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	// After auth, verify Non-3GPP IP Access enabled
	VerifyAuthorization bool                `protobuf:"varint,2,opt,name=verify_authorization,json=verifyAuthorization,proto3" json:"verify_authorization,omitempty"`
	CacheTTLSeconds     uint32              `protobuf:"varint,3,opt,name=CacheTTLSeconds,proto3" json:"CacheTTLSeconds,omitempty"`
	Servers             []*DiamClientConfig `protobuf:"bytes,4,rep,name=servers,proto3" json:"servers,omitempty"`
}

func (x *SwxConfig) Reset() {
	*x = SwxConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwxConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwxConfig) ProtoMessage() {}

func (x *SwxConfig) ProtoReflect() protoreflect.Message {
	mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwxConfig.ProtoReflect.Descriptor instead.
func (*SwxConfig) Descriptor() ([]byte, []int) {
	return file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDescGZIP(), []int{5}
}

func (x *SwxConfig) GetServer() *DiamClientConfig {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *SwxConfig) GetVerifyAuthorization() bool {
	if x != nil {
		return x.VerifyAuthorization
	}
	return false
}

func (x *SwxConfig) GetCacheTTLSeconds() uint32 {
	if x != nil {
		return x.CacheTTLSeconds
	}
	return 0
}

func (x *SwxConfig) GetServers() []*DiamClientConfig {
	if x != nil {
		return x.Servers
	}
	return nil
}

type HSSConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server *DiamServerConfig `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	// Operator configuration field for LTE.
	LteAuthOp []byte `protobuf:"bytes,2,opt,name=lte_auth_op,json=lteAuthOp,proto3" json:"lte_auth_op,omitempty"`
	// Authentication management field for LTE.
	LteAuthAmf []byte `protobuf:"bytes,3,opt,name=lte_auth_amf,json=lteAuthAmf,proto3" json:"lte_auth_amf,omitempty"`
	// Maps from IMSI to SubscriptionProfile.
	SubProfiles map[string]*HSSConfig_SubscriptionProfile `protobuf:"bytes,4,rep,name=sub_profiles,json=subProfiles,proto3" json:"sub_profiles,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// If an IMSI if not found in sub_profiles, the default profile is used instead.
	DefaultSubProfile *HSSConfig_SubscriptionProfile `protobuf:"bytes,5,opt,name=default_sub_profile,json=defaultSubProfile,proto3" json:"default_sub_profile,omitempty"`
	// Whether to stream subscribers from the cloud subscriberdb service.
	StreamSubscribers bool `protobuf:"varint,6,opt,name=stream_subscribers,json=streamSubscribers,proto3" json:"stream_subscribers,omitempty"`
}

func (x *HSSConfig) Reset() {
	*x = HSSConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HSSConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HSSConfig) ProtoMessage() {}

func (x *HSSConfig) ProtoReflect() protoreflect.Message {
	mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HSSConfig.ProtoReflect.Descriptor instead.
func (*HSSConfig) Descriptor() ([]byte, []int) {
	return file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDescGZIP(), []int{6}
}

func (x *HSSConfig) GetServer() *DiamServerConfig {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *HSSConfig) GetLteAuthOp() []byte {
	if x != nil {
		return x.LteAuthOp
	}
	return nil
}

func (x *HSSConfig) GetLteAuthAmf() []byte {
	if x != nil {
		return x.LteAuthAmf
	}
	return nil
}

func (x *HSSConfig) GetSubProfiles() map[string]*HSSConfig_SubscriptionProfile {
	if x != nil {
		return x.SubProfiles
	}
	return nil
}

func (x *HSSConfig) GetDefaultSubProfile() *HSSConfig_SubscriptionProfile {
	if x != nil {
		return x.DefaultSubProfile
	}
	return nil
}

func (x *HSSConfig) GetStreamSubscribers() bool {
	if x != nil {
		return x.StreamSubscribers
	}
	return false
}

type HealthConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Services the health service is responsible for tracking
	HealthServices []string `protobuf:"bytes,1,rep,name=health_services,json=healthServices,proto3" json:"health_services,omitempty"`
	// Frequency of FeG health manager updates to the cloud
	UpdateIntervalSecs uint32 `protobuf:"varint,2,opt,name=update_interval_secs,json=updateIntervalSecs,proto3" json:"update_interval_secs,omitempty"`
	// Period to disable connection creation when requested to from cloud
	CloudDisablePeriodSecs uint32 `protobuf:"varint,3,opt,name=cloud_disable_period_secs,json=cloudDisablePeriodSecs,proto3" json:"cloud_disable_period_secs,omitempty"`
	// Period to disable connection creation when locally determined
	LocalDisablePeriodSecs uint32 `protobuf:"varint,4,opt,name=local_disable_period_secs,json=localDisablePeriodSecs,proto3" json:"local_disable_period_secs,omitempty"`
	// The number of consecutive health update failures before locally disabling
	UpdateFailureThreshold uint32 `protobuf:"varint,5,opt,name=update_failure_threshold,json=updateFailureThreshold,proto3" json:"update_failure_threshold,omitempty"`
	// Percentage of request failures considered to be unhealthy
	RequestFailureThreshold float32 `protobuf:"fixed32,6,opt,name=request_failure_threshold,json=requestFailureThreshold,proto3" json:"request_failure_threshold,omitempty"`
	// Minimum number of requests necessary to consider a metrics interval valid
	MinimumRequestThreshold uint32 `protobuf:"varint,7,opt,name=minimum_request_threshold,json=minimumRequestThreshold,proto3" json:"minimum_request_threshold,omitempty"`
	// Cpu utilization healthy threshold
	CpuUtilizationThreshold float32 `protobuf:"fixed32,8,opt,name=cpu_utilization_threshold,json=cpuUtilizationThreshold,proto3" json:"cpu_utilization_threshold,omitempty"`
	// Available memory healthy threshold
	MemoryAvailableThreshold float32 `protobuf:"fixed32,9,opt,name=memory_available_threshold,json=memoryAvailableThreshold,proto3" json:"memory_available_threshold,omitempty"`
}

func (x *HealthConfig) Reset() {
	*x = HealthConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthConfig) ProtoMessage() {}

func (x *HealthConfig) ProtoReflect() protoreflect.Message {
	mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthConfig.ProtoReflect.Descriptor instead.
func (*HealthConfig) Descriptor() ([]byte, []int) {
	return file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDescGZIP(), []int{7}
}

func (x *HealthConfig) GetHealthServices() []string {
	if x != nil {
		return x.HealthServices
	}
	return nil
}

func (x *HealthConfig) GetUpdateIntervalSecs() uint32 {
	if x != nil {
		return x.UpdateIntervalSecs
	}
	return 0
}

func (x *HealthConfig) GetCloudDisablePeriodSecs() uint32 {
	if x != nil {
		return x.CloudDisablePeriodSecs
	}
	return 0
}

func (x *HealthConfig) GetLocalDisablePeriodSecs() uint32 {
	if x != nil {
		return x.LocalDisablePeriodSecs
	}
	return 0
}

func (x *HealthConfig) GetUpdateFailureThreshold() uint32 {
	if x != nil {
		return x.UpdateFailureThreshold
	}
	return 0
}

func (x *HealthConfig) GetRequestFailureThreshold() float32 {
	if x != nil {
		return x.RequestFailureThreshold
	}
	return 0
}

func (x *HealthConfig) GetMinimumRequestThreshold() uint32 {
	if x != nil {
		return x.MinimumRequestThreshold
	}
	return 0
}

func (x *HealthConfig) GetCpuUtilizationThreshold() float32 {
	if x != nil {
		return x.CpuUtilizationThreshold
	}
	return 0
}

func (x *HealthConfig) GetMemoryAvailableThreshold() float32 {
	if x != nil {
		return x.MemoryAvailableThreshold
	}
	return 0
}

type EapAkaConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timeout *EapAkaConfig_Timeouts `protobuf:"bytes,1,opt,name=timeout,proto3" json:"timeout,omitempty"`
	PlmnIds []string               `protobuf:"bytes,2,rep,name=PlmnIds,proto3" json:"PlmnIds,omitempty"`
}

func (x *EapAkaConfig) Reset() {
	*x = EapAkaConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EapAkaConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EapAkaConfig) ProtoMessage() {}

func (x *EapAkaConfig) ProtoReflect() protoreflect.Message {
	mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EapAkaConfig.ProtoReflect.Descriptor instead.
func (*EapAkaConfig) Descriptor() ([]byte, []int) {
	return file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDescGZIP(), []int{8}
}

func (x *EapAkaConfig) GetTimeout() *EapAkaConfig_Timeouts {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *EapAkaConfig) GetPlmnIds() []string {
	if x != nil {
		return x.PlmnIds
	}
	return nil
}

// EapProviderTimeouts is a generic EAP provider timeout config for all new providers
// TODO: It should eventually replace EapAkaConfig as well, but due to the braking nature
// of the switch farther planning is required
type EapProviderTimeouts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChallengeMs            uint32 `protobuf:"varint,1,opt,name=ChallengeMs,proto3" json:"ChallengeMs,omitempty"`
	ErrorNotificationMs    uint32 `protobuf:"varint,2,opt,name=ErrorNotificationMs,proto3" json:"ErrorNotificationMs,omitempty"`
	SessionMs              uint32 `protobuf:"varint,3,opt,name=SessionMs,proto3" json:"SessionMs,omitempty"`
	SessionAuthenticatedMs uint32 `protobuf:"varint,4,opt,name=SessionAuthenticatedMs,proto3" json:"SessionAuthenticatedMs,omitempty"`
}

func (x *EapProviderTimeouts) Reset() {
	*x = EapProviderTimeouts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EapProviderTimeouts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EapProviderTimeouts) ProtoMessage() {}

func (x *EapProviderTimeouts) ProtoReflect() protoreflect.Message {
	mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EapProviderTimeouts.ProtoReflect.Descriptor instead.
func (*EapProviderTimeouts) Descriptor() ([]byte, []int) {
	return file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDescGZIP(), []int{9}
}

func (x *EapProviderTimeouts) GetChallengeMs() uint32 {
	if x != nil {
		return x.ChallengeMs
	}
	return 0
}

func (x *EapProviderTimeouts) GetErrorNotificationMs() uint32 {
	if x != nil {
		return x.ErrorNotificationMs
	}
	return 0
}

func (x *EapProviderTimeouts) GetSessionMs() uint32 {
	if x != nil {
		return x.SessionMs
	}
	return 0
}

func (x *EapProviderTimeouts) GetSessionAuthenticatedMs() uint32 {
	if x != nil {
		return x.SessionAuthenticatedMs
	}
	return 0
}

type EapSimConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timeout *EapProviderTimeouts `protobuf:"bytes,1,opt,name=timeout,proto3" json:"timeout,omitempty"`
	PlmnIds []string             `protobuf:"bytes,2,rep,name=PlmnIds,proto3" json:"PlmnIds,omitempty"`
}

func (x *EapSimConfig) Reset() {
	*x = EapSimConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EapSimConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EapSimConfig) ProtoMessage() {}

func (x *EapSimConfig) ProtoReflect() protoreflect.Message {
	mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EapSimConfig.ProtoReflect.Descriptor instead.
func (*EapSimConfig) Descriptor() ([]byte, []int) {
	return file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDescGZIP(), []int{10}
}

func (x *EapSimConfig) GetTimeout() *EapProviderTimeouts {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *EapSimConfig) GetPlmnIds() []string {
	if x != nil {
		return x.PlmnIds
	}
	return nil
}

type AAAConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdleSessionTimeoutMs uint32 `protobuf:"varint,1,opt,name=IdleSessionTimeoutMs,proto3" json:"IdleSessionTimeoutMs,omitempty"` // Idle session TTL
	AccountingEnabled    bool   `protobuf:"varint,2,opt,name=AccountingEnabled,proto3" json:"AccountingEnabled,omitempty"`       // enable accounting & maintain long term user sessions
	CreateSessionOnAuth  bool   `protobuf:"varint,3,opt,name=CreateSessionOnAuth,proto3" json:"CreateSessionOnAuth,omitempty"`   // Postpone Auth success until successful accounting CreateSession completion
	AcctReportingEnabled bool   `protobuf:"varint,4,opt,name=AcctReportingEnabled,proto3" json:"AcctReportingEnabled,omitempty"` // enable accounting reporting to the module's orc8r service
}

func (x *AAAConfig) Reset() {
	*x = AAAConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AAAConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AAAConfig) ProtoMessage() {}

func (x *AAAConfig) ProtoReflect() protoreflect.Message {
	mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AAAConfig.ProtoReflect.Descriptor instead.
func (*AAAConfig) Descriptor() ([]byte, []int) {
	return file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDescGZIP(), []int{11}
}

func (x *AAAConfig) GetIdleSessionTimeoutMs() uint32 {
	if x != nil {
		return x.IdleSessionTimeoutMs
	}
	return 0
}

func (x *AAAConfig) GetAccountingEnabled() bool {
	if x != nil {
		return x.AccountingEnabled
	}
	return false
}

func (x *AAAConfig) GetCreateSessionOnAuth() bool {
	if x != nil {
		return x.CreateSessionOnAuth
	}
	return false
}

func (x *AAAConfig) GetAcctReportingEnabled() bool {
	if x != nil {
		return x.AcctReportingEnabled
	}
	return false
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// FeG config params
	S6A              *S6AConfig    `protobuf:"bytes,4,opt,name=s6a,proto3" json:"s6a,omitempty"`
	Gx               *GxConfig     `protobuf:"bytes,5,opt,name=gx,proto3" json:"gx,omitempty"`
	Gy               *GyConfig     `protobuf:"bytes,6,opt,name=gy,proto3" json:"gy,omitempty"`
	ServedNetworkIds []string      `protobuf:"bytes,7,rep,name=served_network_ids,json=servedNetworkIds,proto3" json:"served_network_ids,omitempty"`
	Hss              *HSSConfig    `protobuf:"bytes,8,opt,name=hss,proto3" json:"hss,omitempty"`
	Swx              *SwxConfig    `protobuf:"bytes,9,opt,name=swx,proto3" json:"swx,omitempty"`
	Health           *HealthConfig `protobuf:"bytes,10,opt,name=health,proto3" json:"health,omitempty"`
	EapAka           *EapAkaConfig `protobuf:"bytes,11,opt,name=eap_aka,json=eapAka,proto3" json:"eap_aka,omitempty"`
	AaaServer        *AAAConfig    `protobuf:"bytes,12,opt,name=aaa_server,json=aaaServer,proto3" json:"aaa_server,omitempty"`
	EapSim           *EapSimConfig `protobuf:"bytes,13,opt,name=eap_sim,json=eapSim,proto3" json:"eap_sim,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDescGZIP(), []int{12}
}

func (x *Config) GetS6A() *S6AConfig {
	if x != nil {
		return x.S6A
	}
	return nil
}

func (x *Config) GetGx() *GxConfig {
	if x != nil {
		return x.Gx
	}
	return nil
}

func (x *Config) GetGy() *GyConfig {
	if x != nil {
		return x.Gy
	}
	return nil
}

func (x *Config) GetServedNetworkIds() []string {
	if x != nil {
		return x.ServedNetworkIds
	}
	return nil
}

func (x *Config) GetHss() *HSSConfig {
	if x != nil {
		return x.Hss
	}
	return nil
}

func (x *Config) GetSwx() *SwxConfig {
	if x != nil {
		return x.Swx
	}
	return nil
}

func (x *Config) GetHealth() *HealthConfig {
	if x != nil {
		return x.Health
	}
	return nil
}

func (x *Config) GetEapAka() *EapAkaConfig {
	if x != nil {
		return x.EapAka
	}
	return nil
}

func (x *Config) GetAaaServer() *AAAConfig {
	if x != nil {
		return x.AaaServer
	}
	return nil
}

func (x *Config) GetEapSim() *EapSimConfig {
	if x != nil {
		return x.EapSim
	}
	return nil
}

type HSSConfig_SubscriptionProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Maximum uplink bit rate (AMBR-UL)
	MaxUlBitRate uint64 `protobuf:"varint,1,opt,name=max_ul_bit_rate,json=maxUlBitRate,proto3" json:"max_ul_bit_rate,omitempty"`
	// Maximum downlink bit rate (AMBR-DL)
	MaxDlBitRate uint64 `protobuf:"varint,2,opt,name=max_dl_bit_rate,json=maxDlBitRate,proto3" json:"max_dl_bit_rate,omitempty"`
}

func (x *HSSConfig_SubscriptionProfile) Reset() {
	*x = HSSConfig_SubscriptionProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HSSConfig_SubscriptionProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HSSConfig_SubscriptionProfile) ProtoMessage() {}

func (x *HSSConfig_SubscriptionProfile) ProtoReflect() protoreflect.Message {
	mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HSSConfig_SubscriptionProfile.ProtoReflect.Descriptor instead.
func (*HSSConfig_SubscriptionProfile) Descriptor() ([]byte, []int) {
	return file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDescGZIP(), []int{6, 0}
}

func (x *HSSConfig_SubscriptionProfile) GetMaxUlBitRate() uint64 {
	if x != nil {
		return x.MaxUlBitRate
	}
	return 0
}

func (x *HSSConfig_SubscriptionProfile) GetMaxDlBitRate() uint64 {
	if x != nil {
		return x.MaxDlBitRate
	}
	return 0
}

type EapAkaConfig_Timeouts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChallengeMs            uint32 `protobuf:"varint,1,opt,name=ChallengeMs,proto3" json:"ChallengeMs,omitempty"`
	ErrorNotificationMs    uint32 `protobuf:"varint,2,opt,name=ErrorNotificationMs,proto3" json:"ErrorNotificationMs,omitempty"`
	SessionMs              uint32 `protobuf:"varint,3,opt,name=SessionMs,proto3" json:"SessionMs,omitempty"`
	SessionAuthenticatedMs uint32 `protobuf:"varint,4,opt,name=SessionAuthenticatedMs,proto3" json:"SessionAuthenticatedMs,omitempty"`
}

func (x *EapAkaConfig_Timeouts) Reset() {
	*x = EapAkaConfig_Timeouts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EapAkaConfig_Timeouts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EapAkaConfig_Timeouts) ProtoMessage() {}

func (x *EapAkaConfig_Timeouts) ProtoReflect() protoreflect.Message {
	mi := &file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EapAkaConfig_Timeouts.ProtoReflect.Descriptor instead.
func (*EapAkaConfig_Timeouts) Descriptor() ([]byte, []int) {
	return file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDescGZIP(), []int{8, 0}
}

func (x *EapAkaConfig_Timeouts) GetChallengeMs() uint32 {
	if x != nil {
		return x.ChallengeMs
	}
	return 0
}

func (x *EapAkaConfig_Timeouts) GetErrorNotificationMs() uint32 {
	if x != nil {
		return x.ErrorNotificationMs
	}
	return 0
}

func (x *EapAkaConfig_Timeouts) GetSessionMs() uint32 {
	if x != nil {
		return x.SessionMs
	}
	return 0
}

func (x *EapAkaConfig_Timeouts) GetSessionAuthenticatedMs() uint32 {
	if x != nil {
		return x.SessionAuthenticatedMs
	}
	return 0
}

var File_feg_cloud_go_services_controller_protos_feg_config_proto protoreflect.FileDescriptor

var file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDesc = []byte{
	0x0a, 0x38, 0x66, 0x65, 0x67, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x66, 0x65, 0x67, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x66, 0x65, 0x67, 0x22,
	0xe6, 0x02, 0x0a, 0x10, 0x44, 0x69, 0x61, 0x6d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x72, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x11,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x77, 0x61, 0x74, 0x63, 0x68, 0x64, 0x6f,
	0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74,
	0x72, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x72, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x65, 0x73, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x65, 0x73, 0x74, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x10, 0x44, 0x69, 0x61,
	0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x74,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73,
	0x74, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x61, 0x6c, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x61, 0x6c, 0x6d, 0x22, 0x54, 0x0a, 0x09, 0x53, 0x36, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x44, 0x69, 0x61, 0x6d, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x08, 0x47,
	0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x44, 0x69,
	0x61, 0x6d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x44, 0x69,
	0x61, 0x6d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x47, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x47, 0x78, 0x22, 0xbc, 0x01, 0x0a, 0x08, 0x47, 0x79, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x44, 0x69, 0x61, 0x6d, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x32, 0x0a, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x47, 0x79, 0x49,
	0x6e, 0x69, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x44, 0x69, 0x61,
	0x6d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x47, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x47, 0x79, 0x22, 0xc8, 0x01, 0x0a, 0x09, 0x53, 0x77, 0x78, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x44, 0x69, 0x61, 0x6d, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x31, 0x0a, 0x14, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x54, 0x54, 0x4c,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x54, 0x54, 0x4c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2f,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x44, 0x69, 0x61, 0x6d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x22,
	0x8c, 0x04, 0x0a, 0x09, 0x48, 0x53, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2d, 0x0a,
	0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x66, 0x65, 0x67, 0x2e, 0x44, 0x69, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0b,
	0x6c, 0x74, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x6c, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x4f, 0x70, 0x12, 0x20, 0x0a, 0x0c,
	0x6c, 0x74, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x61, 0x6d, 0x66, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x6c, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x41, 0x6d, 0x66, 0x12, 0x42,
	0x0a, 0x0c, 0x73, 0x75, 0x62, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x48, 0x53, 0x53, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x75, 0x62, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x12, 0x52, 0x0a, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x75,
	0x62, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x48, 0x53, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x75, 0x62, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x11, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x73, 0x1a, 0x63, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0f,
	0x6d, 0x61, 0x78, 0x5f, 0x75, 0x6c, 0x5f, 0x62, 0x69, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x55, 0x6c, 0x42, 0x69, 0x74, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x6c, 0x5f, 0x62, 0x69,
	0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x61,
	0x78, 0x44, 0x6c, 0x42, 0x69, 0x74, 0x52, 0x61, 0x74, 0x65, 0x1a, 0x62, 0x0a, 0x10, 0x53, 0x75,
	0x62, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x48, 0x53, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8b,
	0x04, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x27, 0x0a, 0x0f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x63, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x73, 0x12, 0x39, 0x0a, 0x19, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x53, 0x65, 0x63, 0x73, 0x12, 0x39, 0x0a, 0x19, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73, 0x65,
	0x63, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x63, 0x73,
	0x12, 0x38, 0x0a, 0x18, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x16, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x3a, 0x0a, 0x19, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x17, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x54, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x3a, 0x0a, 0x19, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75,
	0x6d, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x6d, 0x69, 0x6e, 0x69, 0x6d,
	0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x12, 0x3a, 0x0a, 0x19, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x17, 0x63, 0x70, 0x75, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x3c,
	0x0a, 0x1a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x18, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0x95, 0x02, 0x0a,
	0x0c, 0x45, 0x61, 0x70, 0x41, 0x6b, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x0a,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x66, 0x65, 0x67, 0x2e, 0x45, 0x61, 0x70, 0x41, 0x6b, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x73, 0x1a, 0xb4, 0x01,
	0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4d, 0x73, 0x12, 0x30, 0x0a, 0x13,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x12, 0x36, 0x0a, 0x16,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x4d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x4d, 0x73, 0x22, 0xbf, 0x01, 0x0a, 0x13, 0x45, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4d, 0x73, 0x12, 0x30,
	0x0a, 0x13, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x12, 0x36,
	0x0a, 0x16, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x4d, 0x73, 0x22, 0x5c, 0x0a, 0x0c, 0x45, 0x61, 0x70, 0x53, 0x69, 0x6d,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x32, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x45, 0x61,
	0x70, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x73, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x6c,
	0x6d, 0x6e, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x50, 0x6c, 0x6d,
	0x6e, 0x49, 0x64, 0x73, 0x22, 0xd3, 0x01, 0x0a, 0x09, 0x41, 0x41, 0x41, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x32, 0x0a, 0x14, 0x49, 0x64, 0x6c, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x14, 0x49, 0x64, 0x6c, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x4d, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x41, 0x63, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x8c, 0x03, 0x0a, 0x06, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20, 0x0a, 0x03, 0x73, 0x36, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x53, 0x36, 0x61, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x03, 0x73, 0x36, 0x61, 0x12, 0x1d, 0x0a, 0x02, 0x67, 0x78, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x47, 0x78, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x02, 0x67, 0x78, 0x12, 0x1d, 0x0a, 0x02, 0x67, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x47, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x02, 0x67, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x49, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x03, 0x68, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x48, 0x53, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x03, 0x68, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x03, 0x73, 0x77, 0x78, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x53, 0x77, 0x78, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x03, 0x73, 0x77, 0x78, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x12, 0x2a, 0x0a, 0x07, 0x65, 0x61, 0x70, 0x5f, 0x61, 0x6b, 0x61, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x45, 0x61, 0x70, 0x41, 0x6b, 0x61,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x65, 0x61, 0x70, 0x41, 0x6b, 0x61, 0x12, 0x2d,
	0x0a, 0x0a, 0x61, 0x61, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x41, 0x41, 0x41, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x09, 0x61, 0x61, 0x61, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x2a, 0x0a,
	0x07, 0x65, 0x61, 0x70, 0x5f, 0x73, 0x69, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x66, 0x65, 0x67, 0x2e, 0x45, 0x61, 0x70, 0x53, 0x69, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x06, 0x65, 0x61, 0x70, 0x53, 0x69, 0x6d, 0x2a, 0x3a, 0x0a, 0x0c, 0x47, 0x79, 0x49,
	0x6e, 0x69, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x53,
	0x45, 0x52, 0x56, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x45, 0x52, 0x5f, 0x53,
	0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x52, 0x5f,
	0x4b, 0x45, 0x59, 0x10, 0x02, 0x42, 0x2f, 0x5a, 0x2d, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2f, 0x66,
	0x65, 0x67, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDescOnce sync.Once
	file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDescData = file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDesc
)

func file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDescGZIP() []byte {
	file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDescOnce.Do(func() {
		file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDescData)
	})
	return file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDescData
}

var file_feg_cloud_go_services_controller_protos_feg_config_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_feg_cloud_go_services_controller_protos_feg_config_proto_goTypes = []interface{}{
	(GyInitMethod)(0),                     // 0: feg.GyInitMethod
	(*DiamClientConfig)(nil),              // 1: feg.DiamClientConfig
	(*DiamServerConfig)(nil),              // 2: feg.DiamServerConfig
	(*S6AConfig)(nil),                     // 3: feg.S6aConfig
	(*GxConfig)(nil),                      // 4: feg.GxConfig
	(*GyConfig)(nil),                      // 5: feg.GyConfig
	(*SwxConfig)(nil),                     // 6: feg.SwxConfig
	(*HSSConfig)(nil),                     // 7: feg.HSSConfig
	(*HealthConfig)(nil),                  // 8: feg.HealthConfig
	(*EapAkaConfig)(nil),                  // 9: feg.EapAkaConfig
	(*EapProviderTimeouts)(nil),           // 10: feg.EapProviderTimeouts
	(*EapSimConfig)(nil),                  // 11: feg.EapSimConfig
	(*AAAConfig)(nil),                     // 12: feg.AAAConfig
	(*Config)(nil),                        // 13: feg.Config
	(*HSSConfig_SubscriptionProfile)(nil), // 14: feg.HSSConfig.SubscriptionProfile
	nil,                                   // 15: feg.HSSConfig.SubProfilesEntry
	(*EapAkaConfig_Timeouts)(nil),         // 16: feg.EapAkaConfig.Timeouts
}
var file_feg_cloud_go_services_controller_protos_feg_config_proto_depIdxs = []int32{
	1,  // 0: feg.S6aConfig.server:type_name -> feg.DiamClientConfig
	1,  // 1: feg.GxConfig.server:type_name -> feg.DiamClientConfig
	1,  // 2: feg.GxConfig.servers:type_name -> feg.DiamClientConfig
	1,  // 3: feg.GyConfig.server:type_name -> feg.DiamClientConfig
	0,  // 4: feg.GyConfig.init_method:type_name -> feg.GyInitMethod
	1,  // 5: feg.GyConfig.servers:type_name -> feg.DiamClientConfig
	1,  // 6: feg.SwxConfig.server:type_name -> feg.DiamClientConfig
	1,  // 7: feg.SwxConfig.servers:type_name -> feg.DiamClientConfig
	2,  // 8: feg.HSSConfig.server:type_name -> feg.DiamServerConfig
	15, // 9: feg.HSSConfig.sub_profiles:type_name -> feg.HSSConfig.SubProfilesEntry
	14, // 10: feg.HSSConfig.default_sub_profile:type_name -> feg.HSSConfig.SubscriptionProfile
	16, // 11: feg.EapAkaConfig.timeout:type_name -> feg.EapAkaConfig.Timeouts
	10, // 12: feg.EapSimConfig.timeout:type_name -> feg.EapProviderTimeouts
	3,  // 13: feg.Config.s6a:type_name -> feg.S6aConfig
	4,  // 14: feg.Config.gx:type_name -> feg.GxConfig
	5,  // 15: feg.Config.gy:type_name -> feg.GyConfig
	7,  // 16: feg.Config.hss:type_name -> feg.HSSConfig
	6,  // 17: feg.Config.swx:type_name -> feg.SwxConfig
	8,  // 18: feg.Config.health:type_name -> feg.HealthConfig
	9,  // 19: feg.Config.eap_aka:type_name -> feg.EapAkaConfig
	12, // 20: feg.Config.aaa_server:type_name -> feg.AAAConfig
	11, // 21: feg.Config.eap_sim:type_name -> feg.EapSimConfig
	14, // 22: feg.HSSConfig.SubProfilesEntry.value:type_name -> feg.HSSConfig.SubscriptionProfile
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_feg_cloud_go_services_controller_protos_feg_config_proto_init() }
func file_feg_cloud_go_services_controller_protos_feg_config_proto_init() {
	if File_feg_cloud_go_services_controller_protos_feg_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiamClientConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiamServerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S6AConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GxConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GyConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwxConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HSSConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EapAkaConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EapProviderTimeouts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EapSimConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AAAConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HSSConfig_SubscriptionProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EapAkaConfig_Timeouts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_feg_cloud_go_services_controller_protos_feg_config_proto_goTypes,
		DependencyIndexes: file_feg_cloud_go_services_controller_protos_feg_config_proto_depIdxs,
		EnumInfos:         file_feg_cloud_go_services_controller_protos_feg_config_proto_enumTypes,
		MessageInfos:      file_feg_cloud_go_services_controller_protos_feg_config_proto_msgTypes,
	}.Build()
	File_feg_cloud_go_services_controller_protos_feg_config_proto = out.File
	file_feg_cloud_go_services_controller_protos_feg_config_proto_rawDesc = nil
	file_feg_cloud_go_services_controller_protos_feg_config_proto_goTypes = nil
	file_feg_cloud_go_services_controller_protos_feg_config_proto_depIdxs = nil
}
