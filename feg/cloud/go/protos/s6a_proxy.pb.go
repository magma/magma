//
//Copyright 2020 The Magma Authors.
//
//This source code is licensed under the BSD-style license found in the
//LICENSE file in the root directory of this source tree.
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

//
// This is a proxy for Diamater application S6a/S6d 3GPP 29.272
// It is watered down for use with OpenAirInterface EPC with extensibility in mind
//
// For details about fields see:
// http://www.etsi.org/deliver/etsi_ts/129200_129299/129272/10.09.00_60/ts_129272v100900p.pdf

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.10.0
// source: feg/protos/s6a_proxy.proto

package protos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ErrorCode reflects Experimental-Result values which are 3GPP failures
// to be processed by EPC. Diameter Base Protocol errors are reflected in gRPC status code
type ErrorCode int32

const (
	ErrorCode_UNDEFINED ErrorCode = 0
	// Default success code
	ErrorCode_MULTI_ROUND_AUTH        ErrorCode = 1001
	ErrorCode_SUCCESS                 ErrorCode = 2001
	ErrorCode_LIMITED_SUCCESS         ErrorCode = 2002
	ErrorCode_COMMAND_UNSUPPORTED     ErrorCode = 3001
	ErrorCode_UNABLE_TO_DELIVER       ErrorCode = 3002
	ErrorCode_REALM_NOT_SERVED        ErrorCode = 3003
	ErrorCode_TOO_BUSY                ErrorCode = 3004
	ErrorCode_LOOP_DETECTED           ErrorCode = 3005
	ErrorCode_REDIRECT_INDICATION     ErrorCode = 3006
	ErrorCode_APPLICATION_UNSUPPORTED ErrorCode = 3007
	ErrorCode_INVALID_HDR_BITS        ErrorCode = 3008
	ErrorCode_INVALID_AVP_BITS        ErrorCode = 3009
	ErrorCode_UNKNOWN_PEER            ErrorCode = 3010
	ErrorCode_AUTHENTICATION_REJECTED ErrorCode = 4001
	ErrorCode_OUT_OF_SPACE            ErrorCode = 4002
	ErrorCode_ELECTION_LOST           ErrorCode = 4003
	ErrorCode_AUTHORIZATION_REJECTED  ErrorCode = 5003
	// Permanent Failures 7.4.3
	ErrorCode_USER_UNKNOWN             ErrorCode = 5001
	ErrorCode_UNKNOWN_SESSION_ID       ErrorCode = 5002
	ErrorCode_UNKNOWN_EPS_SUBSCRIPTION ErrorCode = 5420
	ErrorCode_RAT_NOT_ALLOWED          ErrorCode = 5421
	ErrorCode_ROAMING_NOT_ALLOWED      ErrorCode = 5004
	ErrorCode_EQUIPMENT_UNKNOWN        ErrorCode = 5422
	ErrorCode_UNKNOWN_SERVING_NODE     ErrorCode = 5423
	// Transient Failures 7.4.4
	ErrorCode_AUTHENTICATION_DATA_UNAVAILABLE ErrorCode = 4181
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:    "UNDEFINED",
		1001: "MULTI_ROUND_AUTH",
		2001: "SUCCESS",
		2002: "LIMITED_SUCCESS",
		3001: "COMMAND_UNSUPPORTED",
		3002: "UNABLE_TO_DELIVER",
		3003: "REALM_NOT_SERVED",
		3004: "TOO_BUSY",
		3005: "LOOP_DETECTED",
		3006: "REDIRECT_INDICATION",
		3007: "APPLICATION_UNSUPPORTED",
		3008: "INVALID_HDR_BITS",
		3009: "INVALID_AVP_BITS",
		3010: "UNKNOWN_PEER",
		4001: "AUTHENTICATION_REJECTED",
		4002: "OUT_OF_SPACE",
		4003: "ELECTION_LOST",
		5003: "AUTHORIZATION_REJECTED",
		5001: "USER_UNKNOWN",
		5002: "UNKNOWN_SESSION_ID",
		5420: "UNKNOWN_EPS_SUBSCRIPTION",
		5421: "RAT_NOT_ALLOWED",
		5004: "ROAMING_NOT_ALLOWED",
		5422: "EQUIPMENT_UNKNOWN",
		5423: "UNKNOWN_SERVING_NODE",
		4181: "AUTHENTICATION_DATA_UNAVAILABLE",
	}
	ErrorCode_value = map[string]int32{
		"UNDEFINED":                       0,
		"MULTI_ROUND_AUTH":                1001,
		"SUCCESS":                         2001,
		"LIMITED_SUCCESS":                 2002,
		"COMMAND_UNSUPPORTED":             3001,
		"UNABLE_TO_DELIVER":               3002,
		"REALM_NOT_SERVED":                3003,
		"TOO_BUSY":                        3004,
		"LOOP_DETECTED":                   3005,
		"REDIRECT_INDICATION":             3006,
		"APPLICATION_UNSUPPORTED":         3007,
		"INVALID_HDR_BITS":                3008,
		"INVALID_AVP_BITS":                3009,
		"UNKNOWN_PEER":                    3010,
		"AUTHENTICATION_REJECTED":         4001,
		"OUT_OF_SPACE":                    4002,
		"ELECTION_LOST":                   4003,
		"AUTHORIZATION_REJECTED":          5003,
		"USER_UNKNOWN":                    5001,
		"UNKNOWN_SESSION_ID":              5002,
		"UNKNOWN_EPS_SUBSCRIPTION":        5420,
		"RAT_NOT_ALLOWED":                 5421,
		"ROAMING_NOT_ALLOWED":             5004,
		"EQUIPMENT_UNKNOWN":               5422,
		"UNKNOWN_SERVING_NODE":            5423,
		"AUTHENTICATION_DATA_UNAVAILABLE": 4181,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_feg_protos_s6a_proxy_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_feg_protos_s6a_proxy_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{0}
}

// Network Access Mode AVP (Section 7.3.21)
type UpdateLocationAnswer_NetworkAccessMode int32

const (
	UpdateLocationAnswer_PACKET_AND_CIRCUIT UpdateLocationAnswer_NetworkAccessMode = 0
	UpdateLocationAnswer_RESERVED           UpdateLocationAnswer_NetworkAccessMode = 1
	UpdateLocationAnswer_ONLY_PACKET        UpdateLocationAnswer_NetworkAccessMode = 2
)

// Enum value maps for UpdateLocationAnswer_NetworkAccessMode.
var (
	UpdateLocationAnswer_NetworkAccessMode_name = map[int32]string{
		0: "PACKET_AND_CIRCUIT",
		1: "RESERVED",
		2: "ONLY_PACKET",
	}
	UpdateLocationAnswer_NetworkAccessMode_value = map[string]int32{
		"PACKET_AND_CIRCUIT": 0,
		"RESERVED":           1,
		"ONLY_PACKET":        2,
	}
)

func (x UpdateLocationAnswer_NetworkAccessMode) Enum() *UpdateLocationAnswer_NetworkAccessMode {
	p := new(UpdateLocationAnswer_NetworkAccessMode)
	*p = x
	return p
}

func (x UpdateLocationAnswer_NetworkAccessMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateLocationAnswer_NetworkAccessMode) Descriptor() protoreflect.EnumDescriptor {
	return file_feg_protos_s6a_proxy_proto_enumTypes[1].Descriptor()
}

func (UpdateLocationAnswer_NetworkAccessMode) Type() protoreflect.EnumType {
	return &file_feg_protos_s6a_proxy_proto_enumTypes[1]
}

func (x UpdateLocationAnswer_NetworkAccessMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateLocationAnswer_NetworkAccessMode.Descriptor instead.
func (UpdateLocationAnswer_NetworkAccessMode) EnumDescriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{3, 0}
}

type UpdateLocationAnswer_APNConfiguration_PDNType int32

const (
	UpdateLocationAnswer_APNConfiguration_IPV4         UpdateLocationAnswer_APNConfiguration_PDNType = 0
	UpdateLocationAnswer_APNConfiguration_IPV6         UpdateLocationAnswer_APNConfiguration_PDNType = 1
	UpdateLocationAnswer_APNConfiguration_IPV4V6       UpdateLocationAnswer_APNConfiguration_PDNType = 2
	UpdateLocationAnswer_APNConfiguration_IPV4_OR_IPV6 UpdateLocationAnswer_APNConfiguration_PDNType = 3
)

// Enum value maps for UpdateLocationAnswer_APNConfiguration_PDNType.
var (
	UpdateLocationAnswer_APNConfiguration_PDNType_name = map[int32]string{
		0: "IPV4",
		1: "IPV6",
		2: "IPV4V6",
		3: "IPV4_OR_IPV6",
	}
	UpdateLocationAnswer_APNConfiguration_PDNType_value = map[string]int32{
		"IPV4":         0,
		"IPV6":         1,
		"IPV4V6":       2,
		"IPV4_OR_IPV6": 3,
	}
)

func (x UpdateLocationAnswer_APNConfiguration_PDNType) Enum() *UpdateLocationAnswer_APNConfiguration_PDNType {
	p := new(UpdateLocationAnswer_APNConfiguration_PDNType)
	*p = x
	return p
}

func (x UpdateLocationAnswer_APNConfiguration_PDNType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateLocationAnswer_APNConfiguration_PDNType) Descriptor() protoreflect.EnumDescriptor {
	return file_feg_protos_s6a_proxy_proto_enumTypes[2].Descriptor()
}

func (UpdateLocationAnswer_APNConfiguration_PDNType) Type() protoreflect.EnumType {
	return &file_feg_protos_s6a_proxy_proto_enumTypes[2]
}

func (x UpdateLocationAnswer_APNConfiguration_PDNType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateLocationAnswer_APNConfiguration_PDNType.Descriptor instead.
func (UpdateLocationAnswer_APNConfiguration_PDNType) EnumDescriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{3, 0, 0}
}

type UpdateLocationAnswer_AggregatedMaximumBitrate_BitrateUnitsAMBR int32

const (
	UpdateLocationAnswer_AggregatedMaximumBitrate_BPS  UpdateLocationAnswer_AggregatedMaximumBitrate_BitrateUnitsAMBR = 0
	UpdateLocationAnswer_AggregatedMaximumBitrate_KBPS UpdateLocationAnswer_AggregatedMaximumBitrate_BitrateUnitsAMBR = 1
)

// Enum value maps for UpdateLocationAnswer_AggregatedMaximumBitrate_BitrateUnitsAMBR.
var (
	UpdateLocationAnswer_AggregatedMaximumBitrate_BitrateUnitsAMBR_name = map[int32]string{
		0: "BPS",
		1: "KBPS",
	}
	UpdateLocationAnswer_AggregatedMaximumBitrate_BitrateUnitsAMBR_value = map[string]int32{
		"BPS":  0,
		"KBPS": 1,
	}
)

func (x UpdateLocationAnswer_AggregatedMaximumBitrate_BitrateUnitsAMBR) Enum() *UpdateLocationAnswer_AggregatedMaximumBitrate_BitrateUnitsAMBR {
	p := new(UpdateLocationAnswer_AggregatedMaximumBitrate_BitrateUnitsAMBR)
	*p = x
	return p
}

func (x UpdateLocationAnswer_AggregatedMaximumBitrate_BitrateUnitsAMBR) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateLocationAnswer_AggregatedMaximumBitrate_BitrateUnitsAMBR) Descriptor() protoreflect.EnumDescriptor {
	return file_feg_protos_s6a_proxy_proto_enumTypes[3].Descriptor()
}

func (UpdateLocationAnswer_AggregatedMaximumBitrate_BitrateUnitsAMBR) Type() protoreflect.EnumType {
	return &file_feg_protos_s6a_proxy_proto_enumTypes[3]
}

func (x UpdateLocationAnswer_AggregatedMaximumBitrate_BitrateUnitsAMBR) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateLocationAnswer_AggregatedMaximumBitrate_BitrateUnitsAMBR.Descriptor instead.
func (UpdateLocationAnswer_AggregatedMaximumBitrate_BitrateUnitsAMBR) EnumDescriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{3, 1, 0}
}

type CancelLocationRequest_CancellationType int32

const (
	CancelLocationRequest_MME_UPDATE_PROCEDURE     CancelLocationRequest_CancellationType = 0
	CancelLocationRequest_SGSN_UPDATE_PROCEDURE    CancelLocationRequest_CancellationType = 1
	CancelLocationRequest_SUBSCRIPTION_WITHDRAWAL  CancelLocationRequest_CancellationType = 2
	CancelLocationRequest_UPDATE_PROCEDURE_IWF     CancelLocationRequest_CancellationType = 3
	CancelLocationRequest_INITIAL_ATTACH_PROCEDURE CancelLocationRequest_CancellationType = 4
)

// Enum value maps for CancelLocationRequest_CancellationType.
var (
	CancelLocationRequest_CancellationType_name = map[int32]string{
		0: "MME_UPDATE_PROCEDURE",
		1: "SGSN_UPDATE_PROCEDURE",
		2: "SUBSCRIPTION_WITHDRAWAL",
		3: "UPDATE_PROCEDURE_IWF",
		4: "INITIAL_ATTACH_PROCEDURE",
	}
	CancelLocationRequest_CancellationType_value = map[string]int32{
		"MME_UPDATE_PROCEDURE":     0,
		"SGSN_UPDATE_PROCEDURE":    1,
		"SUBSCRIPTION_WITHDRAWAL":  2,
		"UPDATE_PROCEDURE_IWF":     3,
		"INITIAL_ATTACH_PROCEDURE": 4,
	}
)

func (x CancelLocationRequest_CancellationType) Enum() *CancelLocationRequest_CancellationType {
	p := new(CancelLocationRequest_CancellationType)
	*p = x
	return p
}

func (x CancelLocationRequest_CancellationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CancelLocationRequest_CancellationType) Descriptor() protoreflect.EnumDescriptor {
	return file_feg_protos_s6a_proxy_proto_enumTypes[4].Descriptor()
}

func (CancelLocationRequest_CancellationType) Type() protoreflect.EnumType {
	return &file_feg_protos_s6a_proxy_proto_enumTypes[4]
}

func (x CancelLocationRequest_CancellationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CancelLocationRequest_CancellationType.Descriptor instead.
func (CancelLocationRequest_CancellationType) EnumDescriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{4, 0}
}

// Authentication Information Request (Section 7.2.5)
type AuthenticationInformationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Subscriber identifier
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// Visted site identifier
	VisitedPlmn []byte `protobuf:"bytes,2,opt,name=visited_plmn,json=visitedPlmn,proto3" json:"visited_plmn,omitempty"`
	// Number of vectors to request in response
	NumRequestedEutranVectors uint32 `protobuf:"varint,3,opt,name=num_requested_eutran_vectors,json=numRequestedEutranVectors,proto3" json:"num_requested_eutran_vectors,omitempty"`
	// Indicates to the HSS the values are requested for immediate attach
	ImmediateResponsePreferred bool `protobuf:"varint,4,opt,name=immediate_response_preferred,json=immediateResponsePreferred,proto3" json:"immediate_response_preferred,omitempty"`
	// Concatenation of RAND and AUTS in the case of a resync attach case
	ResyncInfo []byte `protobuf:"bytes,5,opt,name=resync_info,json=resyncInfo,proto3" json:"resync_info,omitempty"`
	// Number of UTRAN/GERAN vectors to request in response (optional)
	NumRequestedUtranGeranVectors uint32 `protobuf:"varint,6,opt,name=num_requested_utran_geran_vectors,json=numRequestedUtranGeranVectors,proto3" json:"num_requested_utran_geran_vectors,omitempty"`
	// UTRAN/GERAN Resync Info (optional)
	UtranGeranResyncInfo []byte `protobuf:"bytes,7,opt,name=utran_geran_resync_info,json=utranGeranResyncInfo,proto3" json:"utran_geran_resync_info,omitempty"`
	// Feature List ID as a part of Supported features AVP(Optional)
	FeatureListId_2 *FeatureListId2 `protobuf:"bytes,8,opt,name=feature_list_id_2,json=featureListId2,proto3" json:"feature_list_id_2,omitempty"`
}

func (x *AuthenticationInformationRequest) Reset() {
	*x = AuthenticationInformationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s6a_proxy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationInformationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationInformationRequest) ProtoMessage() {}

func (x *AuthenticationInformationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s6a_proxy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationInformationRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationInformationRequest) Descriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{0}
}

func (x *AuthenticationInformationRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AuthenticationInformationRequest) GetVisitedPlmn() []byte {
	if x != nil {
		return x.VisitedPlmn
	}
	return nil
}

func (x *AuthenticationInformationRequest) GetNumRequestedEutranVectors() uint32 {
	if x != nil {
		return x.NumRequestedEutranVectors
	}
	return 0
}

func (x *AuthenticationInformationRequest) GetImmediateResponsePreferred() bool {
	if x != nil {
		return x.ImmediateResponsePreferred
	}
	return false
}

func (x *AuthenticationInformationRequest) GetResyncInfo() []byte {
	if x != nil {
		return x.ResyncInfo
	}
	return nil
}

func (x *AuthenticationInformationRequest) GetNumRequestedUtranGeranVectors() uint32 {
	if x != nil {
		return x.NumRequestedUtranGeranVectors
	}
	return 0
}

func (x *AuthenticationInformationRequest) GetUtranGeranResyncInfo() []byte {
	if x != nil {
		return x.UtranGeranResyncInfo
	}
	return nil
}

func (x *AuthenticationInformationRequest) GetFeatureListId_2() *FeatureListId2 {
	if x != nil {
		return x.FeatureListId_2
	}
	return nil
}

// Authentication Information Answer (Section 7.2.6)
type AuthenticationInformationAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// EPC error code on failure
	ErrorCode ErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=magma.feg.ErrorCode" json:"error_code,omitempty"`
	// Authentication vectors matching the requested number
	EutranVectors []*AuthenticationInformationAnswer_EUTRANVector `protobuf:"bytes,2,rep,name=eutran_vectors,json=eutranVectors,proto3" json:"eutran_vectors,omitempty"`
	UtranVectors  []*AuthenticationInformationAnswer_UTRANVector  `protobuf:"bytes,3,rep,name=utran_vectors,json=utranVectors,proto3" json:"utran_vectors,omitempty"`
	GeranVectors  []*AuthenticationInformationAnswer_GERANVector  `protobuf:"bytes,4,rep,name=geran_vectors,json=geranVectors,proto3" json:"geran_vectors,omitempty"`
}

func (x *AuthenticationInformationAnswer) Reset() {
	*x = AuthenticationInformationAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s6a_proxy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationInformationAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationInformationAnswer) ProtoMessage() {}

func (x *AuthenticationInformationAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s6a_proxy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationInformationAnswer.ProtoReflect.Descriptor instead.
func (*AuthenticationInformationAnswer) Descriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{1}
}

func (x *AuthenticationInformationAnswer) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_UNDEFINED
}

func (x *AuthenticationInformationAnswer) GetEutranVectors() []*AuthenticationInformationAnswer_EUTRANVector {
	if x != nil {
		return x.EutranVectors
	}
	return nil
}

func (x *AuthenticationInformationAnswer) GetUtranVectors() []*AuthenticationInformationAnswer_UTRANVector {
	if x != nil {
		return x.UtranVectors
	}
	return nil
}

func (x *AuthenticationInformationAnswer) GetGeranVectors() []*AuthenticationInformationAnswer_GERANVector {
	if x != nil {
		return x.GeranVectors
	}
	return nil
}

// Update Location Request (Section 7.2.3)
type UpdateLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Subscriber identifier
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// Visited site identifier
	VisitedPlmn []byte `protobuf:"bytes,2,opt,name=visited_plmn,json=visitedPlmn,proto3" json:"visited_plmn,omitempty"`
	// Selective unrolling of ULR-Flags 29.272 Table 7.3.7/1
	// Skip subscription data in response
	SkipSubscriberData bool `protobuf:"varint,3,opt,name=skip_subscriber_data,json=skipSubscriberData,proto3" json:"skip_subscriber_data,omitempty"` // bit 2
	// Send Cancel Location to other EPCs serving the UE
	InitialAttach bool `protobuf:"varint,4,opt,name=initial_attach,json=initialAttach,proto3" json:"initial_attach,omitempty"` // bit 5
	// Send Dual Registration 5G Indicator
	DualRegistration_5GIndicator bool `protobuf:"varint,5,opt,name=dual_registration_5g_indicator,json=dualRegistration5gIndicator,proto3" json:"dual_registration_5g_indicator,omitempty"` // bit 8
	// Feature List ID 2 as a part of Supported features AVP(Optional)
	FeatureListId_2 *FeatureListId2 `protobuf:"bytes,6,opt,name=feature_list_id_2,json=featureListId2,proto3" json:"feature_list_id_2,omitempty"`
	// Feature List ID 1 as a part of Supported features AVP(Optional)
	FeatureListId_1 *FeatureListId1 `protobuf:"bytes,7,opt,name=feature_list_id_1,json=featureListId1,proto3" json:"feature_list_id_1,omitempty"`
}

func (x *UpdateLocationRequest) Reset() {
	*x = UpdateLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s6a_proxy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationRequest) ProtoMessage() {}

func (x *UpdateLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s6a_proxy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationRequest.ProtoReflect.Descriptor instead.
func (*UpdateLocationRequest) Descriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateLocationRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UpdateLocationRequest) GetVisitedPlmn() []byte {
	if x != nil {
		return x.VisitedPlmn
	}
	return nil
}

func (x *UpdateLocationRequest) GetSkipSubscriberData() bool {
	if x != nil {
		return x.SkipSubscriberData
	}
	return false
}

func (x *UpdateLocationRequest) GetInitialAttach() bool {
	if x != nil {
		return x.InitialAttach
	}
	return false
}

func (x *UpdateLocationRequest) GetDualRegistration_5GIndicator() bool {
	if x != nil {
		return x.DualRegistration_5GIndicator
	}
	return false
}

func (x *UpdateLocationRequest) GetFeatureListId_2() *FeatureListId2 {
	if x != nil {
		return x.FeatureListId_2
	}
	return nil
}

func (x *UpdateLocationRequest) GetFeatureListId_1() *FeatureListId1 {
	if x != nil {
		return x.FeatureListId_1
	}
	return nil
}

// Update Location Answer (Section 7.2.4)
type UpdateLocationAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// EPC error code on failure
	ErrorCode ErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=magma.feg.ErrorCode" json:"error_code,omitempty"`
	// Identifier of the default APN
	DefaultContextId uint32 `protobuf:"varint,2,opt,name=default_context_id,json=defaultContextId,proto3" json:"default_context_id,omitempty"`
	// Subscriber authorized aggregate bitrate
	TotalAmbr *UpdateLocationAnswer_AggregatedMaximumBitrate `protobuf:"bytes,3,opt,name=total_ambr,json=totalAmbr,proto3" json:"total_ambr,omitempty"`
	// Indicates to wipe other stored APNs
	AllApnsIncluded bool `protobuf:"varint,4,opt,name=all_apns_included,json=allApnsIncluded,proto3" json:"all_apns_included,omitempty"`
	// APN configurations
	Apn []*UpdateLocationAnswer_APNConfiguration `protobuf:"bytes,5,rep,name=apn,proto3" json:"apn,omitempty"`
	// Charging characteristics for subscriber that can be overridden by per-APN values
	DefaultChargingCharacteristics string                                 `protobuf:"bytes,6,opt,name=default_charging_characteristics,json=defaultChargingCharacteristics,proto3" json:"default_charging_characteristics,omitempty"`
	Msisdn                         []byte                                 `protobuf:"bytes,7,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
	NetworkAccessMode              UpdateLocationAnswer_NetworkAccessMode `protobuf:"varint,8,opt,name=network_access_mode,json=networkAccessMode,proto3,enum=magma.feg.UpdateLocationAnswer_NetworkAccessMode" json:"network_access_mode,omitempty"`
	RegionalSubscriptionZoneCode   [][]byte                               `protobuf:"bytes,9,rep,name=regional_subscription_zone_code,json=regionalSubscriptionZoneCode,proto3" json:"regional_subscription_zone_code,omitempty"`
	// Feature List ID 2 as a part of Supported features AVP(Optional)
	FeatureListId_2 *FeatureListId2 `protobuf:"bytes,10,opt,name=feature_list_id_2,json=featureListId2,proto3" json:"feature_list_id_2,omitempty"`
	// Feature List ID 1 as a part of Supported features AVP(Optional)
	FeatureListId_1 *FeatureListId1 `protobuf:"bytes,11,opt,name=feature_list_id_1,json=featureListId1,proto3" json:"feature_list_id_1,omitempty"`
}

func (x *UpdateLocationAnswer) Reset() {
	*x = UpdateLocationAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s6a_proxy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLocationAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationAnswer) ProtoMessage() {}

func (x *UpdateLocationAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s6a_proxy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationAnswer.ProtoReflect.Descriptor instead.
func (*UpdateLocationAnswer) Descriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateLocationAnswer) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_UNDEFINED
}

func (x *UpdateLocationAnswer) GetDefaultContextId() uint32 {
	if x != nil {
		return x.DefaultContextId
	}
	return 0
}

func (x *UpdateLocationAnswer) GetTotalAmbr() *UpdateLocationAnswer_AggregatedMaximumBitrate {
	if x != nil {
		return x.TotalAmbr
	}
	return nil
}

func (x *UpdateLocationAnswer) GetAllApnsIncluded() bool {
	if x != nil {
		return x.AllApnsIncluded
	}
	return false
}

func (x *UpdateLocationAnswer) GetApn() []*UpdateLocationAnswer_APNConfiguration {
	if x != nil {
		return x.Apn
	}
	return nil
}

func (x *UpdateLocationAnswer) GetDefaultChargingCharacteristics() string {
	if x != nil {
		return x.DefaultChargingCharacteristics
	}
	return ""
}

func (x *UpdateLocationAnswer) GetMsisdn() []byte {
	if x != nil {
		return x.Msisdn
	}
	return nil
}

func (x *UpdateLocationAnswer) GetNetworkAccessMode() UpdateLocationAnswer_NetworkAccessMode {
	if x != nil {
		return x.NetworkAccessMode
	}
	return UpdateLocationAnswer_PACKET_AND_CIRCUIT
}

func (x *UpdateLocationAnswer) GetRegionalSubscriptionZoneCode() [][]byte {
	if x != nil {
		return x.RegionalSubscriptionZoneCode
	}
	return nil
}

func (x *UpdateLocationAnswer) GetFeatureListId_2() *FeatureListId2 {
	if x != nil {
		return x.FeatureListId_2
	}
	return nil
}

func (x *UpdateLocationAnswer) GetFeatureListId_1() *FeatureListId1 {
	if x != nil {
		return x.FeatureListId_1
	}
	return nil
}

// Cancel Location Request (Section 7.2.7)
type CancelLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Subscriber identifier
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// Type of cancellation 7.3.24
	CancellationType CancelLocationRequest_CancellationType `protobuf:"varint,2,opt,name=cancellation_type,json=cancellationType,proto3,enum=magma.feg.CancelLocationRequest_CancellationType" json:"cancellation_type,omitempty"`
}

func (x *CancelLocationRequest) Reset() {
	*x = CancelLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s6a_proxy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelLocationRequest) ProtoMessage() {}

func (x *CancelLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s6a_proxy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelLocationRequest.ProtoReflect.Descriptor instead.
func (*CancelLocationRequest) Descriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{4}
}

func (x *CancelLocationRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CancelLocationRequest) GetCancellationType() CancelLocationRequest_CancellationType {
	if x != nil {
		return x.CancellationType
	}
	return CancelLocationRequest_MME_UPDATE_PROCEDURE
}

// Cancel Location Answer (Section 7.2.8)
type CancelLocationAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// EPC error code on failure
	ErrorCode ErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=magma.feg.ErrorCode" json:"error_code,omitempty"`
}

func (x *CancelLocationAnswer) Reset() {
	*x = CancelLocationAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s6a_proxy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelLocationAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelLocationAnswer) ProtoMessage() {}

func (x *CancelLocationAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s6a_proxy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelLocationAnswer.ProtoReflect.Descriptor instead.
func (*CancelLocationAnswer) Descriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{5}
}

func (x *CancelLocationAnswer) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_UNDEFINED
}

// Purge UE Request (Section 7.2.14)
type PurgeUERequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Subscriber identifier
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *PurgeUERequest) Reset() {
	*x = PurgeUERequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s6a_proxy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurgeUERequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeUERequest) ProtoMessage() {}

func (x *PurgeUERequest) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s6a_proxy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeUERequest.ProtoReflect.Descriptor instead.
func (*PurgeUERequest) Descriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{6}
}

func (x *PurgeUERequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

// Purge UE Answer (Section 7.2.15)
type PurgeUEAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// EPC error code on failure
	ErrorCode ErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=magma.feg.ErrorCode" json:"error_code,omitempty"`
}

func (x *PurgeUEAnswer) Reset() {
	*x = PurgeUEAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s6a_proxy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurgeUEAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeUEAnswer) ProtoMessage() {}

func (x *PurgeUEAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s6a_proxy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeUEAnswer.ProtoReflect.Descriptor instead.
func (*PurgeUEAnswer) Descriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{7}
}

func (x *PurgeUEAnswer) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_UNDEFINED
}

// Reset Request (3GPP TS 29.272 Section 7.2.15)
type ResetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Subscriber identifier
	UserId []string `protobuf:"bytes,1,rep,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ResetRequest) Reset() {
	*x = ResetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s6a_proxy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetRequest) ProtoMessage() {}

func (x *ResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s6a_proxy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetRequest.ProtoReflect.Descriptor instead.
func (*ResetRequest) Descriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{8}
}

func (x *ResetRequest) GetUserId() []string {
	if x != nil {
		return x.UserId
	}
	return nil
}

// Reset Answer (3GPP TS 29.272 Section 7.2.16)
type ResetAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// EPC error code on failure
	ErrorCode ErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=magma.feg.ErrorCode" json:"error_code,omitempty"`
}

func (x *ResetAnswer) Reset() {
	*x = ResetAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s6a_proxy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetAnswer) ProtoMessage() {}

func (x *ResetAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s6a_proxy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetAnswer.ProtoReflect.Descriptor instead.
func (*ResetAnswer) Descriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{9}
}

func (x *ResetAnswer) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_UNDEFINED
}

// Feature ID list (3GPP TS 29.229 Table 7.1.1)
type FeatureListId2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// NR as secondary RAT indicator
	NrAsSecondaryRat bool `protobuf:"varint,1,opt,name=nr_as_secondary_rat,json=nrAsSecondaryRat,proto3" json:"nr_as_secondary_rat,omitempty"`
}

func (x *FeatureListId2) Reset() {
	*x = FeatureListId2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s6a_proxy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureListId2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureListId2) ProtoMessage() {}

func (x *FeatureListId2) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s6a_proxy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureListId2.ProtoReflect.Descriptor instead.
func (*FeatureListId2) Descriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{10}
}

func (x *FeatureListId2) GetNrAsSecondaryRat() bool {
	if x != nil {
		return x.NrAsSecondaryRat
	}
	return false
}

// Feature ID1 list (3GPP TS 29.272 Table 7.3.10)
type FeatureListId1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Regional subscription
	RegionalSubscription bool `protobuf:"varint,1,opt,name=regional_subscription,json=regionalSubscription,proto3" json:"regional_subscription,omitempty"`
}

func (x *FeatureListId1) Reset() {
	*x = FeatureListId1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s6a_proxy_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureListId1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureListId1) ProtoMessage() {}

func (x *FeatureListId1) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s6a_proxy_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureListId1.ProtoReflect.Descriptor instead.
func (*FeatureListId1) Descriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{11}
}

func (x *FeatureListId1) GetRegionalSubscription() bool {
	if x != nil {
		return x.RegionalSubscription
	}
	return false
}

// 3GPP TS 29.272, 7.3.18 E-UTRAN-Vector
// For details about fields read 3GPP 33.401
type AuthenticationInformationAnswer_EUTRANVector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rand  []byte `protobuf:"bytes,1,opt,name=rand,proto3" json:"rand,omitempty"`
	Xres  []byte `protobuf:"bytes,2,opt,name=xres,proto3" json:"xres,omitempty"`
	Autn  []byte `protobuf:"bytes,3,opt,name=autn,proto3" json:"autn,omitempty"`
	Kasme []byte `protobuf:"bytes,4,opt,name=kasme,proto3" json:"kasme,omitempty"`
}

func (x *AuthenticationInformationAnswer_EUTRANVector) Reset() {
	*x = AuthenticationInformationAnswer_EUTRANVector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s6a_proxy_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationInformationAnswer_EUTRANVector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationInformationAnswer_EUTRANVector) ProtoMessage() {}

func (x *AuthenticationInformationAnswer_EUTRANVector) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s6a_proxy_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationInformationAnswer_EUTRANVector.ProtoReflect.Descriptor instead.
func (*AuthenticationInformationAnswer_EUTRANVector) Descriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{1, 0}
}

func (x *AuthenticationInformationAnswer_EUTRANVector) GetRand() []byte {
	if x != nil {
		return x.Rand
	}
	return nil
}

func (x *AuthenticationInformationAnswer_EUTRANVector) GetXres() []byte {
	if x != nil {
		return x.Xres
	}
	return nil
}

func (x *AuthenticationInformationAnswer_EUTRANVector) GetAutn() []byte {
	if x != nil {
		return x.Autn
	}
	return nil
}

func (x *AuthenticationInformationAnswer_EUTRANVector) GetKasme() []byte {
	if x != nil {
		return x.Kasme
	}
	return nil
}

// 3GPP TS 29.272, Section 7.3.19 UTRAN-Vector
type AuthenticationInformationAnswer_UTRANVector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rand               []byte `protobuf:"bytes,1,opt,name=rand,proto3" json:"rand,omitempty"`
	Xres               []byte `protobuf:"bytes,2,opt,name=xres,proto3" json:"xres,omitempty"`
	Autn               []byte `protobuf:"bytes,3,opt,name=autn,proto3" json:"autn,omitempty"`
	ConfidentialityKey []byte `protobuf:"bytes,4,opt,name=confidentiality_key,json=confidentialityKey,proto3" json:"confidentiality_key,omitempty"`
	IntegrityKey       []byte `protobuf:"bytes,5,opt,name=integrity_key,json=integrityKey,proto3" json:"integrity_key,omitempty"`
}

func (x *AuthenticationInformationAnswer_UTRANVector) Reset() {
	*x = AuthenticationInformationAnswer_UTRANVector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s6a_proxy_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationInformationAnswer_UTRANVector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationInformationAnswer_UTRANVector) ProtoMessage() {}

func (x *AuthenticationInformationAnswer_UTRANVector) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s6a_proxy_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationInformationAnswer_UTRANVector.ProtoReflect.Descriptor instead.
func (*AuthenticationInformationAnswer_UTRANVector) Descriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{1, 1}
}

func (x *AuthenticationInformationAnswer_UTRANVector) GetRand() []byte {
	if x != nil {
		return x.Rand
	}
	return nil
}

func (x *AuthenticationInformationAnswer_UTRANVector) GetXres() []byte {
	if x != nil {
		return x.Xres
	}
	return nil
}

func (x *AuthenticationInformationAnswer_UTRANVector) GetAutn() []byte {
	if x != nil {
		return x.Autn
	}
	return nil
}

func (x *AuthenticationInformationAnswer_UTRANVector) GetConfidentialityKey() []byte {
	if x != nil {
		return x.ConfidentialityKey
	}
	return nil
}

func (x *AuthenticationInformationAnswer_UTRANVector) GetIntegrityKey() []byte {
	if x != nil {
		return x.IntegrityKey
	}
	return nil
}

// 3GPP TS 29.272, 7.3.20 GERAN-Vector
type AuthenticationInformationAnswer_GERANVector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rand []byte `protobuf:"bytes,1,opt,name=rand,proto3" json:"rand,omitempty"`
	Sres []byte `protobuf:"bytes,2,opt,name=sres,proto3" json:"sres,omitempty"`
	Kc   []byte `protobuf:"bytes,3,opt,name=Kc,proto3" json:"Kc,omitempty"`
}

func (x *AuthenticationInformationAnswer_GERANVector) Reset() {
	*x = AuthenticationInformationAnswer_GERANVector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s6a_proxy_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationInformationAnswer_GERANVector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationInformationAnswer_GERANVector) ProtoMessage() {}

func (x *AuthenticationInformationAnswer_GERANVector) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s6a_proxy_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationInformationAnswer_GERANVector.ProtoReflect.Descriptor instead.
func (*AuthenticationInformationAnswer_GERANVector) Descriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{1, 2}
}

func (x *AuthenticationInformationAnswer_GERANVector) GetRand() []byte {
	if x != nil {
		return x.Rand
	}
	return nil
}

func (x *AuthenticationInformationAnswer_GERANVector) GetSres() []byte {
	if x != nil {
		return x.Sres
	}
	return nil
}

func (x *AuthenticationInformationAnswer_GERANVector) GetKc() []byte {
	if x != nil {
		return x.Kc
	}
	return nil
}

type UpdateLocationAnswer_APNConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// APN identifier
	ContextId uint32 `protobuf:"varint,1,opt,name=context_id,json=contextId,proto3" json:"context_id,omitempty"`
	// Contains either the APN Name or wildcard "*"
	ServiceSelection string `protobuf:"bytes,2,opt,name=service_selection,json=serviceSelection,proto3" json:"service_selection,omitempty"`
	// APN QoS profile
	QosProfile *UpdateLocationAnswer_APNConfiguration_QoSProfile `protobuf:"bytes,3,opt,name=qos_profile,json=qosProfile,proto3" json:"qos_profile,omitempty"`
	// APN authorized bitrate
	Ambr                    *UpdateLocationAnswer_AggregatedMaximumBitrate `protobuf:"bytes,4,opt,name=ambr,proto3" json:"ambr,omitempty"`
	Pdn                     UpdateLocationAnswer_APNConfiguration_PDNType  `protobuf:"varint,5,opt,name=pdn,proto3,enum=magma.feg.UpdateLocationAnswer_APNConfiguration_PDNType" json:"pdn,omitempty"`
	ChargingCharacteristics string                                         `protobuf:"bytes,6,opt,name=charging_characteristics,json=chargingCharacteristics,proto3" json:"charging_characteristics,omitempty"`
	// Values from Served-Party-IP-Address AVP
	// See: https://www.etsi.org/deliver/etsi_ts/129200_129299/129272/17.02.00_60/ts_129272v170200p.pdf#page=124
	ServedPartyIpAddress []string `protobuf:"bytes,7,rep,name=served_party_ip_address,json=servedPartyIpAddress,proto3" json:"served_party_ip_address,omitempty"`
	// Gateway-specific guidance for serving the APN (optional, only for EPS Auth use case)
	Resource *UpdateLocationAnswer_APNConfiguration_APNResource `protobuf:"bytes,8,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *UpdateLocationAnswer_APNConfiguration) Reset() {
	*x = UpdateLocationAnswer_APNConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s6a_proxy_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLocationAnswer_APNConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationAnswer_APNConfiguration) ProtoMessage() {}

func (x *UpdateLocationAnswer_APNConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s6a_proxy_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationAnswer_APNConfiguration.ProtoReflect.Descriptor instead.
func (*UpdateLocationAnswer_APNConfiguration) Descriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{3, 0}
}

func (x *UpdateLocationAnswer_APNConfiguration) GetContextId() uint32 {
	if x != nil {
		return x.ContextId
	}
	return 0
}

func (x *UpdateLocationAnswer_APNConfiguration) GetServiceSelection() string {
	if x != nil {
		return x.ServiceSelection
	}
	return ""
}

func (x *UpdateLocationAnswer_APNConfiguration) GetQosProfile() *UpdateLocationAnswer_APNConfiguration_QoSProfile {
	if x != nil {
		return x.QosProfile
	}
	return nil
}

func (x *UpdateLocationAnswer_APNConfiguration) GetAmbr() *UpdateLocationAnswer_AggregatedMaximumBitrate {
	if x != nil {
		return x.Ambr
	}
	return nil
}

func (x *UpdateLocationAnswer_APNConfiguration) GetPdn() UpdateLocationAnswer_APNConfiguration_PDNType {
	if x != nil {
		return x.Pdn
	}
	return UpdateLocationAnswer_APNConfiguration_IPV4
}

func (x *UpdateLocationAnswer_APNConfiguration) GetChargingCharacteristics() string {
	if x != nil {
		return x.ChargingCharacteristics
	}
	return ""
}

func (x *UpdateLocationAnswer_APNConfiguration) GetServedPartyIpAddress() []string {
	if x != nil {
		return x.ServedPartyIpAddress
	}
	return nil
}

func (x *UpdateLocationAnswer_APNConfiguration) GetResource() *UpdateLocationAnswer_APNConfiguration_APNResource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type UpdateLocationAnswer_AggregatedMaximumBitrate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Maximum uplink bitrate
	MaxBandwidthUl uint32 `protobuf:"varint,1,opt,name=max_bandwidth_ul,json=maxBandwidthUl,proto3" json:"max_bandwidth_ul,omitempty"`
	// Maximum downlink bitrate
	MaxBandwidthDl uint32 `protobuf:"varint,2,opt,name=max_bandwidth_dl,json=maxBandwidthDl,proto3" json:"max_bandwidth_dl,omitempty"`
	// Unit (either bps or Kbps)
	Unit UpdateLocationAnswer_AggregatedMaximumBitrate_BitrateUnitsAMBR `protobuf:"varint,3,opt,name=unit,proto3,enum=magma.feg.UpdateLocationAnswer_AggregatedMaximumBitrate_BitrateUnitsAMBR" json:"unit,omitempty"`
}

func (x *UpdateLocationAnswer_AggregatedMaximumBitrate) Reset() {
	*x = UpdateLocationAnswer_AggregatedMaximumBitrate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s6a_proxy_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLocationAnswer_AggregatedMaximumBitrate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationAnswer_AggregatedMaximumBitrate) ProtoMessage() {}

func (x *UpdateLocationAnswer_AggregatedMaximumBitrate) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s6a_proxy_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationAnswer_AggregatedMaximumBitrate.ProtoReflect.Descriptor instead.
func (*UpdateLocationAnswer_AggregatedMaximumBitrate) Descriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{3, 1}
}

func (x *UpdateLocationAnswer_AggregatedMaximumBitrate) GetMaxBandwidthUl() uint32 {
	if x != nil {
		return x.MaxBandwidthUl
	}
	return 0
}

func (x *UpdateLocationAnswer_AggregatedMaximumBitrate) GetMaxBandwidthDl() uint32 {
	if x != nil {
		return x.MaxBandwidthDl
	}
	return 0
}

func (x *UpdateLocationAnswer_AggregatedMaximumBitrate) GetUnit() UpdateLocationAnswer_AggregatedMaximumBitrate_BitrateUnitsAMBR {
	if x != nil {
		return x.Unit
	}
	return UpdateLocationAnswer_AggregatedMaximumBitrate_BPS
}

// For details about values see 29.212
type UpdateLocationAnswer_APNConfiguration_QoSProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassId                 int32  `protobuf:"varint,1,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	PriorityLevel           uint32 `protobuf:"varint,2,opt,name=priority_level,json=priorityLevel,proto3" json:"priority_level,omitempty"`
	PreemptionCapability    bool   `protobuf:"varint,3,opt,name=preemption_capability,json=preemptionCapability,proto3" json:"preemption_capability,omitempty"`
	PreemptionVulnerability bool   `protobuf:"varint,4,opt,name=preemption_vulnerability,json=preemptionVulnerability,proto3" json:"preemption_vulnerability,omitempty"`
}

func (x *UpdateLocationAnswer_APNConfiguration_QoSProfile) Reset() {
	*x = UpdateLocationAnswer_APNConfiguration_QoSProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s6a_proxy_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLocationAnswer_APNConfiguration_QoSProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationAnswer_APNConfiguration_QoSProfile) ProtoMessage() {}

func (x *UpdateLocationAnswer_APNConfiguration_QoSProfile) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s6a_proxy_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationAnswer_APNConfiguration_QoSProfile.ProtoReflect.Descriptor instead.
func (*UpdateLocationAnswer_APNConfiguration_QoSProfile) Descriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{3, 0, 0}
}

func (x *UpdateLocationAnswer_APNConfiguration_QoSProfile) GetClassId() int32 {
	if x != nil {
		return x.ClassId
	}
	return 0
}

func (x *UpdateLocationAnswer_APNConfiguration_QoSProfile) GetPriorityLevel() uint32 {
	if x != nil {
		return x.PriorityLevel
	}
	return 0
}

func (x *UpdateLocationAnswer_APNConfiguration_QoSProfile) GetPreemptionCapability() bool {
	if x != nil {
		return x.PreemptionCapability
	}
	return false
}

func (x *UpdateLocationAnswer_APNConfiguration_QoSProfile) GetPreemptionVulnerability() bool {
	if x != nil {
		return x.PreemptionVulnerability
	}
	return false
}

// APNResource is gateway-specific guidance for serving the APN
type UpdateLocationAnswer_APNConfiguration_APNResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApnName    string `protobuf:"bytes,1,opt,name=apn_name,json=apnName,proto3" json:"apn_name,omitempty"`
	GatewayIp  string `protobuf:"bytes,2,opt,name=gateway_ip,json=gatewayIp,proto3" json:"gateway_ip,omitempty"`
	GatewayMac string `protobuf:"bytes,3,opt,name=gateway_mac,json=gatewayMac,proto3" json:"gateway_mac,omitempty"`
	VlanId     uint32 `protobuf:"varint,4,opt,name=vlan_id,json=vlanId,proto3" json:"vlan_id,omitempty"`
}

func (x *UpdateLocationAnswer_APNConfiguration_APNResource) Reset() {
	*x = UpdateLocationAnswer_APNConfiguration_APNResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_s6a_proxy_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLocationAnswer_APNConfiguration_APNResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationAnswer_APNConfiguration_APNResource) ProtoMessage() {}

func (x *UpdateLocationAnswer_APNConfiguration_APNResource) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_s6a_proxy_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationAnswer_APNConfiguration_APNResource.ProtoReflect.Descriptor instead.
func (*UpdateLocationAnswer_APNConfiguration_APNResource) Descriptor() ([]byte, []int) {
	return file_feg_protos_s6a_proxy_proto_rawDescGZIP(), []int{3, 0, 1}
}

func (x *UpdateLocationAnswer_APNConfiguration_APNResource) GetApnName() string {
	if x != nil {
		return x.ApnName
	}
	return ""
}

func (x *UpdateLocationAnswer_APNConfiguration_APNResource) GetGatewayIp() string {
	if x != nil {
		return x.GatewayIp
	}
	return ""
}

func (x *UpdateLocationAnswer_APNConfiguration_APNResource) GetGatewayMac() string {
	if x != nil {
		return x.GatewayMac
	}
	return ""
}

func (x *UpdateLocationAnswer_APNConfiguration_APNResource) GetVlanId() uint32 {
	if x != nil {
		return x.VlanId
	}
	return 0
}

var File_feg_protos_s6a_proxy_proto protoreflect.FileDescriptor

var file_feg_protos_s6a_proxy_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x66, 0x65, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x36, 0x61,
	0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6d, 0x61,
	0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x22, 0xcd, 0x03, 0x0a, 0x20, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x69, 0x73,
	0x69, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x6c, 0x6d, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0b, 0x76, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x50, 0x6c, 0x6d, 0x6e, 0x12, 0x3f, 0x0a, 0x1c,
	0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x75,
	0x74, 0x72, 0x61, 0x6e, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x19, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x45, 0x75, 0x74, 0x72, 0x61, 0x6e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x40, 0x0a,
	0x1c, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x1a, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x48, 0x0a, 0x21, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x5f, 0x75, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x67, 0x65, 0x72, 0x61, 0x6e, 0x5f, 0x76, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1d, 0x6e, 0x75, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x74, 0x72, 0x61, 0x6e, 0x47, 0x65,
	0x72, 0x61, 0x6e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x35, 0x0a, 0x17, 0x75, 0x74,
	0x72, 0x61, 0x6e, 0x5f, 0x67, 0x65, 0x72, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x75, 0x74, 0x72,
	0x61, 0x6e, 0x47, 0x65, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x44, 0x0a, 0x11, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x5f, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d,
	0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x32, 0x52, 0x0e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x32, 0x22, 0xbb, 0x05, 0x0a, 0x1f, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x0a, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x5e, 0x0a, 0x0e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61,
	0x2e, 0x66, 0x65, 0x67, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x2e, 0x45, 0x55, 0x54, 0x52, 0x41, 0x4e, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x0d, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73,
	0x12, 0x5b, 0x0a, 0x0d, 0x75, 0x74, 0x72, 0x61, 0x6e, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e,
	0x66, 0x65, 0x67, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x2e, 0x55, 0x54, 0x52, 0x41, 0x4e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x0c, 0x75, 0x74, 0x72, 0x61, 0x6e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x5b, 0x0a,
	0x0d, 0x67, 0x65, 0x72, 0x61, 0x6e, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x2e, 0x47, 0x45, 0x52, 0x41, 0x4e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0c, 0x67, 0x65,
	0x72, 0x61, 0x6e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x60, 0x0a, 0x0c, 0x45, 0x55,
	0x54, 0x52, 0x41, 0x4e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x78, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x78, 0x72,
	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x61, 0x75, 0x74, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6b, 0x61, 0x73, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6b, 0x61, 0x73, 0x6d, 0x65, 0x1a, 0x9f, 0x01, 0x0a,
	0x0b, 0x55, 0x54, 0x52, 0x41, 0x4e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x78, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x78, 0x72, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x61, 0x75, 0x74, 0x6e, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x1a, 0x45,
	0x0a, 0x0b, 0x47, 0x45, 0x52, 0x41, 0x4e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x72, 0x61, 0x6e,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x73, 0x72, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x4b, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x02, 0x4b, 0x63, 0x22, 0x81, 0x03, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x76, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x6c, 0x6d, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x76, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x50, 0x6c, 0x6d, 0x6e, 0x12,
	0x30, 0x0a, 0x14, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x73,
	0x6b, 0x69, 0x70, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x43, 0x0a, 0x1e, 0x64, 0x75, 0x61, 0x6c,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x35, 0x67,
	0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x1b, 0x64, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x35, 0x67, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x44, 0x0a,
	0x11, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x5f, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61,
	0x2e, 0x66, 0x65, 0x67, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x64, 0x32, 0x52, 0x0e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x64, 0x32, 0x12, 0x44, 0x0a, 0x11, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x31, 0x52, 0x0e, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x31, 0x22, 0xc4, 0x0f, 0x0a, 0x14, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x12, 0x33, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66,
	0x65, 0x67, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61,
	0x6d, 0x62, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6d, 0x61, 0x67, 0x6d,
	0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x42, 0x69, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x62, 0x72, 0x12, 0x2a,
	0x0a, 0x11, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x70, 0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x41, 0x70,
	0x6e, 0x73, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x03, 0x61, 0x70,
	0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e,
	0x66, 0x65, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x2e, 0x41, 0x50, 0x4e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x61, 0x70, 0x6e, 0x12, 0x48,
	0x0a, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x73, 0x69, 0x73,
	0x64, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6d, 0x73, 0x69, 0x73, 0x64, 0x6e,
	0x12, 0x61, 0x0a, 0x13, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e,
	0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x2e, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x11, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x45, 0x0a, 0x1f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x7a, 0x6f, 0x6e,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x1c, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x5a, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x44, 0x0a, 0x11, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x32, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65,
	0x67, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x32,
	0x52, 0x0e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x32,
	0x12, 0x44, 0x0a, 0x11, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x5f, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61,
	0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x64, 0x31, 0x52, 0x0e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x64, 0x31, 0x1a, 0xa4, 0x07, 0x0a, 0x10, 0x41, 0x50, 0x4e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5c, 0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x5f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6d,
	0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x2e, 0x41, 0x50,
	0x4e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51,
	0x6f, 0x53, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0a, 0x71, 0x6f, 0x73, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x4c, 0x0a, 0x04, 0x61, 0x6d, 0x62, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4d,
	0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x52, 0x04, 0x61,
	0x6d, 0x62, 0x72, 0x12, 0x4a, 0x0a, 0x03, 0x70, 0x64, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x38, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x2e, 0x41, 0x50, 0x4e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x50, 0x44, 0x4e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x03, 0x70, 0x64, 0x6e, 0x12,
	0x39, 0x0a, 0x18, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x17, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x35, 0x0a, 0x17, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x58, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x2e, 0x41, 0x50, 0x4e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x50, 0x4e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0xbe, 0x01, 0x0a, 0x0a,
	0x51, 0x6f, 0x53, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x33, 0x0a, 0x15,
	0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x70, 0x72, 0x65,
	0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x39, 0x0a, 0x18, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x17, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x56,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x81, 0x01, 0x0a,
	0x0b, 0x41, 0x50, 0x4e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x70, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x70, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x49, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x5f, 0x6d, 0x61, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x4d, 0x61, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x6c, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64,
	0x22, 0x3b, 0x0a, 0x07, 0x50, 0x44, 0x4e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x49,
	0x50, 0x56, 0x34, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x50, 0x56, 0x36, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x49, 0x50, 0x56, 0x34, 0x56, 0x36, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x49,
	0x50, 0x56, 0x34, 0x5f, 0x4f, 0x52, 0x5f, 0x49, 0x50, 0x56, 0x36, 0x10, 0x03, 0x1a, 0xf4, 0x01,
	0x0a, 0x18, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x78, 0x69,
	0x6d, 0x75, 0x6d, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61,
	0x78, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x5f, 0x75, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x55, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x61, 0x6e, 0x64,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x5f, 0x64, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x6d, 0x61, 0x78, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x44, 0x6c, 0x12, 0x5d,
	0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x6d,
	0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x2e, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x42,
	0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x2e, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x55, 0x6e,
	0x69, 0x74, 0x73, 0x41, 0x4d, 0x42, 0x52, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x25, 0x0a,
	0x10, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x41, 0x4d, 0x42,
	0x52, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x50, 0x53, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4b, 0x42,
	0x50, 0x53, 0x10, 0x01, 0x22, 0x4a, 0x0a, 0x11, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x41, 0x43,
	0x4b, 0x45, 0x54, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x43, 0x49, 0x52, 0x43, 0x55, 0x49, 0x54, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x0f, 0x0a, 0x0b, 0x4f, 0x4e, 0x4c, 0x59, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x10, 0x02,
	0x22, 0xb3, 0x02, 0x0a, 0x15, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5e, 0x0a, 0x11, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x31, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x10, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14,
	0x4d, 0x4d, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45,
	0x44, 0x55, 0x52, 0x45, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x47, 0x53, 0x4e, 0x5f, 0x55,
	0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x44, 0x55, 0x52, 0x45, 0x10,
	0x01, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x18,
	0x0a, 0x14, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x44, 0x55,
	0x52, 0x45, 0x5f, 0x49, 0x57, 0x46, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x49, 0x4e, 0x49, 0x54,
	0x49, 0x41, 0x4c, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45,
	0x44, 0x55, 0x52, 0x45, 0x10, 0x04, 0x22, 0x4b, 0x0a, 0x14, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x33,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x2d, 0x0a, 0x0e, 0x50, 0x75, 0x72, 0x67, 0x65, 0x55, 0x45, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x44, 0x0a, 0x0d, 0x50, 0x75, 0x72, 0x67, 0x65, 0x55, 0x45, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e,
	0x66, 0x65, 0x67, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x27, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x42, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x12, 0x33, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x3f, 0x0a, 0x0e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x32, 0x12, 0x2d, 0x0a, 0x13, 0x6e, 0x72, 0x5f, 0x61, 0x73,
	0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6e, 0x72, 0x41, 0x73, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x61, 0x72, 0x79, 0x52, 0x61, 0x74, 0x22, 0x45, 0x0a, 0x0e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x31, 0x12, 0x33, 0x0a, 0x15, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0xf0, 0x04,
	0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x55,
	0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x10, 0x4d, 0x55,
	0x4c, 0x54, 0x49, 0x5f, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x10, 0xe9,
	0x07, 0x12, 0x0c, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0xd1, 0x0f, 0x12,
	0x14, 0x0a, 0x0f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x45, 0x44, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x10, 0xd2, 0x0f, 0x12, 0x18, 0x0a, 0x13, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44,
	0x5f, 0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0xb9, 0x17, 0x12,
	0x16, 0x0a, 0x11, 0x55, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x44, 0x45, 0x4c,
	0x49, 0x56, 0x45, 0x52, 0x10, 0xba, 0x17, 0x12, 0x15, 0x0a, 0x10, 0x52, 0x45, 0x41, 0x4c, 0x4d,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x44, 0x10, 0xbb, 0x17, 0x12, 0x0d,
	0x0a, 0x08, 0x54, 0x4f, 0x4f, 0x5f, 0x42, 0x55, 0x53, 0x59, 0x10, 0xbc, 0x17, 0x12, 0x12, 0x0a,
	0x0d, 0x4c, 0x4f, 0x4f, 0x50, 0x5f, 0x44, 0x45, 0x54, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0xbd,
	0x17, 0x12, 0x18, 0x0a, 0x13, 0x52, 0x45, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x49, 0x4e,
	0x44, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0xbe, 0x17, 0x12, 0x1c, 0x0a, 0x17, 0x41,
	0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x55, 0x50,
	0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0xbf, 0x17, 0x12, 0x15, 0x0a, 0x10, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x48, 0x44, 0x52, 0x5f, 0x42, 0x49, 0x54, 0x53, 0x10, 0xc0, 0x17,
	0x12, 0x15, 0x0a, 0x10, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x56, 0x50, 0x5f,
	0x42, 0x49, 0x54, 0x53, 0x10, 0xc1, 0x17, 0x12, 0x11, 0x0a, 0x0c, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x50, 0x45, 0x45, 0x52, 0x10, 0xc2, 0x17, 0x12, 0x1c, 0x0a, 0x17, 0x41, 0x55,
	0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x4a,
	0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0xa1, 0x1f, 0x12, 0x11, 0x0a, 0x0c, 0x4f, 0x55, 0x54, 0x5f,
	0x4f, 0x46, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0xa2, 0x1f, 0x12, 0x12, 0x0a, 0x0d, 0x45,
	0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x4f, 0x53, 0x54, 0x10, 0xa3, 0x1f, 0x12,
	0x1b, 0x0a, 0x16, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x8b, 0x27, 0x12, 0x11, 0x0a, 0x0c,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x89, 0x27, 0x12,
	0x17, 0x0a, 0x12, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49,
	0x4f, 0x4e, 0x5f, 0x49, 0x44, 0x10, 0x8a, 0x27, 0x12, 0x1d, 0x0a, 0x18, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x50, 0x53, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0xac, 0x2a, 0x12, 0x14, 0x0a, 0x0f, 0x52, 0x41, 0x54, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x44, 0x10, 0xad, 0x2a, 0x12, 0x18, 0x0a,
	0x13, 0x52, 0x4f, 0x41, 0x4d, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x4c, 0x4c,
	0x4f, 0x57, 0x45, 0x44, 0x10, 0x8c, 0x27, 0x12, 0x16, 0x0a, 0x11, 0x45, 0x51, 0x55, 0x49, 0x50,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0xae, 0x2a, 0x12,
	0x19, 0x0a, 0x14, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49,
	0x4e, 0x47, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x10, 0xaf, 0x2a, 0x12, 0x24, 0x0a, 0x1f, 0x41, 0x55,
	0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0xd5, 0x20,
	0x32, 0x9b, 0x02, 0x0a, 0x08, 0x53, 0x36, 0x61, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x76, 0x0a,
	0x19, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x6d, 0x61, 0x67,
	0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e,
	0x66, 0x65, 0x67, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e,
	0x66, 0x65, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x67, 0x6d,
	0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x07,
	0x50, 0x75, 0x72, 0x67, 0x65, 0x55, 0x45, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e,
	0x66, 0x65, 0x67, 0x2e, 0x50, 0x75, 0x72, 0x67, 0x65, 0x55, 0x45, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x50,
	0x75, 0x72, 0x67, 0x65, 0x55, 0x45, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x00, 0x32, 0xa6,
	0x01, 0x0a, 0x11, 0x53, 0x36, 0x61, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x0e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66,
	0x65, 0x67, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61,
	0x2e, 0x66, 0x65, 0x67, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x05, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67,
	0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x00, 0x42, 0x1b, 0x5a, 0x19, 0x6d, 0x61, 0x67, 0x6d, 0x61,
	0x2f, 0x66, 0x65, 0x67, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_feg_protos_s6a_proxy_proto_rawDescOnce sync.Once
	file_feg_protos_s6a_proxy_proto_rawDescData = file_feg_protos_s6a_proxy_proto_rawDesc
)

func file_feg_protos_s6a_proxy_proto_rawDescGZIP() []byte {
	file_feg_protos_s6a_proxy_proto_rawDescOnce.Do(func() {
		file_feg_protos_s6a_proxy_proto_rawDescData = protoimpl.X.CompressGZIP(file_feg_protos_s6a_proxy_proto_rawDescData)
	})
	return file_feg_protos_s6a_proxy_proto_rawDescData
}

var file_feg_protos_s6a_proxy_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_feg_protos_s6a_proxy_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_feg_protos_s6a_proxy_proto_goTypes = []interface{}{
	(ErrorCode)(0), // 0: magma.feg.ErrorCode
	(UpdateLocationAnswer_NetworkAccessMode)(0),                         // 1: magma.feg.UpdateLocationAnswer.NetworkAccessMode
	(UpdateLocationAnswer_APNConfiguration_PDNType)(0),                  // 2: magma.feg.UpdateLocationAnswer.APNConfiguration.PDNType
	(UpdateLocationAnswer_AggregatedMaximumBitrate_BitrateUnitsAMBR)(0), // 3: magma.feg.UpdateLocationAnswer.AggregatedMaximumBitrate.BitrateUnitsAMBR
	(CancelLocationRequest_CancellationType)(0),                         // 4: magma.feg.CancelLocationRequest.CancellationType
	(*AuthenticationInformationRequest)(nil),                            // 5: magma.feg.AuthenticationInformationRequest
	(*AuthenticationInformationAnswer)(nil),                             // 6: magma.feg.AuthenticationInformationAnswer
	(*UpdateLocationRequest)(nil),                                       // 7: magma.feg.UpdateLocationRequest
	(*UpdateLocationAnswer)(nil),                                        // 8: magma.feg.UpdateLocationAnswer
	(*CancelLocationRequest)(nil),                                       // 9: magma.feg.CancelLocationRequest
	(*CancelLocationAnswer)(nil),                                        // 10: magma.feg.CancelLocationAnswer
	(*PurgeUERequest)(nil),                                              // 11: magma.feg.PurgeUERequest
	(*PurgeUEAnswer)(nil),                                               // 12: magma.feg.PurgeUEAnswer
	(*ResetRequest)(nil),                                                // 13: magma.feg.ResetRequest
	(*ResetAnswer)(nil),                                                 // 14: magma.feg.ResetAnswer
	(*FeatureListId2)(nil),                                              // 15: magma.feg.FeatureListId2
	(*FeatureListId1)(nil),                                              // 16: magma.feg.FeatureListId1
	(*AuthenticationInformationAnswer_EUTRANVector)(nil),                // 17: magma.feg.AuthenticationInformationAnswer.EUTRANVector
	(*AuthenticationInformationAnswer_UTRANVector)(nil),                 // 18: magma.feg.AuthenticationInformationAnswer.UTRANVector
	(*AuthenticationInformationAnswer_GERANVector)(nil),                 // 19: magma.feg.AuthenticationInformationAnswer.GERANVector
	(*UpdateLocationAnswer_APNConfiguration)(nil),                       // 20: magma.feg.UpdateLocationAnswer.APNConfiguration
	(*UpdateLocationAnswer_AggregatedMaximumBitrate)(nil),               // 21: magma.feg.UpdateLocationAnswer.AggregatedMaximumBitrate
	(*UpdateLocationAnswer_APNConfiguration_QoSProfile)(nil),            // 22: magma.feg.UpdateLocationAnswer.APNConfiguration.QoSProfile
	(*UpdateLocationAnswer_APNConfiguration_APNResource)(nil),           // 23: magma.feg.UpdateLocationAnswer.APNConfiguration.APNResource
}
var file_feg_protos_s6a_proxy_proto_depIdxs = []int32{
	15, // 0: magma.feg.AuthenticationInformationRequest.feature_list_id_2:type_name -> magma.feg.FeatureListId2
	0,  // 1: magma.feg.AuthenticationInformationAnswer.error_code:type_name -> magma.feg.ErrorCode
	17, // 2: magma.feg.AuthenticationInformationAnswer.eutran_vectors:type_name -> magma.feg.AuthenticationInformationAnswer.EUTRANVector
	18, // 3: magma.feg.AuthenticationInformationAnswer.utran_vectors:type_name -> magma.feg.AuthenticationInformationAnswer.UTRANVector
	19, // 4: magma.feg.AuthenticationInformationAnswer.geran_vectors:type_name -> magma.feg.AuthenticationInformationAnswer.GERANVector
	15, // 5: magma.feg.UpdateLocationRequest.feature_list_id_2:type_name -> magma.feg.FeatureListId2
	16, // 6: magma.feg.UpdateLocationRequest.feature_list_id_1:type_name -> magma.feg.FeatureListId1
	0,  // 7: magma.feg.UpdateLocationAnswer.error_code:type_name -> magma.feg.ErrorCode
	21, // 8: magma.feg.UpdateLocationAnswer.total_ambr:type_name -> magma.feg.UpdateLocationAnswer.AggregatedMaximumBitrate
	20, // 9: magma.feg.UpdateLocationAnswer.apn:type_name -> magma.feg.UpdateLocationAnswer.APNConfiguration
	1,  // 10: magma.feg.UpdateLocationAnswer.network_access_mode:type_name -> magma.feg.UpdateLocationAnswer.NetworkAccessMode
	15, // 11: magma.feg.UpdateLocationAnswer.feature_list_id_2:type_name -> magma.feg.FeatureListId2
	16, // 12: magma.feg.UpdateLocationAnswer.feature_list_id_1:type_name -> magma.feg.FeatureListId1
	4,  // 13: magma.feg.CancelLocationRequest.cancellation_type:type_name -> magma.feg.CancelLocationRequest.CancellationType
	0,  // 14: magma.feg.CancelLocationAnswer.error_code:type_name -> magma.feg.ErrorCode
	0,  // 15: magma.feg.PurgeUEAnswer.error_code:type_name -> magma.feg.ErrorCode
	0,  // 16: magma.feg.ResetAnswer.error_code:type_name -> magma.feg.ErrorCode
	22, // 17: magma.feg.UpdateLocationAnswer.APNConfiguration.qos_profile:type_name -> magma.feg.UpdateLocationAnswer.APNConfiguration.QoSProfile
	21, // 18: magma.feg.UpdateLocationAnswer.APNConfiguration.ambr:type_name -> magma.feg.UpdateLocationAnswer.AggregatedMaximumBitrate
	2,  // 19: magma.feg.UpdateLocationAnswer.APNConfiguration.pdn:type_name -> magma.feg.UpdateLocationAnswer.APNConfiguration.PDNType
	23, // 20: magma.feg.UpdateLocationAnswer.APNConfiguration.resource:type_name -> magma.feg.UpdateLocationAnswer.APNConfiguration.APNResource
	3,  // 21: magma.feg.UpdateLocationAnswer.AggregatedMaximumBitrate.unit:type_name -> magma.feg.UpdateLocationAnswer.AggregatedMaximumBitrate.BitrateUnitsAMBR
	5,  // 22: magma.feg.S6aProxy.AuthenticationInformation:input_type -> magma.feg.AuthenticationInformationRequest
	7,  // 23: magma.feg.S6aProxy.UpdateLocation:input_type -> magma.feg.UpdateLocationRequest
	11, // 24: magma.feg.S6aProxy.PurgeUE:input_type -> magma.feg.PurgeUERequest
	9,  // 25: magma.feg.S6aGatewayService.CancelLocation:input_type -> magma.feg.CancelLocationRequest
	13, // 26: magma.feg.S6aGatewayService.Reset:input_type -> magma.feg.ResetRequest
	6,  // 27: magma.feg.S6aProxy.AuthenticationInformation:output_type -> magma.feg.AuthenticationInformationAnswer
	8,  // 28: magma.feg.S6aProxy.UpdateLocation:output_type -> magma.feg.UpdateLocationAnswer
	12, // 29: magma.feg.S6aProxy.PurgeUE:output_type -> magma.feg.PurgeUEAnswer
	10, // 30: magma.feg.S6aGatewayService.CancelLocation:output_type -> magma.feg.CancelLocationAnswer
	14, // 31: magma.feg.S6aGatewayService.Reset:output_type -> magma.feg.ResetAnswer
	27, // [27:32] is the sub-list for method output_type
	22, // [22:27] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_feg_protos_s6a_proxy_proto_init() }
func file_feg_protos_s6a_proxy_proto_init() {
	if File_feg_protos_s6a_proxy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_feg_protos_s6a_proxy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationInformationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s6a_proxy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationInformationAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s6a_proxy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s6a_proxy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLocationAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s6a_proxy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s6a_proxy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelLocationAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s6a_proxy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurgeUERequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s6a_proxy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurgeUEAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s6a_proxy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s6a_proxy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s6a_proxy_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureListId2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s6a_proxy_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureListId1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s6a_proxy_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationInformationAnswer_EUTRANVector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s6a_proxy_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationInformationAnswer_UTRANVector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s6a_proxy_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationInformationAnswer_GERANVector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s6a_proxy_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLocationAnswer_APNConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s6a_proxy_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLocationAnswer_AggregatedMaximumBitrate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s6a_proxy_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLocationAnswer_APNConfiguration_QoSProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_s6a_proxy_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLocationAnswer_APNConfiguration_APNResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_feg_protos_s6a_proxy_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_feg_protos_s6a_proxy_proto_goTypes,
		DependencyIndexes: file_feg_protos_s6a_proxy_proto_depIdxs,
		EnumInfos:         file_feg_protos_s6a_proxy_proto_enumTypes,
		MessageInfos:      file_feg_protos_s6a_proxy_proto_msgTypes,
	}.Build()
	File_feg_protos_s6a_proxy_proto = out.File
	file_feg_protos_s6a_proxy_proto_rawDesc = nil
	file_feg_protos_s6a_proxy_proto_goTypes = nil
	file_feg_protos_s6a_proxy_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// S6AProxyClient is the client API for S6AProxy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type S6AProxyClient interface {
	// Authentication-Information (Code 318)
	AuthenticationInformation(ctx context.Context, in *AuthenticationInformationRequest, opts ...grpc.CallOption) (*AuthenticationInformationAnswer, error)
	// Update-Location (Code 316)
	UpdateLocation(ctx context.Context, in *UpdateLocationRequest, opts ...grpc.CallOption) (*UpdateLocationAnswer, error)
	// Purge-UE (Code 321)
	PurgeUE(ctx context.Context, in *PurgeUERequest, opts ...grpc.CallOption) (*PurgeUEAnswer, error)
}

type s6AProxyClient struct {
	cc grpc.ClientConnInterface
}

func NewS6AProxyClient(cc grpc.ClientConnInterface) S6AProxyClient {
	return &s6AProxyClient{cc}
}

func (c *s6AProxyClient) AuthenticationInformation(ctx context.Context, in *AuthenticationInformationRequest, opts ...grpc.CallOption) (*AuthenticationInformationAnswer, error) {
	out := new(AuthenticationInformationAnswer)
	err := c.cc.Invoke(ctx, "/magma.feg.S6aProxy/AuthenticationInformation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *s6AProxyClient) UpdateLocation(ctx context.Context, in *UpdateLocationRequest, opts ...grpc.CallOption) (*UpdateLocationAnswer, error) {
	out := new(UpdateLocationAnswer)
	err := c.cc.Invoke(ctx, "/magma.feg.S6aProxy/UpdateLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *s6AProxyClient) PurgeUE(ctx context.Context, in *PurgeUERequest, opts ...grpc.CallOption) (*PurgeUEAnswer, error) {
	out := new(PurgeUEAnswer)
	err := c.cc.Invoke(ctx, "/magma.feg.S6aProxy/PurgeUE", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// S6AProxyServer is the server API for S6AProxy service.
type S6AProxyServer interface {
	// Authentication-Information (Code 318)
	AuthenticationInformation(context.Context, *AuthenticationInformationRequest) (*AuthenticationInformationAnswer, error)
	// Update-Location (Code 316)
	UpdateLocation(context.Context, *UpdateLocationRequest) (*UpdateLocationAnswer, error)
	// Purge-UE (Code 321)
	PurgeUE(context.Context, *PurgeUERequest) (*PurgeUEAnswer, error)
}

// UnimplementedS6AProxyServer can be embedded to have forward compatible implementations.
type UnimplementedS6AProxyServer struct {
}

func (*UnimplementedS6AProxyServer) AuthenticationInformation(context.Context, *AuthenticationInformationRequest) (*AuthenticationInformationAnswer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthenticationInformation not implemented")
}
func (*UnimplementedS6AProxyServer) UpdateLocation(context.Context, *UpdateLocationRequest) (*UpdateLocationAnswer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLocation not implemented")
}
func (*UnimplementedS6AProxyServer) PurgeUE(context.Context, *PurgeUERequest) (*PurgeUEAnswer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PurgeUE not implemented")
}

func RegisterS6AProxyServer(s *grpc.Server, srv S6AProxyServer) {
	s.RegisterService(&_S6AProxy_serviceDesc, srv)
}

func _S6AProxy_AuthenticationInformation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthenticationInformationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(S6AProxyServer).AuthenticationInformation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.feg.S6aProxy/AuthenticationInformation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(S6AProxyServer).AuthenticationInformation(ctx, req.(*AuthenticationInformationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _S6AProxy_UpdateLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(S6AProxyServer).UpdateLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.feg.S6aProxy/UpdateLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(S6AProxyServer).UpdateLocation(ctx, req.(*UpdateLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _S6AProxy_PurgeUE_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PurgeUERequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(S6AProxyServer).PurgeUE(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.feg.S6aProxy/PurgeUE",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(S6AProxyServer).PurgeUE(ctx, req.(*PurgeUERequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _S6AProxy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.feg.S6aProxy",
	HandlerType: (*S6AProxyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AuthenticationInformation",
			Handler:    _S6AProxy_AuthenticationInformation_Handler,
		},
		{
			MethodName: "UpdateLocation",
			Handler:    _S6AProxy_UpdateLocation_Handler,
		},
		{
			MethodName: "PurgeUE",
			Handler:    _S6AProxy_PurgeUE_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "feg/protos/s6a_proxy.proto",
}

// S6AGatewayServiceClient is the client API for S6AGatewayService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type S6AGatewayServiceClient interface {
	// Cancel-Location (Code 317)
	CancelLocation(ctx context.Context, in *CancelLocationRequest, opts ...grpc.CallOption) (*CancelLocationAnswer, error)
	// Reset (Code 322)
	Reset(ctx context.Context, in *ResetRequest, opts ...grpc.CallOption) (*ResetAnswer, error)
}

type s6AGatewayServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewS6AGatewayServiceClient(cc grpc.ClientConnInterface) S6AGatewayServiceClient {
	return &s6AGatewayServiceClient{cc}
}

func (c *s6AGatewayServiceClient) CancelLocation(ctx context.Context, in *CancelLocationRequest, opts ...grpc.CallOption) (*CancelLocationAnswer, error) {
	out := new(CancelLocationAnswer)
	err := c.cc.Invoke(ctx, "/magma.feg.S6aGatewayService/CancelLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *s6AGatewayServiceClient) Reset(ctx context.Context, in *ResetRequest, opts ...grpc.CallOption) (*ResetAnswer, error) {
	out := new(ResetAnswer)
	err := c.cc.Invoke(ctx, "/magma.feg.S6aGatewayService/Reset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// S6AGatewayServiceServer is the server API for S6AGatewayService service.
type S6AGatewayServiceServer interface {
	// Cancel-Location (Code 317)
	CancelLocation(context.Context, *CancelLocationRequest) (*CancelLocationAnswer, error)
	// Reset (Code 322)
	Reset(context.Context, *ResetRequest) (*ResetAnswer, error)
}

// UnimplementedS6AGatewayServiceServer can be embedded to have forward compatible implementations.
type UnimplementedS6AGatewayServiceServer struct {
}

func (*UnimplementedS6AGatewayServiceServer) CancelLocation(context.Context, *CancelLocationRequest) (*CancelLocationAnswer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelLocation not implemented")
}
func (*UnimplementedS6AGatewayServiceServer) Reset(context.Context, *ResetRequest) (*ResetAnswer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Reset not implemented")
}

func RegisterS6AGatewayServiceServer(s *grpc.Server, srv S6AGatewayServiceServer) {
	s.RegisterService(&_S6AGatewayService_serviceDesc, srv)
}

func _S6AGatewayService_CancelLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(S6AGatewayServiceServer).CancelLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.feg.S6aGatewayService/CancelLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(S6AGatewayServiceServer).CancelLocation(ctx, req.(*CancelLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _S6AGatewayService_Reset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(S6AGatewayServiceServer).Reset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.feg.S6aGatewayService/Reset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(S6AGatewayServiceServer).Reset(ctx, req.(*ResetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _S6AGatewayService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.feg.S6aGatewayService",
	HandlerType: (*S6AGatewayServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CancelLocation",
			Handler:    _S6AGatewayService_CancelLocation_Handler,
		},
		{
			MethodName: "Reset",
			Handler:    _S6AGatewayService_Reset_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "feg/protos/s6a_proxy.proto",
}
