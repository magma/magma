//
//Copyright 2020 The Magma Authors.
//
//This source code is licensed under the BSD-style license found in the
//LICENSE file in the root directory of this source tree.
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.10.0
// source: feg/protos/csfb.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	protos "magma/orc8r/lib/go/protos"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// section 8.1
type AlertAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
}

func (x *AlertAck) Reset() {
	*x = AlertAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertAck) ProtoMessage() {}

func (x *AlertAck) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertAck.ProtoReflect.Descriptor instead.
func (*AlertAck) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{0}
}

func (x *AlertAck) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

// section 8.2
type AlertReject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi     string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	SgsCause []byte `protobuf:"bytes,2,opt,name=sgs_cause,json=sgsCause,proto3" json:"sgs_cause,omitempty"`
}

func (x *AlertReject) Reset() {
	*x = AlertReject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertReject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertReject) ProtoMessage() {}

func (x *AlertReject) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertReject.ProtoReflect.Descriptor instead.
func (*AlertReject) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{1}
}

func (x *AlertReject) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *AlertReject) GetSgsCause() []byte {
	if x != nil {
		return x.SgsCause
	}
	return nil
}

// section 8.3
type AlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
}

func (x *AlertRequest) Reset() {
	*x = AlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertRequest) ProtoMessage() {}

func (x *AlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertRequest.ProtoReflect.Descriptor instead.
func (*AlertRequest) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{2}
}

func (x *AlertRequest) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

// section 8.4
type DownlinkUnitdata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi                string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	NasMessageContainer []byte `protobuf:"bytes,2,opt,name=nas_message_container,json=nasMessageContainer,proto3" json:"nas_message_container,omitempty"`
}

func (x *DownlinkUnitdata) Reset() {
	*x = DownlinkUnitdata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownlinkUnitdata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownlinkUnitdata) ProtoMessage() {}

func (x *DownlinkUnitdata) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownlinkUnitdata.ProtoReflect.Descriptor instead.
func (*DownlinkUnitdata) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{3}
}

func (x *DownlinkUnitdata) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *DownlinkUnitdata) GetNasMessageContainer() []byte {
	if x != nil {
		return x.NasMessageContainer
	}
	return nil
}

// section 8.5
type EPSDetachAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
}

func (x *EPSDetachAck) Reset() {
	*x = EPSDetachAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EPSDetachAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EPSDetachAck) ProtoMessage() {}

func (x *EPSDetachAck) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EPSDetachAck.ProtoReflect.Descriptor instead.
func (*EPSDetachAck) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{4}
}

func (x *EPSDetachAck) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

// section 8.6
type EPSDetachIndication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi                         string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	MmeName                      string `protobuf:"bytes,2,opt,name=mme_name,json=mmeName,proto3" json:"mme_name,omitempty"`
	ImsiDetachFromEpsServiceType []byte `protobuf:"bytes,3,opt,name=imsi_detach_from_eps_service_type,json=imsiDetachFromEpsServiceType,proto3" json:"imsi_detach_from_eps_service_type,omitempty"`
}

func (x *EPSDetachIndication) Reset() {
	*x = EPSDetachIndication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EPSDetachIndication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EPSDetachIndication) ProtoMessage() {}

func (x *EPSDetachIndication) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EPSDetachIndication.ProtoReflect.Descriptor instead.
func (*EPSDetachIndication) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{5}
}

func (x *EPSDetachIndication) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *EPSDetachIndication) GetMmeName() string {
	if x != nil {
		return x.MmeName
	}
	return ""
}

func (x *EPSDetachIndication) GetImsiDetachFromEpsServiceType() []byte {
	if x != nil {
		return x.ImsiDetachFromEpsServiceType
	}
	return nil
}

// section 8.7
type IMSIDetachAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
}

func (x *IMSIDetachAck) Reset() {
	*x = IMSIDetachAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMSIDetachAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMSIDetachAck) ProtoMessage() {}

func (x *IMSIDetachAck) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMSIDetachAck.ProtoReflect.Descriptor instead.
func (*IMSIDetachAck) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{6}
}

func (x *IMSIDetachAck) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

// section 8.8
type IMSIDetachIndication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi                            string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	MmeName                         string `protobuf:"bytes,2,opt,name=mme_name,json=mmeName,proto3" json:"mme_name,omitempty"`
	ImsiDetachFromNonEpsServiceType []byte `protobuf:"bytes,3,opt,name=imsi_detach_from_non_eps_service_type,json=imsiDetachFromNonEpsServiceType,proto3" json:"imsi_detach_from_non_eps_service_type,omitempty"`
}

func (x *IMSIDetachIndication) Reset() {
	*x = IMSIDetachIndication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMSIDetachIndication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMSIDetachIndication) ProtoMessage() {}

func (x *IMSIDetachIndication) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMSIDetachIndication.ProtoReflect.Descriptor instead.
func (*IMSIDetachIndication) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{7}
}

func (x *IMSIDetachIndication) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *IMSIDetachIndication) GetMmeName() string {
	if x != nil {
		return x.MmeName
	}
	return ""
}

func (x *IMSIDetachIndication) GetImsiDetachFromNonEpsServiceType() []byte {
	if x != nil {
		return x.ImsiDetachFromNonEpsServiceType
	}
	return nil
}

// section 8.9
type LocationUpdateAccept struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi                   string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	LocationAreaIdentifier []byte `protobuf:"bytes,2,opt,name=location_area_identifier,json=locationAreaIdentifier,proto3" json:"location_area_identifier,omitempty"`
	// Types that are assignable to NewIMSITMSI:
	//	*LocationUpdateAccept_NewImsi
	//	*LocationUpdateAccept_NewTmsi
	NewIMSITMSI isLocationUpdateAccept_NewIMSITMSI `protobuf_oneof:"newIMSITMSI"`
}

func (x *LocationUpdateAccept) Reset() {
	*x = LocationUpdateAccept{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationUpdateAccept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationUpdateAccept) ProtoMessage() {}

func (x *LocationUpdateAccept) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationUpdateAccept.ProtoReflect.Descriptor instead.
func (*LocationUpdateAccept) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{8}
}

func (x *LocationUpdateAccept) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *LocationUpdateAccept) GetLocationAreaIdentifier() []byte {
	if x != nil {
		return x.LocationAreaIdentifier
	}
	return nil
}

func (m *LocationUpdateAccept) GetNewIMSITMSI() isLocationUpdateAccept_NewIMSITMSI {
	if m != nil {
		return m.NewIMSITMSI
	}
	return nil
}

func (x *LocationUpdateAccept) GetNewImsi() string {
	if x, ok := x.GetNewIMSITMSI().(*LocationUpdateAccept_NewImsi); ok {
		return x.NewImsi
	}
	return ""
}

func (x *LocationUpdateAccept) GetNewTmsi() []byte {
	if x, ok := x.GetNewIMSITMSI().(*LocationUpdateAccept_NewTmsi); ok {
		return x.NewTmsi
	}
	return nil
}

type isLocationUpdateAccept_NewIMSITMSI interface {
	isLocationUpdateAccept_NewIMSITMSI()
}

type LocationUpdateAccept_NewImsi struct {
	NewImsi string `protobuf:"bytes,3,opt,name=new_imsi,json=newImsi,proto3,oneof"`
}

type LocationUpdateAccept_NewTmsi struct {
	NewTmsi []byte `protobuf:"bytes,4,opt,name=new_tmsi,json=newTmsi,proto3,oneof"`
}

func (*LocationUpdateAccept_NewImsi) isLocationUpdateAccept_NewIMSITMSI() {}

func (*LocationUpdateAccept_NewTmsi) isLocationUpdateAccept_NewIMSITMSI() {}

// section 8.10
type LocationUpdateReject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi                   string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	RejectCause            []byte `protobuf:"bytes,2,opt,name=reject_cause,json=rejectCause,proto3" json:"reject_cause,omitempty"`
	LocationAreaIdentifier []byte `protobuf:"bytes,3,opt,name=location_area_identifier,json=locationAreaIdentifier,proto3" json:"location_area_identifier,omitempty"`
}

func (x *LocationUpdateReject) Reset() {
	*x = LocationUpdateReject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationUpdateReject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationUpdateReject) ProtoMessage() {}

func (x *LocationUpdateReject) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationUpdateReject.ProtoReflect.Descriptor instead.
func (*LocationUpdateReject) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{9}
}

func (x *LocationUpdateReject) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *LocationUpdateReject) GetRejectCause() []byte {
	if x != nil {
		return x.RejectCause
	}
	return nil
}

func (x *LocationUpdateReject) GetLocationAreaIdentifier() []byte {
	if x != nil {
		return x.LocationAreaIdentifier
	}
	return nil
}

// section 8.11
type LocationUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi                      string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	MmeName                   string `protobuf:"bytes,2,opt,name=mme_name,json=mmeName,proto3" json:"mme_name,omitempty"`
	EpsLocationUpdateType     []byte `protobuf:"bytes,3,opt,name=eps_location_update_type,json=epsLocationUpdateType,proto3" json:"eps_location_update_type,omitempty"`
	NewLocationAreaIdentifier []byte `protobuf:"bytes,4,opt,name=new_location_area_identifier,json=newLocationAreaIdentifier,proto3" json:"new_location_area_identifier,omitempty"`
	OldLocationAreaIdentifier []byte `protobuf:"bytes,5,opt,name=old_location_area_identifier,json=oldLocationAreaIdentifier,proto3" json:"old_location_area_identifier,omitempty"`
	TmsiStatus                []byte `protobuf:"bytes,6,opt,name=tmsi_status,json=tmsiStatus,proto3" json:"tmsi_status,omitempty"`
	Imeisv                    []byte `protobuf:"bytes,7,opt,name=imeisv,proto3" json:"imeisv,omitempty"`
	Tai                       []byte `protobuf:"bytes,8,opt,name=tai,proto3" json:"tai,omitempty"`
	ECgi                      []byte `protobuf:"bytes,9,opt,name=e_cgi,json=eCgi,proto3" json:"e_cgi,omitempty"`
}

func (x *LocationUpdateRequest) Reset() {
	*x = LocationUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationUpdateRequest) ProtoMessage() {}

func (x *LocationUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationUpdateRequest.ProtoReflect.Descriptor instead.
func (*LocationUpdateRequest) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{10}
}

func (x *LocationUpdateRequest) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *LocationUpdateRequest) GetMmeName() string {
	if x != nil {
		return x.MmeName
	}
	return ""
}

func (x *LocationUpdateRequest) GetEpsLocationUpdateType() []byte {
	if x != nil {
		return x.EpsLocationUpdateType
	}
	return nil
}

func (x *LocationUpdateRequest) GetNewLocationAreaIdentifier() []byte {
	if x != nil {
		return x.NewLocationAreaIdentifier
	}
	return nil
}

func (x *LocationUpdateRequest) GetOldLocationAreaIdentifier() []byte {
	if x != nil {
		return x.OldLocationAreaIdentifier
	}
	return nil
}

func (x *LocationUpdateRequest) GetTmsiStatus() []byte {
	if x != nil {
		return x.TmsiStatus
	}
	return nil
}

func (x *LocationUpdateRequest) GetImeisv() []byte {
	if x != nil {
		return x.Imeisv
	}
	return nil
}

func (x *LocationUpdateRequest) GetTai() []byte {
	if x != nil {
		return x.Tai
	}
	return nil
}

func (x *LocationUpdateRequest) GetECgi() []byte {
	if x != nil {
		return x.ECgi
	}
	return nil
}

// section 8.12
type MMInformationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi          string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	MmInformation []byte `protobuf:"bytes,2,opt,name=mm_information,json=mmInformation,proto3" json:"mm_information,omitempty"`
}

func (x *MMInformationRequest) Reset() {
	*x = MMInformationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MMInformationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MMInformationRequest) ProtoMessage() {}

func (x *MMInformationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MMInformationRequest.ProtoReflect.Descriptor instead.
func (*MMInformationRequest) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{11}
}

func (x *MMInformationRequest) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *MMInformationRequest) GetMmInformation() []byte {
	if x != nil {
		return x.MmInformation
	}
	return nil
}

// section 8.13
type PagingReject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi     string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	SgsCause []byte `protobuf:"bytes,2,opt,name=sgs_cause,json=sgsCause,proto3" json:"sgs_cause,omitempty"`
}

func (x *PagingReject) Reset() {
	*x = PagingReject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingReject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingReject) ProtoMessage() {}

func (x *PagingReject) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingReject.ProtoReflect.Descriptor instead.
func (*PagingReject) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{12}
}

func (x *PagingReject) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *PagingReject) GetSgsCause() []byte {
	if x != nil {
		return x.SgsCause
	}
	return nil
}

// section 8.14
type PagingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi                   string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	VlrName                string `protobuf:"bytes,2,opt,name=vlr_name,json=vlrName,proto3" json:"vlr_name,omitempty"`
	ServiceIndicator       []byte `protobuf:"bytes,3,opt,name=service_indicator,json=serviceIndicator,proto3" json:"service_indicator,omitempty"`
	Tmsi                   []byte `protobuf:"bytes,4,opt,name=tmsi,proto3" json:"tmsi,omitempty"`
	Cli                    []byte `protobuf:"bytes,5,opt,name=cli,proto3" json:"cli,omitempty"`
	LocationAreaIdentifier []byte `protobuf:"bytes,6,opt,name=location_area_identifier,json=locationAreaIdentifier,proto3" json:"location_area_identifier,omitempty"`
	GlobalCnId             []byte `protobuf:"bytes,7,opt,name=global_cn_id,json=globalCnId,proto3" json:"global_cn_id,omitempty"`
	SsCode                 []byte `protobuf:"bytes,8,opt,name=ss_code,json=ssCode,proto3" json:"ss_code,omitempty"`
	LcsIndicator           []byte `protobuf:"bytes,9,opt,name=lcs_indicator,json=lcsIndicator,proto3" json:"lcs_indicator,omitempty"`
	LcsClientIdentity      []byte `protobuf:"bytes,10,opt,name=lcs_client_identity,json=lcsClientIdentity,proto3" json:"lcs_client_identity,omitempty"`
	ChannelNeeded          []byte `protobuf:"bytes,11,opt,name=channel_needed,json=channelNeeded,proto3" json:"channel_needed,omitempty"`
	EmlppPriority          []byte `protobuf:"bytes,12,opt,name=emlpp_priority,json=emlppPriority,proto3" json:"emlpp_priority,omitempty"`
}

func (x *PagingRequest) Reset() {
	*x = PagingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingRequest) ProtoMessage() {}

func (x *PagingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingRequest.ProtoReflect.Descriptor instead.
func (*PagingRequest) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{13}
}

func (x *PagingRequest) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *PagingRequest) GetVlrName() string {
	if x != nil {
		return x.VlrName
	}
	return ""
}

func (x *PagingRequest) GetServiceIndicator() []byte {
	if x != nil {
		return x.ServiceIndicator
	}
	return nil
}

func (x *PagingRequest) GetTmsi() []byte {
	if x != nil {
		return x.Tmsi
	}
	return nil
}

func (x *PagingRequest) GetCli() []byte {
	if x != nil {
		return x.Cli
	}
	return nil
}

func (x *PagingRequest) GetLocationAreaIdentifier() []byte {
	if x != nil {
		return x.LocationAreaIdentifier
	}
	return nil
}

func (x *PagingRequest) GetGlobalCnId() []byte {
	if x != nil {
		return x.GlobalCnId
	}
	return nil
}

func (x *PagingRequest) GetSsCode() []byte {
	if x != nil {
		return x.SsCode
	}
	return nil
}

func (x *PagingRequest) GetLcsIndicator() []byte {
	if x != nil {
		return x.LcsIndicator
	}
	return nil
}

func (x *PagingRequest) GetLcsClientIdentity() []byte {
	if x != nil {
		return x.LcsClientIdentity
	}
	return nil
}

func (x *PagingRequest) GetChannelNeeded() []byte {
	if x != nil {
		return x.ChannelNeeded
	}
	return nil
}

func (x *PagingRequest) GetEmlppPriority() []byte {
	if x != nil {
		return x.EmlppPriority
	}
	return nil
}

// section 8.15
type ResetAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MmeName string `protobuf:"bytes,1,opt,name=mme_name,json=mmeName,proto3" json:"mme_name,omitempty"`
	VlrName string `protobuf:"bytes,2,opt,name=vlr_name,json=vlrName,proto3" json:"vlr_name,omitempty"`
}

func (x *ResetAck) Reset() {
	*x = ResetAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetAck) ProtoMessage() {}

func (x *ResetAck) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetAck.ProtoReflect.Descriptor instead.
func (*ResetAck) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{14}
}

func (x *ResetAck) GetMmeName() string {
	if x != nil {
		return x.MmeName
	}
	return ""
}

func (x *ResetAck) GetVlrName() string {
	if x != nil {
		return x.VlrName
	}
	return ""
}

// section 8.16
type ResetIndication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MmeName string `protobuf:"bytes,1,opt,name=mme_name,json=mmeName,proto3" json:"mme_name,omitempty"`
	VlrName string `protobuf:"bytes,2,opt,name=vlr_name,json=vlrName,proto3" json:"vlr_name,omitempty"`
}

func (x *ResetIndication) Reset() {
	*x = ResetIndication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetIndication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetIndication) ProtoMessage() {}

func (x *ResetIndication) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetIndication.ProtoReflect.Descriptor instead.
func (*ResetIndication) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{15}
}

func (x *ResetIndication) GetMmeName() string {
	if x != nil {
		return x.MmeName
	}
	return ""
}

func (x *ResetIndication) GetVlrName() string {
	if x != nil {
		return x.VlrName
	}
	return ""
}

// section 8.17
type ServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi                    string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	ServiceIndicator        []byte `protobuf:"bytes,2,opt,name=service_indicator,json=serviceIndicator,proto3" json:"service_indicator,omitempty"`
	Imeisv                  []byte `protobuf:"bytes,3,opt,name=imeisv,proto3" json:"imeisv,omitempty"`
	UeTimeZone              []byte `protobuf:"bytes,4,opt,name=ue_time_zone,json=ueTimeZone,proto3" json:"ue_time_zone,omitempty"`
	MobileStationClassmark2 []byte `protobuf:"bytes,5,opt,name=mobile_station_classmark2,json=mobileStationClassmark2,proto3" json:"mobile_station_classmark2,omitempty"`
	Tai                     []byte `protobuf:"bytes,6,opt,name=tai,proto3" json:"tai,omitempty"`
	ECgi                    []byte `protobuf:"bytes,7,opt,name=e_cgi,json=eCgi,proto3" json:"e_cgi,omitempty"`
	UeEmmMode               []byte `protobuf:"bytes,8,opt,name=ue_emm_mode,json=ueEmmMode,proto3" json:"ue_emm_mode,omitempty"`
}

func (x *ServiceRequest) Reset() {
	*x = ServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceRequest) ProtoMessage() {}

func (x *ServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceRequest.ProtoReflect.Descriptor instead.
func (*ServiceRequest) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{16}
}

func (x *ServiceRequest) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *ServiceRequest) GetServiceIndicator() []byte {
	if x != nil {
		return x.ServiceIndicator
	}
	return nil
}

func (x *ServiceRequest) GetImeisv() []byte {
	if x != nil {
		return x.Imeisv
	}
	return nil
}

func (x *ServiceRequest) GetUeTimeZone() []byte {
	if x != nil {
		return x.UeTimeZone
	}
	return nil
}

func (x *ServiceRequest) GetMobileStationClassmark2() []byte {
	if x != nil {
		return x.MobileStationClassmark2
	}
	return nil
}

func (x *ServiceRequest) GetTai() []byte {
	if x != nil {
		return x.Tai
	}
	return nil
}

func (x *ServiceRequest) GetECgi() []byte {
	if x != nil {
		return x.ECgi
	}
	return nil
}

func (x *ServiceRequest) GetUeEmmMode() []byte {
	if x != nil {
		return x.UeEmmMode
	}
	return nil
}

// section 8.18
type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi             string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	SgsCause         []byte `protobuf:"bytes,2,opt,name=sgs_cause,json=sgsCause,proto3" json:"sgs_cause,omitempty"`
	ErroneousMessage []byte `protobuf:"bytes,3,opt,name=erroneous_message,json=erroneousMessage,proto3" json:"erroneous_message,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{17}
}

func (x *Status) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *Status) GetSgsCause() []byte {
	if x != nil {
		return x.SgsCause
	}
	return nil
}

func (x *Status) GetErroneousMessage() []byte {
	if x != nil {
		return x.ErroneousMessage
	}
	return nil
}

// section 8.19
type TMSIReallocationComplete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
}

func (x *TMSIReallocationComplete) Reset() {
	*x = TMSIReallocationComplete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TMSIReallocationComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMSIReallocationComplete) ProtoMessage() {}

func (x *TMSIReallocationComplete) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMSIReallocationComplete.ProtoReflect.Descriptor instead.
func (*TMSIReallocationComplete) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{18}
}

func (x *TMSIReallocationComplete) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

// section 8.20
type UEActivityIndication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
}

func (x *UEActivityIndication) Reset() {
	*x = UEActivityIndication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UEActivityIndication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UEActivityIndication) ProtoMessage() {}

func (x *UEActivityIndication) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UEActivityIndication.ProtoReflect.Descriptor instead.
func (*UEActivityIndication) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{19}
}

func (x *UEActivityIndication) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

// section 8.21
type UEUnreachable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi     string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	SgsCause []byte `protobuf:"bytes,2,opt,name=sgs_cause,json=sgsCause,proto3" json:"sgs_cause,omitempty"`
}

func (x *UEUnreachable) Reset() {
	*x = UEUnreachable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UEUnreachable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UEUnreachable) ProtoMessage() {}

func (x *UEUnreachable) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UEUnreachable.ProtoReflect.Descriptor instead.
func (*UEUnreachable) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{20}
}

func (x *UEUnreachable) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *UEUnreachable) GetSgsCause() []byte {
	if x != nil {
		return x.SgsCause
	}
	return nil
}

// section 8.22
type UplinkUnitdata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi                    string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	NasMessageContainer     []byte `protobuf:"bytes,2,opt,name=nas_message_container,json=nasMessageContainer,proto3" json:"nas_message_container,omitempty"`
	Imeisv                  []byte `protobuf:"bytes,3,opt,name=imeisv,proto3" json:"imeisv,omitempty"`
	UeTimeZone              []byte `protobuf:"bytes,4,opt,name=ue_time_zone,json=ueTimeZone,proto3" json:"ue_time_zone,omitempty"`
	MobileStationClassmark2 []byte `protobuf:"bytes,5,opt,name=mobile_station_classmark2,json=mobileStationClassmark2,proto3" json:"mobile_station_classmark2,omitempty"`
	Tai                     []byte `protobuf:"bytes,6,opt,name=tai,proto3" json:"tai,omitempty"`
	ECgi                    []byte `protobuf:"bytes,7,opt,name=e_cgi,json=eCgi,proto3" json:"e_cgi,omitempty"`
}

func (x *UplinkUnitdata) Reset() {
	*x = UplinkUnitdata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UplinkUnitdata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UplinkUnitdata) ProtoMessage() {}

func (x *UplinkUnitdata) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UplinkUnitdata.ProtoReflect.Descriptor instead.
func (*UplinkUnitdata) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{21}
}

func (x *UplinkUnitdata) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *UplinkUnitdata) GetNasMessageContainer() []byte {
	if x != nil {
		return x.NasMessageContainer
	}
	return nil
}

func (x *UplinkUnitdata) GetImeisv() []byte {
	if x != nil {
		return x.Imeisv
	}
	return nil
}

func (x *UplinkUnitdata) GetUeTimeZone() []byte {
	if x != nil {
		return x.UeTimeZone
	}
	return nil
}

func (x *UplinkUnitdata) GetMobileStationClassmark2() []byte {
	if x != nil {
		return x.MobileStationClassmark2
	}
	return nil
}

func (x *UplinkUnitdata) GetTai() []byte {
	if x != nil {
		return x.Tai
	}
	return nil
}

func (x *UplinkUnitdata) GetECgi() []byte {
	if x != nil {
		return x.ECgi
	}
	return nil
}

// section 8.23
type ReleaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi     string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	SgsCause []byte `protobuf:"bytes,2,opt,name=sgs_cause,json=sgsCause,proto3" json:"sgs_cause,omitempty"`
}

func (x *ReleaseRequest) Reset() {
	*x = ReleaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseRequest) ProtoMessage() {}

func (x *ReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseRequest.ProtoReflect.Descriptor instead.
func (*ReleaseRequest) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{22}
}

func (x *ReleaseRequest) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *ReleaseRequest) GetSgsCause() []byte {
	if x != nil {
		return x.SgsCause
	}
	return nil
}

// section 8.24
type ServiceAbortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi string `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
}

func (x *ServiceAbortRequest) Reset() {
	*x = ServiceAbortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feg_protos_csfb_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceAbortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAbortRequest) ProtoMessage() {}

func (x *ServiceAbortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feg_protos_csfb_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceAbortRequest.ProtoReflect.Descriptor instead.
func (*ServiceAbortRequest) Descriptor() ([]byte, []int) {
	return file_feg_protos_csfb_proto_rawDescGZIP(), []int{23}
}

func (x *ServiceAbortRequest) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

var File_feg_protos_csfb_proto protoreflect.FileDescriptor

var file_feg_protos_csfb_proto_rawDesc = []byte{
	0x0a, 0x15, 0x66, 0x65, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x73, 0x66,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66,
	0x65, 0x67, 0x1a, 0x19, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1e, 0x0a,
	0x08, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x41, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x22, 0x3e, 0x0a,
	0x0b, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x6d, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x67, 0x73, 0x5f, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x67, 0x73, 0x43, 0x61, 0x75, 0x73, 0x65, 0x22, 0x22, 0x0a,
	0x0c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73,
	0x69, 0x22, 0x5a, 0x0a, 0x10, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x6e, 0x69,
	0x74, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x32, 0x0a, 0x15, 0x6e, 0x61, 0x73,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x6e, 0x61, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x22, 0x22, 0x0a,
	0x0c, 0x45, 0x50, 0x53, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x41, 0x63, 0x6b, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73,
	0x69, 0x22, 0x8d, 0x01, 0x0a, 0x13, 0x45, 0x50, 0x53, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x21, 0x69, 0x6d, 0x73, 0x69,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x63, 0x68, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x65, 0x70, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x1c, 0x69, 0x6d, 0x73, 0x69, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x46,
	0x72, 0x6f, 0x6d, 0x45, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x23, 0x0a, 0x0d, 0x49, 0x4d, 0x53, 0x49, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x41,
	0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x22, 0x95, 0x01, 0x0a, 0x14, 0x49, 0x4d, 0x53, 0x49, 0x44,
	0x65, 0x74, 0x61, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x6d, 0x73, 0x69, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4e,
	0x0a, 0x25, 0x69, 0x6d, 0x73, 0x69, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x63, 0x68, 0x5f, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x6e, 0x6f, 0x6e, 0x5f, 0x65, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1f, 0x69,
	0x6d, 0x73, 0x69, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x46, 0x72, 0x6f, 0x6d, 0x4e, 0x6f, 0x6e,
	0x45, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xad,
	0x01, 0x0a, 0x14, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x38, 0x0a, 0x18, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x16, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x69, 0x6d, 0x73,
	0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x49, 0x6d,
	0x73, 0x69, 0x12, 0x1b, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x74, 0x6d, 0x73, 0x69, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x54, 0x6d, 0x73, 0x69, 0x42,
	0x0d, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x49, 0x4d, 0x53, 0x49, 0x54, 0x4d, 0x53, 0x49, 0x22, 0x87,
	0x01, 0x0a, 0x14, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x61, 0x75, 0x73, 0x65, 0x12, 0x38,
	0x0a, 0x18, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x16, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0xe1, 0x02, 0x0a, 0x15, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6d, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6d, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x37, 0x0a, 0x18, 0x65, 0x70, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x15, 0x65, 0x70, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x1c, 0x6e, 0x65,
	0x77, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x19, 0x6e, 0x65, 0x77, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x1c, 0x6f,
	0x6c, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x72, 0x65, 0x61,
	0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x19, 0x6f, 0x6c, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72,
	0x65, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6d, 0x73, 0x69, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x74, 0x6d, 0x73, 0x69, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x6d, 0x65, 0x69, 0x73, 0x76, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x69,
	0x6d, 0x65, 0x69, 0x73, 0x76, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x69, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x74, 0x61, 0x69, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x5f, 0x63, 0x67, 0x69,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x65, 0x43, 0x67, 0x69, 0x22, 0x51, 0x0a, 0x14,
	0x4d, 0x4d, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x6d, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0d, 0x6d, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x3f, 0x0a, 0x0c, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x6d, 0x73, 0x69, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x67, 0x73, 0x5f, 0x63, 0x61, 0x75, 0x73, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x67, 0x73, 0x43, 0x61, 0x75, 0x73, 0x65,
	0x22, 0xa9, 0x03, 0x0a, 0x0d, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x6c, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x6c, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x6d, 0x73, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x74, 0x6d,
	0x73, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6c, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x63, 0x6c, 0x69, 0x12, 0x38, 0x0a, 0x18, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x16, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x72, 0x65, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x20,
	0x0a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x63, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x6e, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x63, 0x73,
	0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0c, 0x6c, 0x63, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2e,
	0x0a, 0x13, 0x6c, 0x63, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x6c, 0x63, 0x73,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x65, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e,
	0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6d, 0x6c, 0x70, 0x70, 0x5f, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x65,
	0x6d, 0x6c, 0x70, 0x70, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x40, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x41, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6d, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6d, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x6c, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x6c, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x47,
	0x0a, 0x0f, 0x52, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x76, 0x6c, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x6c, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8e, 0x02, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d,
	0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x2b,
	0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x6d, 0x65, 0x69, 0x73, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x69, 0x6d, 0x65,
	0x69, 0x73, 0x76, 0x12, 0x20, 0x0a, 0x0c, 0x75, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x7a,
	0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x75, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x6d, 0x61, 0x72,
	0x6b, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x17, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x6d, 0x61, 0x72, 0x6b,
	0x32, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x74, 0x61, 0x69, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x5f, 0x63, 0x67, 0x69, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x65, 0x43, 0x67, 0x69, 0x12, 0x1e, 0x0a, 0x0b, 0x75, 0x65, 0x5f, 0x65,
	0x6d, 0x6d, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x75,
	0x65, 0x45, 0x6d, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x66, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x67, 0x73, 0x5f, 0x63, 0x61,
	0x75, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x67, 0x73, 0x43, 0x61,
	0x75, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x72, 0x72, 0x6f, 0x6e, 0x65, 0x6f, 0x75, 0x73,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10,
	0x65, 0x72, 0x72, 0x6f, 0x6e, 0x65, 0x6f, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x2e, 0x0a, 0x18, 0x54, 0x4d, 0x53, 0x49, 0x52, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x6d, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69,
	0x22, 0x2a, 0x0a, 0x14, 0x55, 0x45, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x22, 0x40, 0x0a, 0x0d,
	0x55, 0x45, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73,
	0x69, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x67, 0x73, 0x5f, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x67, 0x73, 0x43, 0x61, 0x75, 0x73, 0x65, 0x22, 0xf5,
	0x01, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x6e, 0x69, 0x74, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x32, 0x0a, 0x15, 0x6e, 0x61, 0x73, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x6e, 0x61, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x65,
	0x69, 0x73, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x69, 0x6d, 0x65, 0x69, 0x73,
	0x76, 0x12, 0x20, 0x0a, 0x0c, 0x75, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x7a, 0x6f, 0x6e,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x5a,
	0x6f, 0x6e, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x6d, 0x61, 0x72, 0x6b, 0x32,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x17, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x6d, 0x61, 0x72, 0x6b, 0x32, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x61, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x74, 0x61,
	0x69, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x5f, 0x63, 0x67, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x65, 0x43, 0x67, 0x69, 0x22, 0x41, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x67, 0x73, 0x5f, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x73, 0x67, 0x73, 0x43, 0x61, 0x75, 0x73, 0x65, 0x22, 0x29, 0x0a, 0x13, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x6d, 0x73, 0x69, 0x32, 0x95, 0x07, 0x0a, 0x10, 0x43, 0x53, 0x46, 0x42, 0x46, 0x65, 0x64,
	0x47, 0x57, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x41, 0x63, 0x12, 0x13, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67,
	0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x41, 0x63, 0x6b, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d,
	0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x37,
	0x0a, 0x08, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x6a, 0x12, 0x16, 0x2e, 0x6d, 0x61, 0x67,
	0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72,
	0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0c, 0x45, 0x50, 0x53, 0x44, 0x65,
	0x74, 0x61, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e,
	0x66, 0x65, 0x67, 0x2e, 0x45, 0x50, 0x53, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e,
	0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0d,
	0x49, 0x4d, 0x53, 0x49, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x12, 0x1f, 0x2e,
	0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x49, 0x4d, 0x53, 0x49, 0x44, 0x65,
	0x74, 0x61, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x11,
	0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69,
	0x64, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x11, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61,
	0x2e, 0x66, 0x65, 0x67, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67,
	0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12,
	0x39, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6a, 0x12, 0x17, 0x2e, 0x6d,
	0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72,
	0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0a, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61,
	0x2e, 0x66, 0x65, 0x67, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38,
	0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x14, 0x54, 0x4d, 0x53, 0x49,
	0x52, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70,
	0x12, 0x23, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x54, 0x4d, 0x53,
	0x49, 0x52, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72,
	0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0d, 0x55, 0x45,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x12, 0x1f, 0x2e, 0x6d, 0x61,
	0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x55, 0x45, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x11, 0x2e, 0x6d,
	0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22,
	0x00, 0x12, 0x3a, 0x0a, 0x09, 0x55, 0x45, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x12, 0x18,
	0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x55, 0x45, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61,
	0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x38, 0x0a,
	0x06, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e,
	0x66, 0x65, 0x67, 0x2e, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x6e, 0x69, 0x74, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72,
	0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0b, 0x4d, 0x4d, 0x45, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x41, 0x63, 0x6b, 0x12, 0x13, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66,
	0x65, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x41, 0x63, 0x6b, 0x1a, 0x11, 0x2e, 0x6d, 0x61,
	0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00,
	0x12, 0x45, 0x0a, 0x12, 0x4d, 0x4d, 0x45, 0x52, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66,
	0x65, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72,
	0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x09, 0x4d, 0x4d, 0x45, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e,
	0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x32, 0xdc, 0x06, 0x0a,
	0x12, 0x43, 0x53, 0x46, 0x42, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61,
	0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x3c, 0x0a,
	0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x67, 0x6d,
	0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x6e,
	0x69, 0x74, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f,
	0x72, 0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0b, 0x45,
	0x50, 0x53, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x41, 0x63, 0x12, 0x17, 0x2e, 0x6d, 0x61, 0x67,
	0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x45, 0x50, 0x53, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68,
	0x41, 0x63, 0x6b, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38,
	0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0c, 0x49, 0x4d, 0x53, 0x49,
	0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x41, 0x63, 0x12, 0x18, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61,
	0x2e, 0x66, 0x65, 0x67, 0x2e, 0x49, 0x4d, 0x53, 0x49, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x41,
	0x63, 0x6b, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72,
	0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x11, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x12, 0x1f, 0x2e, 0x6d,
	0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x1a, 0x11, 0x2e,
	0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64,
	0x22, 0x00, 0x12, 0x49, 0x0a, 0x11, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6a, 0x12, 0x1f, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e,
	0x66, 0x65, 0x67, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61,
	0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x48, 0x0a,
	0x10, 0x4d, 0x4d, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x1f, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x4d, 0x4d,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72,
	0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x12, 0x18, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11,
	0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69,
	0x64, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0a, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6d,
	0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x62, 0x6f, 0x72,
	0x74, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e,
	0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0b, 0x56, 0x4c, 0x52, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x41, 0x63, 0x6b, 0x12, 0x13, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65,
	0x67, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x41, 0x63, 0x6b, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67,
	0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12,
	0x45, 0x0a, 0x12, 0x56, 0x4c, 0x52, 0x52, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65,
	0x67, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x38, 0x72, 0x2e,
	0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x09, 0x56, 0x4c, 0x52, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x66, 0x65, 0x67, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x67, 0x6d, 0x61, 0x2e, 0x6f,
	0x72, 0x63, 0x38, 0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x42, 0x1b, 0x5a, 0x19, 0x6d,
	0x61, 0x67, 0x6d, 0x61, 0x2f, 0x66, 0x65, 0x67, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67,
	0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_feg_protos_csfb_proto_rawDescOnce sync.Once
	file_feg_protos_csfb_proto_rawDescData = file_feg_protos_csfb_proto_rawDesc
)

func file_feg_protos_csfb_proto_rawDescGZIP() []byte {
	file_feg_protos_csfb_proto_rawDescOnce.Do(func() {
		file_feg_protos_csfb_proto_rawDescData = protoimpl.X.CompressGZIP(file_feg_protos_csfb_proto_rawDescData)
	})
	return file_feg_protos_csfb_proto_rawDescData
}

var file_feg_protos_csfb_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_feg_protos_csfb_proto_goTypes = []interface{}{
	(*AlertAck)(nil),                 // 0: magma.feg.AlertAck
	(*AlertReject)(nil),              // 1: magma.feg.AlertReject
	(*AlertRequest)(nil),             // 2: magma.feg.AlertRequest
	(*DownlinkUnitdata)(nil),         // 3: magma.feg.DownlinkUnitdata
	(*EPSDetachAck)(nil),             // 4: magma.feg.EPSDetachAck
	(*EPSDetachIndication)(nil),      // 5: magma.feg.EPSDetachIndication
	(*IMSIDetachAck)(nil),            // 6: magma.feg.IMSIDetachAck
	(*IMSIDetachIndication)(nil),     // 7: magma.feg.IMSIDetachIndication
	(*LocationUpdateAccept)(nil),     // 8: magma.feg.LocationUpdateAccept
	(*LocationUpdateReject)(nil),     // 9: magma.feg.LocationUpdateReject
	(*LocationUpdateRequest)(nil),    // 10: magma.feg.LocationUpdateRequest
	(*MMInformationRequest)(nil),     // 11: magma.feg.MMInformationRequest
	(*PagingReject)(nil),             // 12: magma.feg.PagingReject
	(*PagingRequest)(nil),            // 13: magma.feg.PagingRequest
	(*ResetAck)(nil),                 // 14: magma.feg.ResetAck
	(*ResetIndication)(nil),          // 15: magma.feg.ResetIndication
	(*ServiceRequest)(nil),           // 16: magma.feg.ServiceRequest
	(*Status)(nil),                   // 17: magma.feg.Status
	(*TMSIReallocationComplete)(nil), // 18: magma.feg.TMSIReallocationComplete
	(*UEActivityIndication)(nil),     // 19: magma.feg.UEActivityIndication
	(*UEUnreachable)(nil),            // 20: magma.feg.UEUnreachable
	(*UplinkUnitdata)(nil),           // 21: magma.feg.UplinkUnitdata
	(*ReleaseRequest)(nil),           // 22: magma.feg.ReleaseRequest
	(*ServiceAbortRequest)(nil),      // 23: magma.feg.ServiceAbortRequest
	(*protos.Void)(nil),              // 24: magma.orc8r.Void
}
var file_feg_protos_csfb_proto_depIdxs = []int32{
	0,  // 0: magma.feg.CSFBFedGWService.AlertAc:input_type -> magma.feg.AlertAck
	1,  // 1: magma.feg.CSFBFedGWService.AlertRej:input_type -> magma.feg.AlertReject
	5,  // 2: magma.feg.CSFBFedGWService.EPSDetachInd:input_type -> magma.feg.EPSDetachIndication
	7,  // 3: magma.feg.CSFBFedGWService.IMSIDetachInd:input_type -> magma.feg.IMSIDetachIndication
	10, // 4: magma.feg.CSFBFedGWService.LocationUpdateReq:input_type -> magma.feg.LocationUpdateRequest
	12, // 5: magma.feg.CSFBFedGWService.PagingRej:input_type -> magma.feg.PagingReject
	16, // 6: magma.feg.CSFBFedGWService.ServiceReq:input_type -> magma.feg.ServiceRequest
	18, // 7: magma.feg.CSFBFedGWService.TMSIReallocationComp:input_type -> magma.feg.TMSIReallocationComplete
	19, // 8: magma.feg.CSFBFedGWService.UEActivityInd:input_type -> magma.feg.UEActivityIndication
	20, // 9: magma.feg.CSFBFedGWService.UEUnreach:input_type -> magma.feg.UEUnreachable
	21, // 10: magma.feg.CSFBFedGWService.Uplink:input_type -> magma.feg.UplinkUnitdata
	14, // 11: magma.feg.CSFBFedGWService.MMEResetAck:input_type -> magma.feg.ResetAck
	15, // 12: magma.feg.CSFBFedGWService.MMEResetIndication:input_type -> magma.feg.ResetIndication
	17, // 13: magma.feg.CSFBFedGWService.MMEStatus:input_type -> magma.feg.Status
	2,  // 14: magma.feg.CSFBGatewayService.AlertReq:input_type -> magma.feg.AlertRequest
	3,  // 15: magma.feg.CSFBGatewayService.Downlink:input_type -> magma.feg.DownlinkUnitdata
	4,  // 16: magma.feg.CSFBGatewayService.EPSDetachAc:input_type -> magma.feg.EPSDetachAck
	6,  // 17: magma.feg.CSFBGatewayService.IMSIDetachAc:input_type -> magma.feg.IMSIDetachAck
	8,  // 18: magma.feg.CSFBGatewayService.LocationUpdateAcc:input_type -> magma.feg.LocationUpdateAccept
	9,  // 19: magma.feg.CSFBGatewayService.LocationUpdateRej:input_type -> magma.feg.LocationUpdateReject
	11, // 20: magma.feg.CSFBGatewayService.MMInformationReq:input_type -> magma.feg.MMInformationRequest
	13, // 21: magma.feg.CSFBGatewayService.PagingReq:input_type -> magma.feg.PagingRequest
	22, // 22: magma.feg.CSFBGatewayService.ReleaseReq:input_type -> magma.feg.ReleaseRequest
	23, // 23: magma.feg.CSFBGatewayService.ServiceAbort:input_type -> magma.feg.ServiceAbortRequest
	14, // 24: magma.feg.CSFBGatewayService.VLRResetAck:input_type -> magma.feg.ResetAck
	15, // 25: magma.feg.CSFBGatewayService.VLRResetIndication:input_type -> magma.feg.ResetIndication
	17, // 26: magma.feg.CSFBGatewayService.VLRStatus:input_type -> magma.feg.Status
	24, // 27: magma.feg.CSFBFedGWService.AlertAc:output_type -> magma.orc8r.Void
	24, // 28: magma.feg.CSFBFedGWService.AlertRej:output_type -> magma.orc8r.Void
	24, // 29: magma.feg.CSFBFedGWService.EPSDetachInd:output_type -> magma.orc8r.Void
	24, // 30: magma.feg.CSFBFedGWService.IMSIDetachInd:output_type -> magma.orc8r.Void
	24, // 31: magma.feg.CSFBFedGWService.LocationUpdateReq:output_type -> magma.orc8r.Void
	24, // 32: magma.feg.CSFBFedGWService.PagingRej:output_type -> magma.orc8r.Void
	24, // 33: magma.feg.CSFBFedGWService.ServiceReq:output_type -> magma.orc8r.Void
	24, // 34: magma.feg.CSFBFedGWService.TMSIReallocationComp:output_type -> magma.orc8r.Void
	24, // 35: magma.feg.CSFBFedGWService.UEActivityInd:output_type -> magma.orc8r.Void
	24, // 36: magma.feg.CSFBFedGWService.UEUnreach:output_type -> magma.orc8r.Void
	24, // 37: magma.feg.CSFBFedGWService.Uplink:output_type -> magma.orc8r.Void
	24, // 38: magma.feg.CSFBFedGWService.MMEResetAck:output_type -> magma.orc8r.Void
	24, // 39: magma.feg.CSFBFedGWService.MMEResetIndication:output_type -> magma.orc8r.Void
	24, // 40: magma.feg.CSFBFedGWService.MMEStatus:output_type -> magma.orc8r.Void
	24, // 41: magma.feg.CSFBGatewayService.AlertReq:output_type -> magma.orc8r.Void
	24, // 42: magma.feg.CSFBGatewayService.Downlink:output_type -> magma.orc8r.Void
	24, // 43: magma.feg.CSFBGatewayService.EPSDetachAc:output_type -> magma.orc8r.Void
	24, // 44: magma.feg.CSFBGatewayService.IMSIDetachAc:output_type -> magma.orc8r.Void
	24, // 45: magma.feg.CSFBGatewayService.LocationUpdateAcc:output_type -> magma.orc8r.Void
	24, // 46: magma.feg.CSFBGatewayService.LocationUpdateRej:output_type -> magma.orc8r.Void
	24, // 47: magma.feg.CSFBGatewayService.MMInformationReq:output_type -> magma.orc8r.Void
	24, // 48: magma.feg.CSFBGatewayService.PagingReq:output_type -> magma.orc8r.Void
	24, // 49: magma.feg.CSFBGatewayService.ReleaseReq:output_type -> magma.orc8r.Void
	24, // 50: magma.feg.CSFBGatewayService.ServiceAbort:output_type -> magma.orc8r.Void
	24, // 51: magma.feg.CSFBGatewayService.VLRResetAck:output_type -> magma.orc8r.Void
	24, // 52: magma.feg.CSFBGatewayService.VLRResetIndication:output_type -> magma.orc8r.Void
	24, // 53: magma.feg.CSFBGatewayService.VLRStatus:output_type -> magma.orc8r.Void
	27, // [27:54] is the sub-list for method output_type
	0,  // [0:27] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_feg_protos_csfb_proto_init() }
func file_feg_protos_csfb_proto_init() {
	if File_feg_protos_csfb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_feg_protos_csfb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_csfb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertReject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_csfb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_csfb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownlinkUnitdata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_csfb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EPSDetachAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_csfb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EPSDetachIndication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_csfb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMSIDetachAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_csfb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMSIDetachIndication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_csfb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationUpdateAccept); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_csfb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationUpdateReject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_csfb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_csfb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MMInformationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_csfb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingReject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_csfb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_csfb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_csfb_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetIndication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_csfb_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_csfb_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_csfb_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TMSIReallocationComplete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_csfb_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UEActivityIndication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_csfb_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UEUnreachable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_csfb_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UplinkUnitdata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_csfb_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feg_protos_csfb_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceAbortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_feg_protos_csfb_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*LocationUpdateAccept_NewImsi)(nil),
		(*LocationUpdateAccept_NewTmsi)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_feg_protos_csfb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_feg_protos_csfb_proto_goTypes,
		DependencyIndexes: file_feg_protos_csfb_proto_depIdxs,
		MessageInfos:      file_feg_protos_csfb_proto_msgTypes,
	}.Build()
	File_feg_protos_csfb_proto = out.File
	file_feg_protos_csfb_proto_rawDesc = nil
	file_feg_protos_csfb_proto_goTypes = nil
	file_feg_protos_csfb_proto_depIdxs = nil
}
