---

- name: list all rds instances
  rds_instance_info:
  register: dbgRds

- name: delete rds instances
  command: aws rds delete-db-instance --db-instance-identifier "{{ item }}" --skip-final-snapshot
  environment:
    AWS_ACCESS_KEY: "{{ awsAccessKey }}"
    AWS_SECRET_KEY: "{{ awsSecretKey }}"
    AWS_DEFAULT_REGION: "{{ awsOrc8rRegion }}"
  with_items:
    - "{{ orc8rDbs }}"
  register: result
  failed_when:
    - result.stderr != ''
    - not 'DBInstanceNotFound' in result.stderr

- name: wait for database deletion before deleting subnet group
  command: aws rds wait db-instance-deleted --db-instance-identifier "{{ item }}"
  with_items:
    - "{{ orc8rDbs }}"

- name: delete rds subnet group
  command: aws rds delete-db-subnet-group --db-subnet-group-name "{{ orc8rRdsSubnetGroup }}"
  register: result
  failed_when:
    - result.stderr != ''
    - not 'DBSubnetGroupNotFoundFault' in result.stderr

- name: delete rds event notifications
  command: aws rds delete-event-subscription --subscription-name "{{ orc8rDbNotifs }}"
  tags: delrds
  register: result
  failed_when:
    - result.stderr != ''
    - not 'SubscriptionNotFound' in result.stderr
