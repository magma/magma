################################################################################
# Copyright 2020 The Magma Authors.

# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
################################################################################

# instances price $0.2564/hour
# 55 % cheaper than production
# eks instance costs: $0.1664/hour 33 % cheaper than 3 t3.large
# db instance cost: $0.018/hour 89 % cheaper than m4/m5 large
# elastic search cost: $0.072/hour  51 % cheaper
module "orc8r" {

  eks_worker_groups =[ {
        name                 = "wg-1"
        instance_type        = "t3.small"
        asg_desired_capacity = 8
        asg_min_size         = 1
        asg_max_size         = 8
        autoscaling_enabled  = false
        kubelet_extra_args = "" // object types must be identical (see thanos_worker_groups)
  }]
  # Specify arm based ami as t4g instance types are arm based
  # eks_worker_ami = "amazon-eks-arm64-node-1.17-v20210722"
  # Change this to pull from github with a specified ref
  source = "{{ orc8rSource }}"

  region = "{{ awsOrc8rRegion }}"

  orc8r_db_password           = "{{ orc8rDbPassword }}" # must be at least 8 characters
  orc8r_db_instance_class     = "db.t3.micro"

  secretsmanager_orc8r_secret = "{{ orc8rTfSecrets }}"
  orc8r_domain_name           = "{{ orc8rDomainName }}"



  vpc_name     = "{{ orc8rTfVpc }}"
  cluster_name = "{{ orc8rTfCluster }}"

  deploy_elasticsearch          = true
  elasticsearch_domain_name     = "{{ orc8rTfEs }}"
  elasticsearch_version         = "7.7"
  elasticsearch_instance_type   = "t3.small.elasticsearch"
  elasticsearch_instance_count  = 2
  elasticsearch_az_count        = 2
  elasticsearch_ebs_enabled     = true
  elasticsearch_ebs_volume_size = 32
  elasticsearch_ebs_volume_type = "gp2"

  deploy_elasticsearch_service_linked_role = "{{ varFirstInstall }}"

}

module "orc8r-app" {
  source = "{{ orc8rAppSource }}"

  region = "{{ awsOrc8rRegion }}"

  orc8r_domain_name     = module.orc8r.orc8r_domain_name
  orc8r_route53_zone_id = module.orc8r.route53_zone_id
  external_dns_role_arn = module.orc8r.external_dns_role_arn

  secretsmanager_orc8r_name = module.orc8r.secretsmanager_secret_name
  seed_certs_dir            = "{{ dirSecretsLocal }}"

  orc8r_db_host    = module.orc8r.orc8r_db_host
  orc8r_db_port    = module.orc8r.orc8r_db_port
  orc8r_db_dialect = module.orc8r.orc8r_db_dialect
  orc8r_db_name    = module.orc8r.orc8r_db_name
  orc8r_db_user    = module.orc8r.orc8r_db_user
  orc8r_db_pass    = module.orc8r.orc8r_db_pass

  # Note that this can be any container registry provider -- the example below
  # provides the URL format for Docker Hub, where the user and pass are your
  # Docker Hub username and access token, respectively
  docker_registry = "linuxfoundation.jfrog.io/magma-docker"
  docker_user = ""
  docker_pass = ""

  # Note that this can be any Helm chart repo provider -- the example below
  # provides the URL format for using a raw GitHub repo, where the user and
  # pass are your GitHub username and access token, respectively
  helm_repo = "https://linuxfoundation.jfrog.io/artifactory/magma-helm-prod/"
  helm_user = ""
  helm_pass = ""

  eks_cluster_id = module.orc8r.eks_cluster_id

  efs_file_system_id       = module.orc8r.efs_file_system_id
  efs_provisioner_role_arn = module.orc8r.efs_provisioner_role_arn

  elasticsearch_endpoint = module.orc8r.es_endpoint

  orc8r_deployment_type = "fwa"
  orc8r_tag           = "{{ orc8rLabel }}"
}

output "nameservers" {
  value = module.orc8r.route53_nameservers
}
