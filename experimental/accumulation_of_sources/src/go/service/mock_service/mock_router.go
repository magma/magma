// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/magma/magma/src/go/service (interfaces: Router)

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	sctpd "github.com/magma/magma/src/go/protos/magma/sctpd"
)

// MockRouter is a mock of Router interface.
type MockRouter struct {
	ctrl     *gomock.Controller
	recorder *MockRouterMockRecorder
}

// MockRouterMockRecorder is the mock recorder for MockRouter.
type MockRouterMockRecorder struct {
	mock *MockRouter
}

// NewMockRouter creates a new mock instance.
func NewMockRouter(ctrl *gomock.Controller) *MockRouter {
	mock := &MockRouter{ctrl: ctrl}
	mock.recorder = &MockRouterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRouter) EXPECT() *MockRouterMockRecorder {
	return m.recorder
}

// SctpdDownlinkClient mocks base method.
func (m *MockRouter) SctpdDownlinkClient() sctpd.SctpdDownlinkClient {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SctpdDownlinkClient")
	ret0, _ := ret[0].(sctpd.SctpdDownlinkClient)
	return ret0
}

// SctpdDownlinkClient indicates an expected call of SctpdDownlinkClient.
func (mr *MockRouterMockRecorder) SctpdDownlinkClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SctpdDownlinkClient", reflect.TypeOf((*MockRouter)(nil).SctpdDownlinkClient))
}

// SctpdUplinkClient mocks base method.
func (m *MockRouter) SctpdUplinkClient() sctpd.SctpdUplinkClient {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SctpdUplinkClient")
	ret0, _ := ret[0].(sctpd.SctpdUplinkClient)
	return ret0
}

// SctpdUplinkClient indicates an expected call of SctpdUplinkClient.
func (mr *MockRouterMockRecorder) SctpdUplinkClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SctpdUplinkClient", reflect.TypeOf((*MockRouter)(nil).SctpdUplinkClient))
}
